{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.nextElected = nextElected;\nexports.validators = validators;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction nextElected(instanceId, api) {\n  return (0, _util.memo)(instanceId, function () {\n    return api.query.staking.erasStakers ? api.derive.session.indexes().pipe( // only populate for next era in the last session, so track both here - entries are not\n    // subscriptions, so we need a trigger - currentIndex acts as that trigger to refresh\n    (0, _operators.switchMap)(function (_ref) {\n      var currentEra = _ref.currentEra;\n      return api.query.staking.erasStakers.keys(currentEra);\n    }), (0, _operators.map)(function (keys) {\n      return keys.map(function (key) {\n        return key.args[1];\n      });\n    })) : api.query.staking.currentElected();\n  });\n}\n/**\n * @description Retrieve latest list of validators\n */\n\n\nfunction validators(instanceId, api) {\n  return (0, _util.memo)(instanceId, function () {\n    return (// Sadly the node-template is (for some obscure reason) not comprehensive, so while the derive works\n      // in all actual real-world deployed chains, it does create some confusion for limited template chains\n      // NOTE: Not doing multi queries here, since we have validators as a single in the derived newHead\n      (0, _rxjs.combineLatest)([api.query.session ? api.query.session.validators() : (0, _rxjs.of)([]), api.query.staking ? api.derive.staking.nextElected() : (0, _rxjs.of)([])]).pipe((0, _operators.map)(function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n            validators = _ref3[0],\n            nextElected = _ref3[1];\n\n        return {\n          nextElected: nextElected.length ? nextElected : validators,\n          validators: validators\n        };\n      }))\n    );\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/staking/validators.js"],"names":["Object","defineProperty","exports","value","nextElected","validators","_rxjs","require","_operators","_util","instanceId","api","memo","query","staking","erasStakers","derive","session","indexes","pipe","switchMap","currentEra","keys","map","key","args","currentElected","combineLatest","of","length"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,WAAR,GAAsBA,WAAtB;AACAF,OAAO,CAACG,UAAR,GAAqBA,UAArB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,gBAAD,CAAxB;;AAEA,IAAIE,KAAK,GAAGF,OAAO,CAAC,SAAD,CAAnB,C,CAEA;AACA;;;AACA,SAASH,WAAT,CAAqBM,UAArB,EAAiCC,GAAjC,EAAsC;AACpC,SAAO,CAAC,GAAGF,KAAK,CAACG,IAAV,EAAgBF,UAAhB,EAA4B;AAAA,WAAMC,GAAG,CAACE,KAAJ,CAAUC,OAAV,CAAkBC,WAAlB,GAAgCJ,GAAG,CAACK,MAAJ,CAAWC,OAAX,CAAmBC,OAAnB,GAA6BC,IAA7B,EAAmC;AAC5G;AACA,KAAC,GAAGX,UAAU,CAACY,SAAf,EAA0B;AAAA,UACxBC,UADwB,QACxBA,UADwB;AAAA,aAEpBV,GAAG,CAACE,KAAJ,CAAUC,OAAV,CAAkBC,WAAlB,CAA8BO,IAA9B,CAAmCD,UAAnC,CAFoB;AAAA,KAA1B,CAFyE,EAIlB,CAAC,GAAGb,UAAU,CAACe,GAAf,EAAoB,UAAAD,IAAI;AAAA,aAAIA,IAAI,CAACC,GAAL,CAAS,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,CAAS,CAAT,CAAJ;AAAA,OAAZ,CAAJ;AAAA,KAAxB,CAJkB,CAAhC,GAI2Ed,GAAG,CAACE,KAAJ,CAAUC,OAAV,CAAkBY,cAAlB,EAJjF;AAAA,GAA5B,CAAP;AAKD;AACD;AACA;AACA;;;AAGA,SAASrB,UAAT,CAAoBK,UAApB,EAAgCC,GAAhC,EAAqC;AACnC,SAAO,CAAC,GAAGF,KAAK,CAACG,IAAV,EAAgBF,UAAhB,EAA4B;AAAA,WAAM;AACzC;AACA;AACA,OAAC,GAAGJ,KAAK,CAACqB,aAAV,EAAyB,CAAChB,GAAG,CAACE,KAAJ,CAAUI,OAAV,GAAoBN,GAAG,CAACE,KAAJ,CAAUI,OAAV,CAAkBZ,UAAlB,EAApB,GAAqD,CAAC,GAAGC,KAAK,CAACsB,EAAV,EAAc,EAAd,CAAtD,EAAyEjB,GAAG,CAACE,KAAJ,CAAUC,OAAV,GAAoBH,GAAG,CAACK,MAAJ,CAAWF,OAAX,CAAmBV,WAAnB,EAApB,GAAuD,CAAC,GAAGE,KAAK,CAACsB,EAAV,EAAc,EAAd,CAAhI,CAAzB,EAA6KT,IAA7K,CAAkL,CAAC,GAAGX,UAAU,CAACe,GAAf,EAAoB;AAAA;AAAA,YAAElB,UAAF;AAAA,YAAcD,WAAd;;AAAA,eAAgC;AACpOA,UAAAA,WAAW,EAAEA,WAAW,CAACyB,MAAZ,GAAqBzB,WAArB,GAAmCC,UADoL;AAEpOA,UAAAA,UAAU,EAAVA;AAFoO,SAAhC;AAAA,OAApB,CAAlL;AAHmC;AAAA,GAA5B,CAAP;AAOD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.nextElected = nextElected;\nexports.validators = validators;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction nextElected(instanceId, api) {\n  return (0, _util.memo)(instanceId, () => api.query.staking.erasStakers ? api.derive.session.indexes().pipe( // only populate for next era in the last session, so track both here - entries are not\n  // subscriptions, so we need a trigger - currentIndex acts as that trigger to refresh\n  (0, _operators.switchMap)(({\n    currentEra\n  }) => api.query.staking.erasStakers.keys(currentEra)), (0, _operators.map)(keys => keys.map(key => key.args[1]))) : api.query.staking.currentElected());\n}\n/**\n * @description Retrieve latest list of validators\n */\n\n\nfunction validators(instanceId, api) {\n  return (0, _util.memo)(instanceId, () => // Sadly the node-template is (for some obscure reason) not comprehensive, so while the derive works\n  // in all actual real-world deployed chains, it does create some confusion for limited template chains\n  // NOTE: Not doing multi queries here, since we have validators as a single in the derived newHead\n  (0, _rxjs.combineLatest)([api.query.session ? api.query.session.validators() : (0, _rxjs.of)([]), api.query.staking ? api.derive.staking.nextElected() : (0, _rxjs.of)([])]).pipe((0, _operators.map)(([validators, nextElected]) => ({\n    nextElected: nextElected.length ? nextElected : validators,\n    validators\n  }))));\n}"]},"metadata":{},"sourceType":"script"}