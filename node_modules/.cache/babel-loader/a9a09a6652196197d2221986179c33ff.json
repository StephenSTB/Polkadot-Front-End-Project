{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.CID_POW = exports.CID_GRPA = exports.CID_BABE = exports.CID_AURA = void 0;\n\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _U = _interopRequireDefault(require(\"../primitive/U32\")); // Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// there are all reversed since it is actually encoded as u32, LE,\n// this means that FRNK has the bytes as KNRF\n\n\nvar CID_AURA = 0x61727561; // 'aura'\n\nexports.CID_AURA = CID_AURA;\nvar CID_BABE = 0x45424142; // 'BABE'\n\nexports.CID_BABE = CID_BABE;\nvar CID_GRPA = 0x4b4e5246; // 'FRNK' (don't ask, used to be afg1)\n\nexports.CID_GRPA = CID_GRPA;\nvar CID_POW = 0x5f776f70; // 'pow_'\n\nexports.CID_POW = CID_POW;\n/**\n * @name ConsensusEngineId\n * @description\n * A 4-byte identifier (actually a [u8; 4]) identifying the engine, e.g. for Aura it would be [b'a', b'u', b'r', b'a']\n */\n\nvar ConsensusEngineId = /*#__PURE__*/function (_U$default) {\n  _inherits(ConsensusEngineId, _U$default);\n\n  var _super = _createSuper(ConsensusEngineId);\n\n  function ConsensusEngineId() {\n    _classCallCheck(this, ConsensusEngineId);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ConsensusEngineId, [{\n    key: \"_getAuraAuthor\",\n    value: function _getAuraAuthor(bytes, sessionValidators) {\n      return sessionValidators[this.registry.createType('RawAuraPreDigest', bytes.toU8a(true)).slotNumber.mod(new _bn.default(sessionValidators.length)).toNumber()];\n    }\n  }, {\n    key: \"_getBabeAuthor\",\n    value: function _getBabeAuthor(bytes, sessionValidators) {\n      var digest = this.registry.createType('RawBabePreDigestCompat', bytes.toU8a(true));\n      return sessionValidators[digest.value.toNumber()];\n    }\n  }, {\n    key: \"_getPowAuthor\",\n    value: function _getPowAuthor(bytes) {\n      return this.registry.createType('AccountId', bytes);\n    }\n    /**\n     * @description From the input bytes, decode into an author\n     */\n\n  }, {\n    key: \"extractAuthor\",\n    value: function extractAuthor(bytes, sessionValidators) {\n      if (sessionValidators === null || sessionValidators === void 0 ? void 0 : sessionValidators.length) {\n        if (this.isAura) {\n          return this._getAuraAuthor(bytes, sessionValidators);\n        } else if (this.isBabe) {\n          return this._getBabeAuthor(bytes, sessionValidators);\n        }\n      }\n\n      if (this.isPow) {\n        return this._getPowAuthor(bytes);\n      }\n\n      return undefined;\n    }\n    /**\n     * @description Override the default toString to return a 4-byte string\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return ConsensusEngineId.idToString(this);\n    }\n  }, {\n    key: \"isAura\",\n\n    /**\n     * @description `true` if the engine matches aura\n     */\n    get: function get() {\n      return this.eq(CID_AURA);\n    }\n    /**\n     * @description `true` is the engine matches babe\n     */\n\n  }, {\n    key: \"isBabe\",\n    get: function get() {\n      return this.eq(CID_BABE);\n    }\n    /**\n     * @description `true` is the engine matches grandpa\n     */\n\n  }, {\n    key: \"isGrandpa\",\n    get: function get() {\n      return this.eq(CID_GRPA);\n    }\n    /**\n     * @description `true` is the engine matches pow\n     */\n\n  }, {\n    key: \"isPow\",\n    get: function get() {\n      return this.eq(CID_POW);\n    }\n  }], [{\n    key: \"idToString\",\n    value: function idToString(input) {\n      return (0, _util.bnToBn)(input).toArray('le').map(function (code) {\n        return String.fromCharCode(code);\n      }).join('');\n    }\n  }, {\n    key: \"stringToId\",\n    value: function stringToId(input) {\n      return input.split('').reverse().reduce(function (result, char) {\n        return result * 256 + char.charCodeAt(0);\n      }, 0);\n    }\n  }]);\n\n  return ConsensusEngineId;\n}(_U.default);\n\nexports.default = ConsensusEngineId;","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/types/generic/ConsensusEngineId.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","CID_POW","CID_GRPA","CID_BABE","CID_AURA","_bn","_util","_U","ConsensusEngineId","bytes","sessionValidators","registry","createType","toU8a","slotNumber","mod","length","toNumber","digest","isAura","_getAuraAuthor","isBabe","_getBabeAuthor","isPow","_getPowAuthor","undefined","idToString","eq","input","bnToBn","toArray","map","code","String","fromCharCode","join","split","reverse","reduce","result","char","charCodeAt"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.CID_POW = exports.CID_GRPA = exports.CID_BABE = exports.CID_AURA = void 0;\n\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _U = _interopRequireDefault(require(\"../primitive/U32\"));\n\n// Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// there are all reversed since it is actually encoded as u32, LE,\n// this means that FRNK has the bytes as KNRF\nconst CID_AURA = 0x61727561; // 'aura'\n\nexports.CID_AURA = CID_AURA;\nconst CID_BABE = 0x45424142; // 'BABE'\n\nexports.CID_BABE = CID_BABE;\nconst CID_GRPA = 0x4b4e5246; // 'FRNK' (don't ask, used to be afg1)\n\nexports.CID_GRPA = CID_GRPA;\nconst CID_POW = 0x5f776f70; // 'pow_'\n\nexports.CID_POW = CID_POW;\n\n/**\n * @name ConsensusEngineId\n * @description\n * A 4-byte identifier (actually a [u8; 4]) identifying the engine, e.g. for Aura it would be [b'a', b'u', b'r', b'a']\n */\nclass ConsensusEngineId extends _U.default {\n  static idToString(input) {\n    return (0, _util.bnToBn)(input).toArray('le').map(code => String.fromCharCode(code)).join('');\n  }\n\n  static stringToId(input) {\n    return input.split('').reverse().reduce((result, char) => result * 256 + char.charCodeAt(0), 0);\n  }\n  /**\n   * @description `true` if the engine matches aura\n   */\n\n\n  get isAura() {\n    return this.eq(CID_AURA);\n  }\n  /**\n   * @description `true` is the engine matches babe\n   */\n\n\n  get isBabe() {\n    return this.eq(CID_BABE);\n  }\n  /**\n   * @description `true` is the engine matches grandpa\n   */\n\n\n  get isGrandpa() {\n    return this.eq(CID_GRPA);\n  }\n  /**\n   * @description `true` is the engine matches pow\n   */\n\n\n  get isPow() {\n    return this.eq(CID_POW);\n  }\n\n  _getAuraAuthor(bytes, sessionValidators) {\n    return sessionValidators[this.registry.createType('RawAuraPreDigest', bytes.toU8a(true)).slotNumber.mod(new _bn.default(sessionValidators.length)).toNumber()];\n  }\n\n  _getBabeAuthor(bytes, sessionValidators) {\n    const digest = this.registry.createType('RawBabePreDigestCompat', bytes.toU8a(true));\n    return sessionValidators[digest.value.toNumber()];\n  }\n\n  _getPowAuthor(bytes) {\n    return this.registry.createType('AccountId', bytes);\n  }\n  /**\n   * @description From the input bytes, decode into an author\n   */\n\n\n  extractAuthor(bytes, sessionValidators) {\n    if (sessionValidators === null || sessionValidators === void 0 ? void 0 : sessionValidators.length) {\n      if (this.isAura) {\n        return this._getAuraAuthor(bytes, sessionValidators);\n      } else if (this.isBabe) {\n        return this._getBabeAuthor(bytes, sessionValidators);\n      }\n    }\n\n    if (this.isPow) {\n      return this._getPowAuthor(bytes);\n    }\n\n    return undefined;\n  }\n  /**\n   * @description Override the default toString to return a 4-byte string\n   */\n\n\n  toString() {\n    return ConsensusEngineId.idToString(this);\n  }\n\n}\n\nexports.default = ConsensusEngineId;"]},"metadata":{},"sourceType":"script"}