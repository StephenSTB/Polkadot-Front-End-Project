{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.EXTRINSIC_VERSION = void 0;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _Struct = _interopRequireDefault(require(\"../../codec/Struct\")); // Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nvar EXTRINSIC_VERSION = 4;\nexports.EXTRINSIC_VERSION = EXTRINSIC_VERSION;\n/**\n * @name GenericExtrinsicV4\n * @description\n * The third generation of compact extrinsics\n */\n\nvar ExtrinsicV4 = /*#__PURE__*/function (_Struct$default) {\n  _inherits(ExtrinsicV4, _Struct$default);\n\n  var _super = _createSuper(ExtrinsicV4);\n\n  function ExtrinsicV4(registry, value) {\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        isSigned = _ref.isSigned;\n\n    _classCallCheck(this, ExtrinsicV4);\n\n    return _super.call(this, registry, {\n      signature: 'ExtrinsicSignatureV4',\n      // eslint-disable-next-line sort-keys\n      method: 'Call'\n    }, ExtrinsicV4.decodeExtrinsic(registry, value, isSigned));\n  }\n  /** @internal */\n\n\n  _createClass(ExtrinsicV4, [{\n    key: \"addSignature\",\n\n    /**\n     * @description Add an [[ExtrinsicSignatureV4]] to the extrinsic (already generated)\n     */\n    value: function addSignature(signer, signature, payload) {\n      this.signature.addSignature(signer, signature, payload);\n      return this;\n    }\n    /**\n     * @description Sign the extrinsic with a specific keypair\n     */\n\n  }, {\n    key: \"sign\",\n    value: function sign(account, options) {\n      this.signature.sign(this.method, account, options);\n      return this;\n    }\n    /**\n     * @describe Adds a fake signature to the extrinsic\n     */\n\n  }, {\n    key: \"signFake\",\n    value: function signFake(signer, options) {\n      this.signature.signFake(this.method, signer, options);\n      return this;\n    }\n  }, {\n    key: \"encodedLength\",\n\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get: function get() {\n      return this.toU8a().length;\n    }\n    /**\n     * @description The [[Call]] this extrinsic wraps\n     */\n\n  }, {\n    key: \"method\",\n    get: function get() {\n      return this.get('method');\n    }\n    /**\n     * @description The [[ExtrinsicSignatureV4]]\n     */\n\n  }, {\n    key: \"signature\",\n    get: function get() {\n      return this.get('signature');\n    }\n    /**\n     * @description The version for the signature\n     */\n\n  }, {\n    key: \"version\",\n    get: function get() {\n      return EXTRINSIC_VERSION;\n    }\n  }], [{\n    key: \"decodeExtrinsic\",\n    value: function decodeExtrinsic(registry, value) {\n      var isSigned = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (value instanceof ExtrinsicV4) {\n        return value;\n      } else if (value instanceof registry.createClass('Call')) {\n        return {\n          method: value\n        };\n      } else if ((0, _util.isU8a)(value)) {\n        // here we decode manually since we need to pull through the version information\n        var signature = registry.createType('ExtrinsicSignatureV4', value, {\n          isSigned: isSigned\n        });\n        var method = registry.createType('Call', value.subarray(signature.encodedLength));\n        return {\n          method: method,\n          signature: signature\n        };\n      }\n\n      return value || {};\n    }\n  }]);\n\n  return ExtrinsicV4;\n}(_Struct.default);\n\nexports.default = ExtrinsicV4;","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/types/extrinsic/v4/Extrinsic.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","EXTRINSIC_VERSION","_util","_Struct","ExtrinsicV4","registry","isSigned","signature","method","decodeExtrinsic","signer","payload","addSignature","account","options","sign","signFake","toU8a","length","get","createClass","isU8a","createType","subarray","encodedLength"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.EXTRINSIC_VERSION = void 0;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _Struct = _interopRequireDefault(require(\"../../codec/Struct\"));\n\n// Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst EXTRINSIC_VERSION = 4;\nexports.EXTRINSIC_VERSION = EXTRINSIC_VERSION;\n\n/**\n * @name GenericExtrinsicV4\n * @description\n * The third generation of compact extrinsics\n */\nclass ExtrinsicV4 extends _Struct.default {\n  constructor(registry, value, {\n    isSigned\n  } = {}) {\n    super(registry, {\n      signature: 'ExtrinsicSignatureV4',\n      // eslint-disable-next-line sort-keys\n      method: 'Call'\n    }, ExtrinsicV4.decodeExtrinsic(registry, value, isSigned));\n  }\n  /** @internal */\n\n\n  static decodeExtrinsic(registry, value, isSigned = false) {\n    if (value instanceof ExtrinsicV4) {\n      return value;\n    } else if (value instanceof registry.createClass('Call')) {\n      return {\n        method: value\n      };\n    } else if ((0, _util.isU8a)(value)) {\n      // here we decode manually since we need to pull through the version information\n      const signature = registry.createType('ExtrinsicSignatureV4', value, {\n        isSigned\n      });\n      const method = registry.createType('Call', value.subarray(signature.encodedLength));\n      return {\n        method,\n        signature\n      };\n    }\n\n    return value || {};\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description The [[Call]] this extrinsic wraps\n   */\n\n\n  get method() {\n    return this.get('method');\n  }\n  /**\n   * @description The [[ExtrinsicSignatureV4]]\n   */\n\n\n  get signature() {\n    return this.get('signature');\n  }\n  /**\n   * @description The version for the signature\n   */\n\n\n  get version() {\n    return EXTRINSIC_VERSION;\n  }\n  /**\n   * @description Add an [[ExtrinsicSignatureV4]] to the extrinsic (already generated)\n   */\n\n\n  addSignature(signer, signature, payload) {\n    this.signature.addSignature(signer, signature, payload);\n    return this;\n  }\n  /**\n   * @description Sign the extrinsic with a specific keypair\n   */\n\n\n  sign(account, options) {\n    this.signature.sign(this.method, account, options);\n    return this;\n  }\n  /**\n   * @describe Adds a fake signature to the extrinsic\n   */\n\n\n  signFake(signer, options) {\n    this.signature.signFake(this.method, signer, options);\n    return this;\n  }\n\n}\n\nexports.default = ExtrinsicV4;"]},"metadata":{},"sourceType":"script"}