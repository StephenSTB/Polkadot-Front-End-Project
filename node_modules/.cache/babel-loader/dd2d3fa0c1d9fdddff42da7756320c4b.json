{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.account = account;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _util2 = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction calcBalances(api, _ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      accountId = _ref2[0],\n      _ref2$ = _slicedToArray(_ref2[1], 5),\n      freeBalance = _ref2$[0],\n      reservedBalance = _ref2$[1],\n      frozenFee = _ref2$[2],\n      frozenMisc = _ref2$[3],\n      accountNonce = _ref2$[4];\n\n  return {\n    accountId: accountId,\n    accountNonce: accountNonce,\n    freeBalance: freeBalance,\n    frozenFee: frozenFee,\n    frozenMisc: frozenMisc,\n    reservedBalance: reservedBalance,\n    votingBalance: api.registry.createType('Balance', freeBalance.toBn())\n  };\n} // old\n\n\nfunction queryBalancesFree(api, accountId) {\n  return api.queryMulti([[api.query.balances.freeBalance, accountId], [api.query.balances.reservedBalance, accountId], [api.query.system.accountNonce, accountId]]).pipe((0, _operators.map)(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 3),\n        freeBalance = _ref4[0],\n        reservedBalance = _ref4[1],\n        accountNonce = _ref4[2];\n\n    return [freeBalance, reservedBalance, api.registry.createType('Balance'), api.registry.createType('Balance'), accountNonce];\n  }));\n}\n\nfunction queryBalancesAccount(api, accountId) {\n  return api.queryMulti([[api.query.balances.account, accountId], [api.query.system.accountNonce, accountId]]).pipe((0, _operators.map)(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        _ref6$ = _ref6[0],\n        feeFrozen = _ref6$.feeFrozen,\n        free = _ref6$.free,\n        miscFrozen = _ref6$.miscFrozen,\n        reserved = _ref6$.reserved,\n        accountNonce = _ref6[1];\n\n    return [free, reserved, feeFrozen, miscFrozen, accountNonce];\n  }));\n}\n\nfunction queryCurrent(api, accountId) {\n  // AccountInfo is current, support old, eg. Edgeware\n  return api.query.system.account(accountId).pipe((0, _operators.map)(function (infoOrTuple) {\n    var _ref7 = infoOrTuple.nonce ? infoOrTuple.data : infoOrTuple[1],\n        feeFrozen = _ref7.feeFrozen,\n        free = _ref7.free,\n        miscFrozen = _ref7.miscFrozen,\n        reserved = _ref7.reserved;\n\n    var accountNonce = infoOrTuple.nonce || infoOrTuple[0];\n    return [free, reserved, feeFrozen, miscFrozen, accountNonce];\n  }));\n}\n/**\n * @name account\n * @param {( AccountIndex | AccountId | Address | string )} address - An accounts Id in different formats.\n * @returns An object containing the results of various balance queries\n * @example\n * <BR>\n *\n * ```javascript\n * const ALICE = 'F7Hs';\n *\n * api.derive.balances.all(ALICE, ({ accountId, lockedBalance }) => {\n *   console.log(`The account ${accountId} has a locked balance ${lockedBalance} units.`);\n * });\n * ```\n */\n\n\nfunction account(instanceId, api) {\n  return (0, _util2.memo)(instanceId, function (address) {\n    return api.derive.accounts.accountId(address).pipe((0, _operators.switchMap)(function (accountId) {\n      return accountId ? (0, _rxjs.combineLatest)([(0, _rxjs.of)(accountId), (0, _util.isFunction)(api.query.system.account) ? queryCurrent(api, accountId) : (0, _util.isFunction)(api.query.balances.account) ? queryBalancesAccount(api, accountId) : queryBalancesFree(api, accountId)]) : (0, _rxjs.of)([api.registry.createType('AccountId'), [api.registry.createType('Balance'), api.registry.createType('Balance'), api.registry.createType('Balance'), api.registry.createType('Balance'), api.registry.createType('Index')]]);\n    }), (0, _operators.map)(function (result) {\n      return calcBalances(api, result);\n    }));\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/balances/account.js"],"names":["Object","defineProperty","exports","value","account","_rxjs","require","_operators","_util","_util2","calcBalances","api","accountId","freeBalance","reservedBalance","frozenFee","frozenMisc","accountNonce","votingBalance","registry","createType","toBn","queryBalancesFree","queryMulti","query","balances","system","pipe","map","queryBalancesAccount","feeFrozen","free","miscFrozen","reserved","queryCurrent","infoOrTuple","nonce","data","instanceId","memo","address","derive","accounts","switchMap","combineLatest","of","isFunction","result"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.account = account;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _util2 = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction calcBalances(api, [accountId, [freeBalance, reservedBalance, frozenFee, frozenMisc, accountNonce]]) {\n  return {\n    accountId,\n    accountNonce,\n    freeBalance,\n    frozenFee,\n    frozenMisc,\n    reservedBalance,\n    votingBalance: api.registry.createType('Balance', freeBalance.toBn())\n  };\n} // old\n\n\nfunction queryBalancesFree(api, accountId) {\n  return api.queryMulti([[api.query.balances.freeBalance, accountId], [api.query.balances.reservedBalance, accountId], [api.query.system.accountNonce, accountId]]).pipe((0, _operators.map)(([freeBalance, reservedBalance, accountNonce]) => [freeBalance, reservedBalance, api.registry.createType('Balance'), api.registry.createType('Balance'), accountNonce]));\n}\n\nfunction queryBalancesAccount(api, accountId) {\n  return api.queryMulti([[api.query.balances.account, accountId], [api.query.system.accountNonce, accountId]]).pipe((0, _operators.map)(([{\n    feeFrozen,\n    free,\n    miscFrozen,\n    reserved\n  }, accountNonce]) => [free, reserved, feeFrozen, miscFrozen, accountNonce]));\n}\n\nfunction queryCurrent(api, accountId) {\n  // AccountInfo is current, support old, eg. Edgeware\n  return api.query.system.account(accountId).pipe((0, _operators.map)(infoOrTuple => {\n    const {\n      feeFrozen,\n      free,\n      miscFrozen,\n      reserved\n    } = infoOrTuple.nonce ? infoOrTuple.data : infoOrTuple[1];\n    const accountNonce = infoOrTuple.nonce || infoOrTuple[0];\n    return [free, reserved, feeFrozen, miscFrozen, accountNonce];\n  }));\n}\n/**\n * @name account\n * @param {( AccountIndex | AccountId | Address | string )} address - An accounts Id in different formats.\n * @returns An object containing the results of various balance queries\n * @example\n * <BR>\n *\n * ```javascript\n * const ALICE = 'F7Hs';\n *\n * api.derive.balances.all(ALICE, ({ accountId, lockedBalance }) => {\n *   console.log(`The account ${accountId} has a locked balance ${lockedBalance} units.`);\n * });\n * ```\n */\n\n\nfunction account(instanceId, api) {\n  return (0, _util2.memo)(instanceId, address => api.derive.accounts.accountId(address).pipe((0, _operators.switchMap)(accountId => accountId ? (0, _rxjs.combineLatest)([(0, _rxjs.of)(accountId), (0, _util.isFunction)(api.query.system.account) ? queryCurrent(api, accountId) : (0, _util.isFunction)(api.query.balances.account) ? queryBalancesAccount(api, accountId) : queryBalancesFree(api, accountId)]) : (0, _rxjs.of)([api.registry.createType('AccountId'), [api.registry.createType('Balance'), api.registry.createType('Balance'), api.registry.createType('Balance'), api.registry.createType('Balance'), api.registry.createType('Index')]])), (0, _operators.map)(result => calcBalances(api, result))));\n}"]},"metadata":{},"sourceType":"script"}