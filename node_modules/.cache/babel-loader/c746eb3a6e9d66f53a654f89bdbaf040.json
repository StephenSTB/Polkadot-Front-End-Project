{"ast":null,"code":"import _regeneratorRuntime from\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Card,Icon,Grid}from'semantic-ui-react';import{useSubstrate}from'./substrate-lib';function Main(props){var _useSubstrate=useSubstrate(),api=_useSubstrate.api;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),nodeInfo=_useState2[0],setNodeInfo=_useState2[1];useEffect(function(){var getInfo=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$Promise$all,_yield$Promise$all2,chain,nodeName,nodeVersion;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return Promise.all([api.rpc.system.chain(),api.rpc.system.name(),api.rpc.system.version()]);case 3:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,3);chain=_yield$Promise$all2[0];nodeName=_yield$Promise$all2[1];nodeVersion=_yield$Promise$all2[2];setNodeInfo({chain:chain,nodeName:nodeName,nodeVersion:nodeVersion});_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return function getInfo(){return _ref.apply(this,arguments);};}();getInfo();},[api.rpc.system]);return/*#__PURE__*/React.createElement(Grid.Column,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Content,null,/*#__PURE__*/React.createElement(Card.Header,null,nodeInfo.nodeName),/*#__PURE__*/React.createElement(Card.Meta,null,/*#__PURE__*/React.createElement(\"span\",null,nodeInfo.chain)),/*#__PURE__*/React.createElement(Card.Description,null,\"Built using the\",' ',/*#__PURE__*/React.createElement(\"a\",{href:\"https://github.com/substrate-developer-hub/substrate-front-end-template\"},\"Substrate Front End Template\"))),/*#__PURE__*/React.createElement(Card.Content,{extra:true},/*#__PURE__*/React.createElement(Icon,{name:\"setting\"}),\"v\",nodeInfo.nodeVersion)));}export default function NodeInfo(props){var _useSubstrate2=useSubstrate(),api=_useSubstrate2.api;return api.rpc&&api.rpc.system&&api.rpc.system.chain&&api.rpc.system.name&&api.rpc.system.version?/*#__PURE__*/React.createElement(Main,props):null;}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/src/NodeInfo.js"],"names":["React","useEffect","useState","Card","Icon","Grid","useSubstrate","Main","props","api","nodeInfo","setNodeInfo","getInfo","Promise","all","rpc","system","chain","name","version","nodeName","nodeVersion","console","error","NodeInfo"],"mappings":"ovBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,IAAT,CAAeC,IAAf,CAAqBC,IAArB,KAAiC,mBAAjC,CAEA,OAASC,YAAT,KAA6B,iBAA7B,CAEA,QAASC,CAAAA,IAAT,CAAeC,KAAf,CAAsB,mBACJF,YAAY,EADR,CACZG,GADY,eACZA,GADY,eAEYP,QAAQ,CAAC,EAAD,CAFpB,wCAEbQ,QAFa,eAEHC,WAFG,eAIpBV,SAAS,CAAC,UAAM,CACd,GAAMW,CAAAA,OAAO,0FAAG,+OAEiCC,CAAAA,OAAO,CAACC,GAAR,CAAY,CACvDL,GAAG,CAACM,GAAJ,CAAQC,MAAR,CAAeC,KAAf,EADuD,CAEvDR,GAAG,CAACM,GAAJ,CAAQC,MAAR,CAAeE,IAAf,EAFuD,CAGvDT,GAAG,CAACM,GAAJ,CAAQC,MAAR,CAAeG,OAAf,EAHuD,CAAZ,CAFjC,kGAELF,KAFK,wBAEEG,QAFF,wBAEYC,WAFZ,wBAOZV,WAAW,CAAC,CAAEM,KAAK,CAALA,KAAF,CAASG,QAAQ,CAARA,QAAT,CAAmBC,WAAW,CAAXA,WAAnB,CAAD,CAAX,CAPY,iFASZC,OAAO,CAACC,KAAR,cATY,qEAAH,kBAAPX,CAAAA,OAAO,0CAAb,CAYAA,OAAO,GACR,CAdQ,CAcN,CAACH,GAAG,CAACM,GAAJ,CAAQC,MAAT,CAdM,CAAT,CAgBA,mBACE,oBAAC,IAAD,CAAM,MAAN,mBACE,oBAAC,IAAD,mBACE,oBAAC,IAAD,CAAM,OAAN,mBACE,oBAAC,IAAD,CAAM,MAAN,MAAcN,QAAQ,CAACU,QAAvB,CADF,cAEE,oBAAC,IAAD,CAAM,IAAN,mBACE,gCAAOV,QAAQ,CAACO,KAAhB,CADF,CAFF,cAKE,oBAAC,IAAD,CAAM,WAAN,wBACkB,GADlB,cAEE,yBAAG,IAAI,CAAC,yEAAR,iCAFF,CALF,CADF,cAaE,oBAAC,IAAD,CAAM,OAAN,EAAc,KAAK,KAAnB,eACE,oBAAC,IAAD,EAAM,IAAI,CAAC,SAAX,EADF,KAC2BP,QAAQ,CAACW,WADpC,CAbF,CADF,CADF,CAqBD,CAED,cAAe,SAASG,CAAAA,QAAT,CAAmBhB,KAAnB,CAA0B,oBACvBF,YAAY,EADW,CAC/BG,GAD+B,gBAC/BA,GAD+B,CAEvC,MAAOA,CAAAA,GAAG,CAACM,GAAJ,EACLN,GAAG,CAACM,GAAJ,CAAQC,MADH,EAELP,GAAG,CAACM,GAAJ,CAAQC,MAAR,CAAeC,KAFV,EAGLR,GAAG,CAACM,GAAJ,CAAQC,MAAR,CAAeE,IAHV,EAILT,GAAG,CAACM,GAAJ,CAAQC,MAAR,CAAeG,OAJV,cAKH,oBAAC,IAAD,CAAUX,KAAV,CALG,CAMD,IANN,CAOD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, Icon, Grid } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { api } = useSubstrate();\n  const [nodeInfo, setNodeInfo] = useState({});\n\n  useEffect(() => {\n    const getInfo = async () => {\n      try {\n        const [chain, nodeName, nodeVersion] = await Promise.all([\n          api.rpc.system.chain(),\n          api.rpc.system.name(),\n          api.rpc.system.version()\n        ]);\n        setNodeInfo({ chain, nodeName, nodeVersion });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    getInfo();\n  }, [api.rpc.system]);\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content>\n          <Card.Header>{nodeInfo.nodeName}</Card.Header>\n          <Card.Meta>\n            <span>{nodeInfo.chain}</span>\n          </Card.Meta>\n          <Card.Description>\n            Built using the{' '}\n            <a href='https://github.com/substrate-developer-hub/substrate-front-end-template'>\n              Substrate Front End Template\n            </a>\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name='setting' />v{nodeInfo.nodeVersion}\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n}\n\nexport default function NodeInfo (props) {\n  const { api } = useSubstrate();\n  return api.rpc &&\n    api.rpc.system &&\n    api.rpc.system.chain &&\n    api.rpc.system.name &&\n    api.rpc.system.version ? (\n      <Main {...props} />\n    ) : null;\n}\n"]},"metadata":{},"sourceType":"module"}