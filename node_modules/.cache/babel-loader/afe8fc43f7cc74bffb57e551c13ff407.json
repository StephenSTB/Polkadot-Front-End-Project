{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/src/BlockInfo.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main(props) {\n  const {\n    api\n  } = useSubstrate();\n  const [blockNumber, setBlockNumber] = useState();\n\n  const getInfo = async () => {\n    const unsubscribe = await api.rpc.chain.subscribeNewHeads(header => {\n      //console.log(`Chain is at block: #${header.hash}`);\\\n      setBlockNumber(header.number.toNumber());\n      setBlockHash(header.hash.toHuman());\n      setParrentHash(header.parentHash.toHuman());\n      setExtrinsicsRoot(header.extrinsicsRoot.toHuman());\n      setStateRoot(); //console.log(blockHash)\n    });\n  };\n\n  getInfo();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, \"Block Number:\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), \"Block hash:\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), \"Parent hash:\");\n}\n\nexport default function BlockInfo(props) {\n  const {\n    api\n  } = useSubstrate();\n  return api.rpc && api.rpc.chain && api.rpc.chain.subscribeNewHeads ? /*#__PURE__*/React.createElement(Main, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })) : null;\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/src/BlockInfo.js"],"names":["React","useEffect","useState","Statistic","Grid","Card","Icon","useSubstrate","Main","props","api","blockNumber","setBlockNumber","getInfo","unsubscribe","rpc","chain","subscribeNewHeads","header","number","toNumber","setBlockHash","hash","toHuman","setParrentHash","parentHash","setExtrinsicsRoot","extrinsicsRoot","setStateRoot","BlockInfo"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,IAAhC,QAA2C,mBAA3C;AAEA,SAASC,YAAT,QAA6B,iBAA7B;;AAIA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAChB,QAAM;AAAEC,IAAAA;AAAF,MAAUH,YAAY,EAA5B;AAEA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C;;AAEA,QAAMW,OAAO,GAAG,YAAW;AACvB,UAAMC,WAAW,GAAG,MAAMJ,GAAG,CAACK,GAAJ,CAAQC,KAAR,CAAcC,iBAAd,CAAiCC,MAAD,IAAY;AAClE;AACAN,MAAAA,cAAc,CAACM,MAAM,CAACC,MAAP,CAAcC,QAAd,EAAD,CAAd;AACAC,MAAAA,YAAY,CAACH,MAAM,CAACI,IAAP,CAAYC,OAAZ,EAAD,CAAZ;AACAC,MAAAA,cAAc,CAACN,MAAM,CAACO,UAAP,CAAkBF,OAAlB,EAAD,CAAd;AACAG,MAAAA,iBAAiB,CAACR,MAAM,CAACS,cAAP,CAAsBJ,OAAtB,EAAD,CAAjB;AACAK,MAAAA,YAAY,GANsD,CAOlE;AAEH,KATyB,CAA1B;AAUH,GAXD;;AAYAf,EAAAA,OAAO;AAEP,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,8BAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,iBADA;AAUH;;AAED,eAAe,SAASgB,SAAT,CAAmBpB,KAAnB,EAAyB;AACpC,QAAK;AAACC,IAAAA;AAAD,MAAQH,YAAY,EAAzB;AACA,SAAOG,GAAG,CAACK,GAAJ,IACPL,GAAG,CAACK,GAAJ,CAAQC,KADD,IAEPN,GAAG,CAACK,GAAJ,CAAQC,KAAR,CAAcC,iBAFP,gBAGH,oBAAC,IAAD,oBAAUR,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHG,GAIH,IAJJ;AAKH","sourcesContent":["\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Statistic, Grid, Card, Icon} from 'semantic-ui-react';\r\n\r\nimport { useSubstrate } from './substrate-lib';\r\n\r\n\r\n\r\nfunction Main(props){\r\n    const { api } = useSubstrate();\r\n \r\n    const [blockNumber, setBlockNumber] = useState();\r\n    \r\n    const getInfo = async () =>{\r\n        const unsubscribe = await api.rpc.chain.subscribeNewHeads((header) => {\r\n            //console.log(`Chain is at block: #${header.hash}`);\\\r\n            setBlockNumber(header.number.toNumber());\r\n            setBlockHash(header.hash.toHuman());\r\n            setParrentHash(header.parentHash.toHuman());\r\n            setExtrinsicsRoot(header.extrinsicsRoot.toHuman());\r\n            setStateRoot();\r\n            //console.log(blockHash)\r\n            \r\n        });\r\n    }\r\n    getInfo();\r\n    \r\n    return(\r\n    <div>\r\n        Block Number: \r\n        <br/>\r\n        Block hash: \r\n        <br/>\r\n        Parent hash:\r\n    </div>\r\n    );\r\n\r\n}\r\n\r\nexport default function BlockInfo(props){\r\n    const{api} = useSubstrate();\r\n    return api.rpc &&\r\n    api.rpc.chain &&\r\n    api.rpc.chain.subscribeNewHeads  ? (\r\n        <Main {...props} />\r\n    ) : null;\r\n}"]},"metadata":{},"sourceType":"module"}