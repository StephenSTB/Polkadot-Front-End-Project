{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validatorsFrom = validatorsFrom;\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @description From a list of stashIds, staking ledgers for those acting as validators and those being nominated\n */\n\n\nfunction validatorsFrom(instanceId, api) {\n  return (0, _util.memo)(instanceId, function (stashIds) {\n    return api.query.staking.nominators.multi(stashIds).pipe((0, _operators.switchMap)(function (optNoms) {\n      return api.derive.staking.queryMulti(optNoms.reduce(function (validatorIds, optNom) {\n        return optNom.unwrapOrDefault().targets.reduce(function (validatorIds, targetId) {\n          if (!validatorIds.find(function (validatorId) {\n            return validatorId.eq(targetId);\n          })) {\n            validatorIds.push(targetId);\n          }\n\n          return validatorIds;\n        }, validatorIds);\n      }, []));\n    }));\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/staking/validatorsFrom.js"],"names":["Object","defineProperty","exports","value","validatorsFrom","_operators","require","_util","instanceId","api","memo","stashIds","query","staking","nominators","multi","pipe","switchMap","optNoms","derive","queryMulti","reduce","validatorIds","optNom","unwrapOrDefault","targets","targetId","find","validatorId","eq","push"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,cAAR,GAAyBA,cAAzB;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,gBAAD,CAAxB;;AAEA,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAAnB,C,CAEA;AACA;;AAEA;AACA;AACA;;;AACA,SAASF,cAAT,CAAwBI,UAAxB,EAAoCC,GAApC,EAAyC;AACvC,SAAO,CAAC,GAAGF,KAAK,CAACG,IAAV,EAAgBF,UAAhB,EAA4B,UAAAG,QAAQ;AAAA,WAAIF,GAAG,CAACG,KAAJ,CAAUC,OAAV,CAAkBC,UAAlB,CAA6BC,KAA7B,CAAmCJ,QAAnC,EAA6CK,IAA7C,CAAkD,CAAC,GAAGX,UAAU,CAACY,SAAf,EAA0B,UAAAC,OAAO;AAAA,aAAIT,GAAG,CAACU,MAAJ,CAAWN,OAAX,CAAmBO,UAAnB,CAA8BF,OAAO,CAACG,MAAR,CAAe,UAACC,YAAD,EAAeC,MAAf,EAA0B;AAC3M,eAAOA,MAAM,CAACC,eAAP,GAAyBC,OAAzB,CAAiCJ,MAAjC,CAAwC,UAACC,YAAD,EAAeI,QAAf,EAA4B;AACzE,cAAI,CAACJ,YAAY,CAACK,IAAb,CAAkB,UAAAC,WAAW;AAAA,mBAAIA,WAAW,CAACC,EAAZ,CAAeH,QAAf,CAAJ;AAAA,WAA7B,CAAL,EAAiE;AAC/DJ,YAAAA,YAAY,CAACQ,IAAb,CAAkBJ,QAAlB;AACD;;AAED,iBAAOJ,YAAP;AACD,SANM,EAMJA,YANI,CAAP;AAOD,OARmK,EAQjK,EARiK,CAA9B,CAAJ;AAAA,KAAjC,CAAlD,CAAJ;AAAA,GAApC,CAAP;AASD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validatorsFrom = validatorsFrom;\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @description From a list of stashIds, staking ledgers for those acting as validators and those being nominated\n */\nfunction validatorsFrom(instanceId, api) {\n  return (0, _util.memo)(instanceId, stashIds => api.query.staking.nominators.multi(stashIds).pipe((0, _operators.switchMap)(optNoms => api.derive.staking.queryMulti(optNoms.reduce((validatorIds, optNom) => {\n    return optNom.unwrapOrDefault().targets.reduce((validatorIds, targetId) => {\n      if (!validatorIds.find(validatorId => validatorId.eq(targetId))) {\n        validatorIds.push(targetId);\n      }\n\n      return validatorIds;\n    }, validatorIds);\n  }, [])))));\n}"]},"metadata":{},"sourceType":"script"}