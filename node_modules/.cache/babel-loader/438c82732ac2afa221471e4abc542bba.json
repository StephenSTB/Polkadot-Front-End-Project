{"ast":null,"code":"\"use strict\";\n\nvar _get = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _classCallCheck = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _AbstractInt = _interopRequireWildcard(require(\"./AbstractInt\")); // Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name UInt\n * @description\n * A generic unsigned integer codec. For Substrate all numbers are Little Endian encoded,\n * this handles the encoding and decoding of those numbers. Upon construction\n * the bitLength is provided and any additional use keeps the number to this\n * length. This extends `BN`, so all methods available on a normal `BN` object\n * is available here.\n * @noInheritDoc\n */\n\n\nvar UInt = /*#__PURE__*/function (_AbstractInt$default) {\n  _inherits(UInt, _AbstractInt$default);\n\n  var _super = _createSuper(UInt);\n\n  function UInt(registry) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var bitLength = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _AbstractInt.DEFAULT_UINT_BITS;\n    var isHexJson = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n    _classCallCheck(this, UInt);\n\n    return _super.call(this, registry, false, value, bitLength, isHexJson);\n  }\n\n  _createClass(UInt, null, [{\n    key: \"with\",\n    value: function _with(bitLength, typeName) {\n      return /*#__PURE__*/function (_UInt) {\n        _inherits(_class, _UInt);\n\n        var _super2 = _createSuper(_class);\n\n        function _class(registry, value) {\n          _classCallCheck(this, _class);\n\n          return _super2.call(this, registry, value, bitLength);\n        }\n\n        _createClass(_class, [{\n          key: \"toRawType\",\n          value: function toRawType() {\n            return typeName || _get(_getPrototypeOf(_class.prototype), \"toRawType\", this).call(this);\n          }\n        }]);\n\n        return _class;\n      }(UInt);\n    }\n  }]);\n\n  return UInt;\n}(_AbstractInt.default);\n\nexports.default = UInt;","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/types/codec/UInt.js"],"names":["_interopRequireWildcard","require","Object","defineProperty","exports","value","default","_AbstractInt","UInt","registry","bitLength","DEFAULT_UINT_BITS","isHexJson","typeName"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,YAAY,GAAGP,uBAAuB,CAACC,OAAO,CAAC,eAAD,CAAR,CAA1C,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACMO,I;;;;;AACJ,gBAAYC,QAAZ,EAAgG;AAAA,QAA1EJ,KAA0E,uEAAlE,CAAkE;AAAA,QAA/DK,SAA+D,uEAAnDH,YAAY,CAACI,iBAAsC;AAAA,QAAnBC,SAAmB,uEAAP,KAAO;;AAAA;;AAAA,6BACxFH,QADwF,EAC9E,KAD8E,EACvEJ,KADuE,EAChEK,SADgE,EACrDE,SADqD;AAE/F;;;;0BAEWF,S,EAAWG,Q,EAAU;AAC/B;AAAA;;AAAA;;AACE,wBAAYJ,QAAZ,EAAsBJ,KAAtB,EAA6B;AAAA;;AAAA,oCACrBI,QADqB,EACXJ,KADW,EACJK,SADI;AAE5B;;AAHH;AAAA;AAAA,sCAKc;AACV,mBAAOG,QAAQ,yEAAf;AACD;AAPH;;AAAA;AAAA,QAAqBL,IAArB;AAUD;;;;EAhBgBD,YAAY,CAACD,O;;AAoBhCF,OAAO,CAACE,OAAR,GAAkBE,IAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _AbstractInt = _interopRequireWildcard(require(\"./AbstractInt\"));\n\n// Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name UInt\n * @description\n * A generic unsigned integer codec. For Substrate all numbers are Little Endian encoded,\n * this handles the encoding and decoding of those numbers. Upon construction\n * the bitLength is provided and any additional use keeps the number to this\n * length. This extends `BN`, so all methods available on a normal `BN` object\n * is available here.\n * @noInheritDoc\n */\nclass UInt extends _AbstractInt.default {\n  constructor(registry, value = 0, bitLength = _AbstractInt.DEFAULT_UINT_BITS, isHexJson = false) {\n    super(registry, false, value, bitLength, isHexJson);\n  }\n\n  static with(bitLength, typeName) {\n    return class extends UInt {\n      constructor(registry, value) {\n        super(registry, value, bitLength);\n      }\n\n      toRawType() {\n        return typeName || super.toRawType();\n      }\n\n    };\n  }\n\n}\n\nexports.default = UInt;"]},"metadata":{},"sourceType":"script"}