{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/src/BlockInfo.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\n\nfunction BlockInfo(props) {\n  const {\n    api\n  } = useSubstrate();\n  const [blockInfo, setBlockInfo] = useState();\n  useEffect(() => {\n    const unsubscribeAll = null;\n\n    const getInfo = async () => {\n      try {\n        api.rpc.chain.subscribeNewHeads(header => {\n          setBlockInfo(header);\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    getInfo();\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [api.derive.chain, api.rpc.chain, blockInfo]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, blockInfo.hash.toHuman());\n}\n\nexport default BlockInfo;","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/src/BlockInfo.js"],"names":["React","useEffect","useState","Statistic","Grid","Card","Icon","useSubstrate","BlockInfo","props","api","blockInfo","setBlockInfo","unsubscribeAll","getInfo","rpc","chain","subscribeNewHeads","header","e","console","error","derive","hash","toHuman"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,IAAhC,QAA4C,mBAA5C;AAEA,SAASC,YAAT,QAA6B,iBAA7B;;AAGA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAUH,YAAY,EAA5B;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,EAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,cAAc,GAAG,IAAvB;;AACA,UAAMC,OAAO,GAAG,YAAY;AAC1B,UAAI;AACFJ,QAAAA,GAAG,CAACK,GAAJ,CAAQC,KAAR,CAAcC,iBAAd,CAAiCC,MAAD,IAAY;AAC1CN,UAAAA,YAAY,CAACM,MAAD,CAAZ;AACD,SAFD;AAGD,OAJD,CAIE,OAAOC,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,KARD;;AASAL,IAAAA,OAAO;AACP,WAAO,MAAMD,cAAc,IAAIA,cAAc,EAA7C;AACD,GAbM,EAaJ,CAACH,GAAG,CAACY,MAAJ,CAAWN,KAAZ,EAAmBN,GAAG,CAACK,GAAJ,CAAQC,KAA3B,EAAkCL,SAAlC,CAbI,CAAT;AAgBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,SAAS,CAACY,IAAV,CAAeC,OAAf,EAAN,CADJ;AAGH;;AAED,eAAehB,SAAf","sourcesContent":["\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react';\r\n\r\nimport { useSubstrate } from './substrate-lib';\r\n\r\n\r\nfunction BlockInfo(props){\r\n    const { api } = useSubstrate();\r\n    const [blockInfo, setBlockInfo] = useState();\r\n\r\n    useEffect(() => {\r\n        const unsubscribeAll = null;\r\n        const getInfo = async () => {\r\n          try {\r\n            api.rpc.chain.subscribeNewHeads((header) => {\r\n              setBlockInfo(header);\r\n            });\r\n          } catch (e) {\r\n            console.error(e);\r\n          }\r\n        };\r\n        getInfo();\r\n        return () => unsubscribeAll && unsubscribeAll();\r\n      }, [api.derive.chain, api.rpc.chain, blockInfo]);\r\n    \r\n\r\n    return(\r\n        <div>{blockInfo.hash.toHuman()}</div>\r\n    );\r\n}\r\n\r\nexport default BlockInfo"]},"metadata":{},"sourceType":"module"}