{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _toConsumableArray = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.proposals = proposals;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction parseResult(_api, _ref) {\n  var allIds = _ref.allIds,\n      allProposals = _ref.allProposals,\n      approvalIds = _ref.approvalIds,\n      councilProposals = _ref.councilProposals,\n      proposalCount = _ref.proposalCount;\n  var approvals = [];\n  var proposals = [];\n  var councilTreasury = councilProposals.filter(function (_ref2) {\n    var _ref2$proposal = _ref2.proposal,\n        methodName = _ref2$proposal.methodName,\n        sectionName = _ref2$proposal.sectionName;\n    return sectionName === 'treasury' && ['approveProposal', 'rejectProposal'].includes(methodName);\n  });\n  allIds.forEach(function (id, index) {\n    if (allProposals[index].isSome) {\n      var council = councilTreasury.filter(function (_ref3) {\n        var proposal = _ref3.proposal;\n        return id.eq(proposal.args[0]);\n      }).sort(function (a, b) {\n        return a.proposal.methodName.localeCompare(b.proposal.methodName);\n      });\n      var isApproval = approvalIds.some(function (approvalId) {\n        return approvalId.eq(id);\n      });\n      var derived = {\n        council: council,\n        id: id,\n        proposal: allProposals[index].unwrap()\n      };\n\n      if (isApproval) {\n        approvals.push(derived);\n      } else {\n        proposals.push(derived);\n      }\n    }\n  });\n  return {\n    approvals: approvals,\n    proposalCount: proposalCount,\n    proposals: proposals\n  };\n}\n\nfunction retrieveProposals(api, proposalCount, approvalIds) {\n  var proposalIds = [];\n  var count = proposalCount.toNumber();\n\n  var _loop = function _loop(index) {\n    var isApproval = approvalIds.some(function (id) {\n      return id.eqn(index);\n    });\n\n    if (!isApproval) {\n      proposalIds.push(api.registry.createType('ProposalIndex', index));\n    }\n  };\n\n  for (var index = 0; index < count; index++) {\n    _loop(index);\n  }\n\n  var allIds = [].concat(proposalIds, _toConsumableArray(approvalIds));\n  return (0, _rxjs.combineLatest)([api.query.treasury.proposals.multi(allIds), api.derive.council.proposals()]).pipe((0, _operators.map)(function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 2),\n        allProposals = _ref5[0],\n        councilProposals = _ref5[1];\n\n    return parseResult(api, {\n      allIds: allIds,\n      allProposals: allProposals,\n      approvalIds: approvalIds,\n      councilProposals: councilProposals,\n      proposalCount: proposalCount\n    });\n  }));\n}\n/**\n * @description Retrieve all active and approved treasury proposals, along with their info\n */\n\n\nfunction proposals(instanceId, api) {\n  return (0, _util.memo)(instanceId, function () {\n    return api.query.treasury ? (0, _rxjs.combineLatest)([api.query.treasury.proposalCount(), api.query.treasury.approvals()]).pipe((0, _operators.switchMap)(function (_ref6) {\n      var _ref7 = _slicedToArray(_ref6, 2),\n          proposalCount = _ref7[0],\n          approvalIds = _ref7[1];\n\n      return retrieveProposals(api, proposalCount, approvalIds);\n    })) : (0, _rxjs.of)({\n      approvals: [],\n      proposalCount: api.registry.createType('ProposalIndex'),\n      proposals: []\n    });\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/treasury/proposals.js"],"names":["Object","defineProperty","exports","value","proposals","_rxjs","require","_operators","_util","parseResult","_api","allIds","allProposals","approvalIds","councilProposals","proposalCount","approvals","councilTreasury","filter","proposal","methodName","sectionName","includes","forEach","id","index","isSome","council","eq","args","sort","a","b","localeCompare","isApproval","some","approvalId","derived","unwrap","push","retrieveProposals","api","proposalIds","count","toNumber","eqn","registry","createType","combineLatest","query","treasury","multi","derive","pipe","map","instanceId","memo","switchMap","of"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.proposals = proposals;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction parseResult(_api, {\n  allIds,\n  allProposals,\n  approvalIds,\n  councilProposals,\n  proposalCount\n}) {\n  const approvals = [];\n  const proposals = [];\n  const councilTreasury = councilProposals.filter(({\n    proposal: {\n      methodName,\n      sectionName\n    }\n  }) => sectionName === 'treasury' && ['approveProposal', 'rejectProposal'].includes(methodName));\n  allIds.forEach((id, index) => {\n    if (allProposals[index].isSome) {\n      const council = councilTreasury.filter(({\n        proposal\n      }) => id.eq(proposal.args[0])).sort((a, b) => a.proposal.methodName.localeCompare(b.proposal.methodName));\n      const isApproval = approvalIds.some(approvalId => approvalId.eq(id));\n      const derived = {\n        council,\n        id,\n        proposal: allProposals[index].unwrap()\n      };\n\n      if (isApproval) {\n        approvals.push(derived);\n      } else {\n        proposals.push(derived);\n      }\n    }\n  });\n  return {\n    approvals,\n    proposalCount,\n    proposals\n  };\n}\n\nfunction retrieveProposals(api, proposalCount, approvalIds) {\n  const proposalIds = [];\n  const count = proposalCount.toNumber();\n\n  for (let index = 0; index < count; index++) {\n    const isApproval = approvalIds.some(id => id.eqn(index));\n\n    if (!isApproval) {\n      proposalIds.push(api.registry.createType('ProposalIndex', index));\n    }\n  }\n\n  const allIds = [...proposalIds, ...approvalIds];\n  return (0, _rxjs.combineLatest)([api.query.treasury.proposals.multi(allIds), api.derive.council.proposals()]).pipe((0, _operators.map)(([allProposals, councilProposals]) => parseResult(api, {\n    allIds,\n    allProposals,\n    approvalIds,\n    councilProposals,\n    proposalCount\n  })));\n}\n/**\n * @description Retrieve all active and approved treasury proposals, along with their info\n */\n\n\nfunction proposals(instanceId, api) {\n  return (0, _util.memo)(instanceId, () => api.query.treasury ? (0, _rxjs.combineLatest)([api.query.treasury.proposalCount(), api.query.treasury.approvals()]).pipe((0, _operators.switchMap)(([proposalCount, approvalIds]) => retrieveProposals(api, proposalCount, approvalIds))) : (0, _rxjs.of)({\n    approvals: [],\n    proposalCount: api.registry.createType('ProposalIndex'),\n    proposals: []\n  }));\n}"]},"metadata":{},"sourceType":"script"}