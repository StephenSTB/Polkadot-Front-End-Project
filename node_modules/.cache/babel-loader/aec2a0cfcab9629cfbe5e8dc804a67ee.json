{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/src/BlockInfo.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Statistic, Grid, Card, Icon, Table } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main(props) {\n  const {\n    api\n  } = useSubstrate();\n  const [Block, setBlock] = useState();\n  useEffect(() => {\n    let unsubscribe = null;\n    api.rpc.chain.subscribeNewHeads(header => {\n      setBlock(header);\n      console.log(`Chain is at block: #${header.number}`);\n    }).then(unsub => {\n      unsubscribe = unsub;\n    }).catch(console.error);\n    return () => unsubscribe && unsubscribe();\n  }, []);\n  /*\r\n  const getInfo = async () =>{\r\n      const unsubscribe = await api.rpc.chain.subscribeNewHeads((header) => {\r\n          //console.log(`Chain is at block: #${header.hash}`);\\\r\n          setBlockNumber(header.number.toNumber());\r\n          setBlockHash(header.hash.toHuman());\r\n          setParrentHash(header.parentHash.toHuman());\r\n          setExtrinsicsRoot(header.extrinsicsRoot.toHuman());\r\n          setStateRoot()\r\n          //console.log(blockHash)\r\n          \r\n      });\r\n  }\r\n  getInfo();*/\n\n  return /*#__PURE__*/React.createElement(Table, {\n    celled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }\n  }, Block && /*#__PURE__*/React.createElement(Table.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \" Block Number \"), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, Block.number.toNumber())), /*#__PURE__*/React.createElement(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \" Block Hash \"), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \" \", Block.hash.toHuman()))));\n}\n\nexport default function BlockInfo(props) {\n  const {\n    api\n  } = useSubstrate();\n  return api.rpc && api.rpc.chain && api.rpc.chain.subscribeNewHeads ? /*#__PURE__*/React.createElement(Main, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })) : null;\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/src/BlockInfo.js"],"names":["React","useEffect","useState","Statistic","Grid","Card","Icon","Table","useSubstrate","Main","props","api","Block","setBlock","unsubscribe","rpc","chain","subscribeNewHeads","header","console","log","number","then","unsub","catch","error","toNumber","hash","toHuman","BlockInfo"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,IAAhC,EAAsCC,KAAtC,QAAkD,mBAAlD;AAEA,SAASC,YAAT,QAA6B,iBAA7B;;AAIA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAChB,QAAM;AAAEC,IAAAA;AAAF,MAAUH,YAAY,EAA5B;AAEA,QAAK,CAACI,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,EAAjC;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACX,QAAIa,WAAW,GAAG,IAAlB;AAEAH,IAAAA,GAAG,CAACI,GAAJ,CAAQC,KAAR,CAAcC,iBAAd,CAAiCC,MAAD,IAAY;AACxCL,MAAAA,QAAQ,CAACK,MAAD,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBF,MAAM,CAACG,MAAO,EAAjD;AACH,KAHD,EAGGC,IAHH,CAGQC,KAAK,IAAG;AACZT,MAAAA,WAAW,GAAGS,KAAd;AACH,KALD,EAKGC,KALH,CAKSL,OAAO,CAACM,KALjB;AAOA,WAAO,MAAMX,WAAW,IAAIA,WAAW,EAAvC;AACH,GAXQ,EAWN,EAXM,CAAT;AAaA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,sBACK,oBAAC,KAAD;AAAO,IAAA,MAAM,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIF,KAAK,iBAAG,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaA,KAAK,CAACS,MAAN,CAAaK,QAAb,EAAb,CAFJ,CADK,eAKL,oBAAC,KAAD,CAAO,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAcd,KAAK,CAACe,IAAN,CAAWC,OAAX,EAAd,CAFJ,CALK,CADZ,CADL;AAeH;;AAED,eAAe,SAASC,SAAT,CAAmBnB,KAAnB,EAAyB;AACpC,QAAK;AAACC,IAAAA;AAAD,MAAQH,YAAY,EAAzB;AACA,SAAOG,GAAG,CAACI,GAAJ,IACPJ,GAAG,CAACI,GAAJ,CAAQC,KADD,IAEPL,GAAG,CAACI,GAAJ,CAAQC,KAAR,CAAcC,iBAFP,gBAGH,oBAAC,IAAD,oBAAUP,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHG,GAIH,IAJJ;AAKH","sourcesContent":["\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Statistic, Grid, Card, Icon, Table} from 'semantic-ui-react';\r\n\r\nimport { useSubstrate } from './substrate-lib';\r\n\r\n\r\n\r\nfunction Main(props){\r\n    const { api } = useSubstrate();\r\n\r\n    const[Block, setBlock] = useState();\r\n\r\n    useEffect(()=> {\r\n        let unsubscribe = null;\r\n\r\n        api.rpc.chain.subscribeNewHeads((header) => {\r\n            setBlock(header);\r\n            console.log(`Chain is at block: #${header.number}`);\r\n        }).then(unsub =>{\r\n            unsubscribe = unsub;\r\n        }).catch(console.error);\r\n\r\n        return () => unsubscribe && unsubscribe();\r\n    }, []);\r\n\r\n    /*\r\n    const getInfo = async () =>{\r\n        const unsubscribe = await api.rpc.chain.subscribeNewHeads((header) => {\r\n            //console.log(`Chain is at block: #${header.hash}`);\\\r\n            setBlockNumber(header.number.toNumber());\r\n            setBlockHash(header.hash.toHuman());\r\n            setParrentHash(header.parentHash.toHuman());\r\n            setExtrinsicsRoot(header.extrinsicsRoot.toHuman());\r\n            setStateRoot()\r\n            //console.log(blockHash)\r\n            \r\n        });\r\n    }\r\n    getInfo();*/\r\n    \r\n    return(\r\n         <Table celled>\r\n            {Block &&<Table.Body>\r\n                <Table.Row>\r\n                    <Table.Cell> Block Number </Table.Cell>\r\n                    <Table.Cell>{Block.number.toNumber()}</Table.Cell>\r\n                </Table.Row>\r\n                <Table.Row>\r\n                    <Table.Cell> Block Hash </Table.Cell>\r\n                    <Table.Cell> {Block.hash.toHuman()}</Table.Cell>\r\n                </Table.Row>\r\n            </Table.Body>}\r\n        </Table>\r\n    );\r\n\r\n}\r\n\r\nexport default function BlockInfo(props){\r\n    const{api} = useSubstrate();\r\n    return api.rpc &&\r\n    api.rpc.chain &&\r\n    api.rpc.chain.subscribeNewHeads  ? (\r\n        <Main {...props} />\r\n    ) : null;\r\n}"]},"metadata":{},"sourceType":"module"}