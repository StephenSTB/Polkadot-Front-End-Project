{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.votes = votes;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction retrieveStakeOf(api) {\n  return (api.query.electionsPhragmen || api.query.elections).stakeOf.entries().pipe((0, _operators.map)(function (entries) {\n    return entries.map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          stake = _ref2[1];\n\n      return [key.args[0], stake];\n    });\n  }));\n}\n\nfunction retrieveVoteOf(api) {\n  return (api.query.electionsPhragmen || api.query.elections).votesOf.entries().pipe((0, _operators.map)(function (entries) {\n    return entries.map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          key = _ref4[0],\n          votes = _ref4[1];\n\n      return [key.args[0], votes];\n    });\n  }));\n}\n\nfunction retrievePrev(api) {\n  return (0, _rxjs.combineLatest)([retrieveStakeOf(api), retrieveVoteOf(api)]).pipe((0, _operators.map)(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        stakes = _ref6[0],\n        votes = _ref6[1];\n\n    var result = [];\n    votes.forEach(function (_ref7) {\n      var _ref8 = _slicedToArray(_ref7, 2),\n          voter = _ref8[0],\n          votes = _ref8[1];\n\n      result.push([voter, {\n        stake: api.registry.createType('Balance'),\n        votes: votes\n      }]);\n    });\n    stakes.forEach(function (_ref9) {\n      var _ref10 = _slicedToArray(_ref9, 2),\n          staker = _ref10[0],\n          stake = _ref10[1];\n\n      var entry = result.find(function (_ref11) {\n        var _ref12 = _slicedToArray(_ref11, 1),\n            voter = _ref12[0];\n\n        return voter.eq(staker);\n      });\n\n      if (entry) {\n        entry[1].stake = stake;\n      } else {\n        result.push([staker, {\n          stake: stake,\n          votes: []\n        }]);\n      }\n    });\n    return result;\n  }));\n}\n\nfunction retrieveCurrent(api) {\n  var elections = api.query.electionsPhragmen || api.query.elections;\n  return elections.voting.entries().pipe((0, _operators.map)(function (entries) {\n    return entries.map(function (_ref13) {\n      var _ref14 = _slicedToArray(_ref13, 2),\n          key = _ref14[0],\n          _ref14$ = _slicedToArray(_ref14[1], 2),\n          stake = _ref14$[0],\n          votes = _ref14$[1];\n\n      return [key.args[0], {\n        stake: stake,\n        votes: votes\n      }];\n    });\n  }));\n}\n\nfunction votes(instanceId, api) {\n  return (0, _util.memo)(instanceId, function () {\n    return (api.query.electionsPhragmen || api.query.elections).stakeOf ? retrievePrev(api) : retrieveCurrent(api);\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/council/votes.js"],"names":["Object","defineProperty","exports","value","votes","_rxjs","require","_operators","_util","retrieveStakeOf","api","query","electionsPhragmen","elections","stakeOf","entries","pipe","map","key","stake","args","retrieveVoteOf","votesOf","retrievePrev","combineLatest","stakes","result","forEach","voter","push","registry","createType","staker","entry","find","eq","retrieveCurrent","voting","instanceId","memo"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.votes = votes;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction retrieveStakeOf(api) {\n  return (api.query.electionsPhragmen || api.query.elections).stakeOf.entries().pipe((0, _operators.map)(entries => entries.map(([key, stake]) => [key.args[0], stake])));\n}\n\nfunction retrieveVoteOf(api) {\n  return (api.query.electionsPhragmen || api.query.elections).votesOf.entries().pipe((0, _operators.map)(entries => entries.map(([key, votes]) => [key.args[0], votes])));\n}\n\nfunction retrievePrev(api) {\n  return (0, _rxjs.combineLatest)([retrieveStakeOf(api), retrieveVoteOf(api)]).pipe((0, _operators.map)(([stakes, votes]) => {\n    const result = [];\n    votes.forEach(([voter, votes]) => {\n      result.push([voter, {\n        stake: api.registry.createType('Balance'),\n        votes\n      }]);\n    });\n    stakes.forEach(([staker, stake]) => {\n      const entry = result.find(([voter]) => voter.eq(staker));\n\n      if (entry) {\n        entry[1].stake = stake;\n      } else {\n        result.push([staker, {\n          stake,\n          votes: []\n        }]);\n      }\n    });\n    return result;\n  }));\n}\n\nfunction retrieveCurrent(api) {\n  const elections = api.query.electionsPhragmen || api.query.elections;\n  return elections.voting.entries().pipe((0, _operators.map)(entries => entries.map(([key, [stake, votes]]) => [key.args[0], {\n    stake,\n    votes\n  }])));\n}\n\nfunction votes(instanceId, api) {\n  return (0, _util.memo)(instanceId, () => (api.query.electionsPhragmen || api.query.elections).stakeOf ? retrievePrev(api) : retrieveCurrent(api));\n}"]},"metadata":{},"sourceType":"script"}