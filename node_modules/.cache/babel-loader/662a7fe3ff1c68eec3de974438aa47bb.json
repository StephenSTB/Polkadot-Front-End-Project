{"ast":null,"code":"import _slicedToArray from\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Table}from'semantic-ui-react';import{useSubstrate}from'./substrate-lib';function Main(props){var _useSubstrate=useSubstrate(),api=_useSubstrate.api;var _useState=useState(),_useState2=_slicedToArray(_useState,2),Block=_useState2[0],setBlock=_useState2[1];useEffect(function(){var unsubscribe=null;api.rpc.chain.subscribeNewHeads(function(header){setBlock(header);//console.log(`Chain is at block: #${header.number}`);\n}).then(function(unsub){unsubscribe=unsub;}).catch(console.error);return function(){return unsubscribe&&unsubscribe();};},[]);/*\r\n    const getInfo = async () =>{\r\n        const unsubscribe = await api.rpc.chain.subscribeNewHeads((header) => {\r\n            //console.log(`Chain is at block: #${header.hash}`);\\\r\n            setBlockNumber(header.number.toNumber());\r\n            setBlockHash(header.hash.toHuman());\r\n            setParrentHash(header.parentHash.toHuman());\r\n            setExtrinsicsRoot(header.extrinsicsRoot.toHuman());\r\n            setStateRoot()\r\n            //console.log(blockHash)\r\n            \r\n        });\r\n    }\r\n    getInfo();*/return/*#__PURE__*/React.createElement(Table,{celled:true},Block&&/*#__PURE__*/React.createElement(Table.Body,null,/*#__PURE__*/React.createElement(Table.Row,null,/*#__PURE__*/React.createElement(Table.Cell,null,\" Block Number \"),/*#__PURE__*/React.createElement(Table.Cell,null,Block.number.toNumber())),/*#__PURE__*/React.createElement(Table.Row,null,/*#__PURE__*/React.createElement(Table.Cell,null,\" Block Hash \"),/*#__PURE__*/React.createElement(Table.Cell,null,\" \",Block.hash.toHuman())),/*#__PURE__*/React.createElement(Table.Row,null,/*#__PURE__*/React.createElement(Table.Cell,null,\" Parent Hash \"),/*#__PURE__*/React.createElement(Table.Cell,null,\" \",Block.parentHash.toHuman())),/*#__PURE__*/React.createElement(Table.Row,null,/*#__PURE__*/React.createElement(Table.Cell,null,\" Extrinsic Root \"),/*#__PURE__*/React.createElement(Table.Cell,null,\" \",Block.extrinsicsRoot.toHuman())),/*#__PURE__*/React.createElement(Table.Row,null,/*#__PURE__*/React.createElement(Table.Cell,null,\" State Root \"),/*#__PURE__*/React.createElement(Table.Cell,null,\" \",Block.stateRoot.toHuman()))));}export default function BlockInfo(props){var _useSubstrate2=useSubstrate(),api=_useSubstrate2.api;return api.rpc&&api.rpc.chain&&api.rpc.chain.subscribeNewHeads?/*#__PURE__*/React.createElement(Main,props):null;}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/src/BlockInfo.js"],"names":["React","useEffect","useState","Table","useSubstrate","Main","props","api","Block","setBlock","unsubscribe","rpc","chain","subscribeNewHeads","header","then","unsub","catch","console","error","number","toNumber","hash","toHuman","parentHash","extrinsicsRoot","stateRoot","BlockInfo"],"mappings":"8PAEA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAAQC,KAAR,KAAoB,mBAApB,CAEA,OAASC,YAAT,KAA6B,iBAA7B,CAIA,QAASC,CAAAA,IAAT,CAAcC,KAAd,CAAoB,mBACAF,YAAY,EADZ,CACRG,GADQ,eACRA,GADQ,eAGSL,QAAQ,EAHjB,wCAGVM,KAHU,eAGHC,QAHG,eAKhBR,SAAS,CAAC,UAAK,CACX,GAAIS,CAAAA,WAAW,CAAG,IAAlB,CAEAH,GAAG,CAACI,GAAJ,CAAQC,KAAR,CAAcC,iBAAd,CAAgC,SAACC,MAAD,CAAY,CACxCL,QAAQ,CAACK,MAAD,CAAR,CACA;AACH,CAHD,EAGGC,IAHH,CAGQ,SAAAC,KAAK,CAAG,CACZN,WAAW,CAAGM,KAAd,CACH,CALD,EAKGC,KALH,CAKSC,OAAO,CAACC,KALjB,EAOA,MAAO,kBAAMT,CAAAA,WAAW,EAAIA,WAAW,EAAhC,EAAP,CACH,CAXQ,CAWN,EAXM,CAAT,CAaA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAEI,mBACK,oBAAC,KAAD,EAAO,MAAM,KAAb,EACIF,KAAK,eAAG,oBAAC,KAAD,CAAO,IAAP,mBACL,oBAAC,KAAD,CAAO,GAAP,mBACI,oBAAC,KAAD,CAAO,IAAP,uBADJ,cAEI,oBAAC,KAAD,CAAO,IAAP,MAAaA,KAAK,CAACY,MAAN,CAAaC,QAAb,EAAb,CAFJ,CADK,cAKL,oBAAC,KAAD,CAAO,GAAP,mBACI,oBAAC,KAAD,CAAO,IAAP,qBADJ,cAEI,oBAAC,KAAD,CAAO,IAAP,UAAcb,KAAK,CAACc,IAAN,CAAWC,OAAX,EAAd,CAFJ,CALK,cASL,oBAAC,KAAD,CAAO,GAAP,mBACI,oBAAC,KAAD,CAAO,IAAP,sBADJ,cAEI,oBAAC,KAAD,CAAO,IAAP,UAAcf,KAAK,CAACgB,UAAN,CAAiBD,OAAjB,EAAd,CAFJ,CATK,cAaL,oBAAC,KAAD,CAAO,GAAP,mBACI,oBAAC,KAAD,CAAO,IAAP,yBADJ,cAEI,oBAAC,KAAD,CAAO,IAAP,UAAcf,KAAK,CAACiB,cAAN,CAAqBF,OAArB,EAAd,CAFJ,CAbK,cAiBL,oBAAC,KAAD,CAAO,GAAP,mBACI,oBAAC,KAAD,CAAO,IAAP,qBADJ,cAEI,oBAAC,KAAD,CAAO,IAAP,UAAcf,KAAK,CAACkB,SAAN,CAAgBH,OAAhB,EAAd,CAFJ,CAjBK,CADZ,CADL,CA2BH,CAED,cAAe,SAASI,CAAAA,SAAT,CAAmBrB,KAAnB,CAAyB,oBACvBF,YAAY,EADW,CAC9BG,GAD8B,gBAC9BA,GAD8B,CAEpC,MAAOA,CAAAA,GAAG,CAACI,GAAJ,EACPJ,GAAG,CAACI,GAAJ,CAAQC,KADD,EAEPL,GAAG,CAACI,GAAJ,CAAQC,KAAR,CAAcC,iBAFP,cAGH,oBAAC,IAAD,CAAUP,KAAV,CAHG,CAIH,IAJJ,CAKH","sourcesContent":["\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport {Table} from 'semantic-ui-react';\r\n\r\nimport { useSubstrate } from './substrate-lib';\r\n\r\n\r\n\r\nfunction Main(props){\r\n    const { api } = useSubstrate();\r\n\r\n    const[Block, setBlock] = useState();\r\n\r\n    useEffect(()=> {\r\n        let unsubscribe = null;\r\n\r\n        api.rpc.chain.subscribeNewHeads((header) => {\r\n            setBlock(header);\r\n            //console.log(`Chain is at block: #${header.number}`);\r\n        }).then(unsub =>{\r\n            unsubscribe = unsub;\r\n        }).catch(console.error);\r\n\r\n        return () => unsubscribe && unsubscribe();\r\n    }, []);\r\n\r\n    /*\r\n    const getInfo = async () =>{\r\n        const unsubscribe = await api.rpc.chain.subscribeNewHeads((header) => {\r\n            //console.log(`Chain is at block: #${header.hash}`);\\\r\n            setBlockNumber(header.number.toNumber());\r\n            setBlockHash(header.hash.toHuman());\r\n            setParrentHash(header.parentHash.toHuman());\r\n            setExtrinsicsRoot(header.extrinsicsRoot.toHuman());\r\n            setStateRoot()\r\n            //console.log(blockHash)\r\n            \r\n        });\r\n    }\r\n    getInfo();*/\r\n    \r\n    return(\r\n         <Table celled>\r\n            {Block &&<Table.Body>\r\n                <Table.Row>\r\n                    <Table.Cell> Block Number </Table.Cell>\r\n                    <Table.Cell>{Block.number.toNumber()}</Table.Cell>\r\n                </Table.Row>\r\n                <Table.Row>\r\n                    <Table.Cell> Block Hash </Table.Cell>\r\n                    <Table.Cell> {Block.hash.toHuman()}</Table.Cell>\r\n                </Table.Row>\r\n                <Table.Row>\r\n                    <Table.Cell> Parent Hash </Table.Cell>\r\n                    <Table.Cell> {Block.parentHash.toHuman()}</Table.Cell>\r\n                </Table.Row>\r\n                <Table.Row>\r\n                    <Table.Cell> Extrinsic Root </Table.Cell>\r\n                    <Table.Cell> {Block.extrinsicsRoot.toHuman()}</Table.Cell>\r\n                </Table.Row>\r\n                <Table.Row>\r\n                    <Table.Cell> State Root </Table.Cell>\r\n                    <Table.Cell> {Block.stateRoot.toHuman()}</Table.Cell>\r\n                </Table.Row>\r\n            </Table.Body>}\r\n        </Table>\r\n    );\r\n\r\n}\r\n\r\nexport default function BlockInfo(props){\r\n    const{api} = useSubstrate();\r\n    return api.rpc &&\r\n    api.rpc.chain &&\r\n    api.rpc.chain.subscribeNewHeads  ? (\r\n        <Main {...props} />\r\n    ) : null;\r\n}"]},"metadata":{},"sourceType":"module"}