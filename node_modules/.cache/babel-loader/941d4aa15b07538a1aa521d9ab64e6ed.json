{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\n\nfunction BlockInfo(props) {\n  const {\n    api\n  } = useSubstrate();\n  const [blockHash, setBlockHash] = useState(0);\n\n  const getInfo = async () => {\n    const unsubscribe = await api.rpc.chain.subscribeNewHeads(header => {\n      console.log(`Chain is at block: #${header.hash}`);\n      setBlockHash(header.hash);\n      console.log(blockHash);\n    });\n  };\n\n  getInfo();\n  return text;\n}\n\nexport default BlockInfo;","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/src/BlockInfo.js"],"names":["React","useEffect","useState","Statistic","Grid","Card","Icon","useSubstrate","BlockInfo","props","api","blockHash","setBlockHash","getInfo","unsubscribe","rpc","chain","subscribeNewHeads","header","console","log","hash","text"],"mappings":"AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,IAAhC,QAA4C,mBAA5C;AAEA,SAASC,YAAT,QAA6B,iBAA7B;;AAIA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAUH,YAAY,EAA5B;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,CAAD,CAA1C;;AAEA,QAAMW,OAAO,GAAG,YAAW;AACvB,UAAMC,WAAW,GAAG,MAAMJ,GAAG,CAACK,GAAJ,CAAQC,KAAR,CAAcC,iBAAd,CAAiCC,MAAD,IAAY;AAClEC,MAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBF,MAAM,CAACG,IAAK,EAA/C;AACAT,MAAAA,YAAY,CAACM,MAAM,CAACG,IAAR,CAAZ;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AAEH,KALyB,CAA1B;AAMH,GAPD;;AAQAE,EAAAA,OAAO;AAEP,SACIS,IADJ;AAIH;;AAED,eAAed,SAAf","sourcesContent":["\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react';\r\n\r\nimport { useSubstrate } from './substrate-lib';\r\n\r\n\r\n\r\nfunction BlockInfo(props){\r\n    const { api } = useSubstrate();\r\n    const [blockHash, setBlockHash] = useState(0);\r\n\r\n    const getInfo = async () =>{\r\n        const unsubscribe = await api.rpc.chain.subscribeNewHeads((header) => {\r\n            console.log(`Chain is at block: #${header.hash}`);\r\n            setBlockHash(header.hash);\r\n            console.log(blockHash)\r\n            \r\n        });\r\n    }\r\n    getInfo();\r\n    \r\n    return(\r\n        text\r\n    );\r\n\r\n}\r\n\r\nexport default BlockInfo"]},"metadata":{},"sourceType":"module"}