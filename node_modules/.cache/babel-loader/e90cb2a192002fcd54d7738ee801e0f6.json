{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toBn = _interopRequireDefault(require(\"../bn/toBn\"));\n\nvar _boolean = _interopRequireDefault(require(\"../is/boolean\"));\n\nvar _undefined = _interopRequireDefault(require(\"../is/undefined\"));\n\nvar _formatDecimal = _interopRequireDefault(require(\"./formatDecimal\"));\n\nvar _si = require(\"./si\"); // Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nvar DEFAULT_DECIMALS = 0;\nvar DEFAULT_UNIT = _si.SI[_si.SI_MID].text;\nvar defaultDecimals = DEFAULT_DECIMALS;\nvar defaultUnit = DEFAULT_UNIT; // Formats a string/number with <prefix>.<postfix><type> notation\n\nfunction _formatBalance(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var optDecimals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultDecimals;\n  var text = (0, _toBn.default)(input).toString();\n\n  if (text.length === 0 || text === '0') {\n    return '0';\n  } // strip the negative sign so we can work with clean groupings, re-add this in the\n  // end when we return the result (from here on we work with positive numbers)\n\n\n  var isNegative = text[0].startsWith('-');\n\n  if (isNegative) {\n    text = text.substr(1);\n  } // extract options - the boolean case is for backwards-compat\n\n\n  var _ref = (0, _boolean.default)(options) ? {\n    withSi: options\n  } : options,\n      _ref$decimals = _ref.decimals,\n      decimals = _ref$decimals === void 0 ? optDecimals : _ref$decimals,\n      _ref$forceUnit = _ref.forceUnit,\n      forceUnit = _ref$forceUnit === void 0 ? undefined : _ref$forceUnit,\n      _ref$withSi = _ref.withSi,\n      withSi = _ref$withSi === void 0 ? true : _ref$withSi,\n      _ref$withSiFull = _ref.withSiFull,\n      withSiFull = _ref$withSiFull === void 0 ? false : _ref$withSiFull,\n      _ref$withUnit = _ref.withUnit,\n      withUnit = _ref$withUnit === void 0 ? true : _ref$withUnit; // NOTE We start at midpoint (8) minus 1 - this means that values display as\n  // 123.456 instead of 0.123k (so always 6 relevant). Additionally we us ceil\n  // so there are at most 3 decimal before the decimal seperator\n\n\n  var si = (0, _si.calcSi)(text, decimals, forceUnit);\n  var mid = text.length - (decimals + si.power);\n  var prefix = text.substr(0, mid);\n  var padding = mid < 0 ? 0 - mid : 0;\n  var postfix = \"\".concat(\"\".concat(new Array(padding + 1).join('0')).concat(text).substr(mid < 0 ? 0 : mid), \"0000\").substr(0, 4);\n  var units = withSi || withSiFull ? si.value === '-' ? withUnit ? \" \".concat((0, _boolean.default)(withUnit) ? si.text : withUnit) : '' : \" \".concat(withSiFull ? si.text : si.value).concat(withUnit ? \"\".concat(withSiFull ? ' ' : '').concat((0, _boolean.default)(withUnit) ? _si.SI[_si.SI_MID].text : withUnit) : '') : '';\n  return \"\".concat(isNegative ? '-' : '').concat((0, _formatDecimal.default)(prefix || '0'), \".\").concat(postfix).concat(units);\n}\n\nvar formatBalance = _formatBalance; // eslint-disable-next-line @typescript-eslint/unbound-method\n\nformatBalance.calcSi = function (text) {\n  var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultDecimals;\n  return (0, _si.calcSi)(text, decimals);\n}; // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nformatBalance.findSi = _si.findSi; // eslint-disable-next-line @typescript-eslint/unbound-method\n\nformatBalance.getDefaults = function () {\n  return {\n    decimals: defaultDecimals,\n    unit: defaultUnit\n  };\n}; // get allowable options to display in a dropdown\n// eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nformatBalance.getOptions = function () {\n  var decimals = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultDecimals;\n  return _si.SI.filter(function (_ref2) {\n    var power = _ref2.power;\n    return power < 0 ? decimals + power >= 0 : true;\n  });\n}; // Sets the default decimals to use for formatting (ui-wide)\n// eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nformatBalance.setDefaults = function (_ref3) {\n  var decimals = _ref3.decimals,\n      unit = _ref3.unit;\n  defaultDecimals = (0, _undefined.default)(decimals) ? defaultDecimals : decimals;\n  defaultUnit = (0, _undefined.default)(unit) ? defaultUnit : unit;\n  _si.SI[_si.SI_MID].text = defaultUnit;\n};\n\nvar _default = formatBalance;\nexports.default = _default;","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/util/format/formatBalance.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_toBn","_boolean","_undefined","_formatDecimal","_si","DEFAULT_DECIMALS","DEFAULT_UNIT","SI","SI_MID","text","defaultDecimals","defaultUnit","_formatBalance","input","options","optDecimals","toString","length","isNegative","startsWith","substr","withSi","decimals","forceUnit","undefined","withSiFull","withUnit","si","calcSi","mid","power","prefix","padding","postfix","Array","join","units","formatBalance","findSi","getDefaults","unit","getOptions","filter","setDefaults","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toBn = _interopRequireDefault(require(\"../bn/toBn\"));\n\nvar _boolean = _interopRequireDefault(require(\"../is/boolean\"));\n\nvar _undefined = _interopRequireDefault(require(\"../is/undefined\"));\n\nvar _formatDecimal = _interopRequireDefault(require(\"./formatDecimal\"));\n\nvar _si = require(\"./si\");\n\n// Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst DEFAULT_DECIMALS = 0;\nconst DEFAULT_UNIT = _si.SI[_si.SI_MID].text;\nlet defaultDecimals = DEFAULT_DECIMALS;\nlet defaultUnit = DEFAULT_UNIT; // Formats a string/number with <prefix>.<postfix><type> notation\n\nfunction _formatBalance(input, options = true, optDecimals = defaultDecimals) {\n  let text = (0, _toBn.default)(input).toString();\n\n  if (text.length === 0 || text === '0') {\n    return '0';\n  } // strip the negative sign so we can work with clean groupings, re-add this in the\n  // end when we return the result (from here on we work with positive numbers)\n\n\n  const isNegative = text[0].startsWith('-');\n\n  if (isNegative) {\n    text = text.substr(1);\n  } // extract options - the boolean case is for backwards-compat\n\n\n  const {\n    decimals = optDecimals,\n    forceUnit = undefined,\n    withSi = true,\n    withSiFull = false,\n    withUnit = true\n  } = (0, _boolean.default)(options) ? {\n    withSi: options\n  } : options; // NOTE We start at midpoint (8) minus 1 - this means that values display as\n  // 123.456 instead of 0.123k (so always 6 relevant). Additionally we us ceil\n  // so there are at most 3 decimal before the decimal seperator\n\n  const si = (0, _si.calcSi)(text, decimals, forceUnit);\n  const mid = text.length - (decimals + si.power);\n  const prefix = text.substr(0, mid);\n  const padding = mid < 0 ? 0 - mid : 0;\n  const postfix = `${`${new Array(padding + 1).join('0')}${text}`.substr(mid < 0 ? 0 : mid)}0000`.substr(0, 4);\n  const units = withSi || withSiFull ? si.value === '-' ? withUnit ? ` ${(0, _boolean.default)(withUnit) ? si.text : withUnit}` : '' : ` ${withSiFull ? si.text : si.value}${withUnit ? `${withSiFull ? ' ' : ''}${(0, _boolean.default)(withUnit) ? _si.SI[_si.SI_MID].text : withUnit}` : ''}` : '';\n  return `${isNegative ? '-' : ''}${(0, _formatDecimal.default)(prefix || '0')}.${postfix}${units}`;\n}\n\nconst formatBalance = _formatBalance; // eslint-disable-next-line @typescript-eslint/unbound-method\n\nformatBalance.calcSi = (text, decimals = defaultDecimals) => (0, _si.calcSi)(text, decimals); // eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nformatBalance.findSi = _si.findSi; // eslint-disable-next-line @typescript-eslint/unbound-method\n\nformatBalance.getDefaults = () => {\n  return {\n    decimals: defaultDecimals,\n    unit: defaultUnit\n  };\n}; // get allowable options to display in a dropdown\n// eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nformatBalance.getOptions = (decimals = defaultDecimals) => {\n  return _si.SI.filter(({\n    power\n  }) => power < 0 ? decimals + power >= 0 : true);\n}; // Sets the default decimals to use for formatting (ui-wide)\n// eslint-disable-next-line @typescript-eslint/unbound-method\n\n\nformatBalance.setDefaults = ({\n  decimals,\n  unit\n}) => {\n  defaultDecimals = (0, _undefined.default)(decimals) ? defaultDecimals : decimals;\n  defaultUnit = (0, _undefined.default)(unit) ? defaultUnit : unit;\n  _si.SI[_si.SI_MID].text = defaultUnit;\n};\n\nvar _default = formatBalance;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}