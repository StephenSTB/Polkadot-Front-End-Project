{"ast":null,"code":"\"use strict\";\n\nvar _inherits = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _classCallCheck = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _Null = _interopRequireDefault(require(\"../primitive/Null\"));\n\nvar _utils = require(\"./utils\");\n\nvar _Raw = _interopRequireDefault(require(\"./Raw\")); // Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\n\n\nfunction decodeOptionU8a(registry, Type, value) {\n  return !value.length || value[0] === 0 ? new _Null.default(registry) : new Type(registry, value.subarray(1));\n}\n/** @internal */\n\n\nfunction decodeOption(registry, typeName, value) {\n  if ((0, _util.isNull)(value) || (0, _util.isUndefined)(value) || value instanceof _Null.default) {\n    return new _Null.default(registry);\n  }\n\n  var Type = (0, _utils.typeToConstructor)(registry, typeName); // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n  if (value instanceof Option) {\n    return decodeOption(registry, Type, value.value);\n  } else if (value instanceof Type) {\n    // don't re-create, use as it (which also caters for derived types)\n    return value;\n  } else if ((0, _util.isU8a)(value)) {\n    // the isU8a check happens last in the if-tree - since the wrapped value\n    // may be an instance of it, so Type and Option checks go in first\n    return decodeOptionU8a(registry, Type, value);\n  }\n\n  return new Type(registry, value);\n}\n/**\n * @name Option\n * @description\n * An Option is an optional field. Basically the first byte indicates that there is\n * is value to follow. If the byte is `1` there is an actual value. So the Option\n * implements that - decodes, checks for optionality and wraps the required structure\n * with a value if/as required/found.\n */\n\n\nvar _Type = (0, _classPrivateFieldLooseKey2.default)(\"Type\");\n\nvar _raw = (0, _classPrivateFieldLooseKey2.default)(\"raw\");\n\nvar Option = /*#__PURE__*/function () {\n  function Option(registry, typeName, value) {\n    _classCallCheck(this, Option);\n\n    this.registry = void 0;\n    Object.defineProperty(this, _Type, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _raw, {\n      writable: true,\n      value: void 0\n    });\n    this.registry = registry;\n    (0, _classPrivateFieldLooseBase2.default)(this, _Type)[_Type] = (0, _utils.typeToConstructor)(registry, typeName);\n    (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw] = decodeOption(registry, typeName, value);\n  }\n\n  _createClass(Option, [{\n    key: \"eq\",\n\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    value: function eq(other) {\n      if (other instanceof Option) {\n        return this.isSome === other.isSome && this.value.eq(other.value);\n      }\n\n      return this.value.eq(other);\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n\n  }, {\n    key: \"toHex\",\n    value: function toHex() {\n      // This attempts to align with the JSON encoding - actually in this case\n      // the isSome value is correct, however the `isNone` may be problematic\n      return this.isNone ? '0x' : (0, _util.u8aToHex)(this.toU8a().subarray(1));\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n\n  }, {\n    key: \"toHuman\",\n    value: function toHuman(isExtended) {\n      return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toHuman(isExtended);\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toJSON();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n\n  }, {\n    key: \"toRawType\",\n    value: function toRawType(isBare) {\n      var wrapped = this.registry.getClassName((0, _classPrivateFieldLooseBase2.default)(this, _Type)[_Type]) || new ((0, _classPrivateFieldLooseBase2.default)(this, _Type)[_Type])(this.registry).toRawType();\n      return isBare ? wrapped : \"Option<\".concat(wrapped, \">\");\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toString();\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n\n  }, {\n    key: \"toU8a\",\n    value: function toU8a(isBare) {\n      if (isBare) {\n        return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toU8a(true);\n      }\n\n      var u8a = new Uint8Array(this.encodedLength);\n\n      if (this.isSome) {\n        u8a.set([1]);\n        u8a.set((0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toU8a(), 1);\n      }\n\n      return u8a;\n    }\n    /**\n     * @description Returns the value that the Option represents (if available), throws if null\n     */\n\n  }, {\n    key: \"unwrap\",\n    value: function unwrap() {\n      if (this.isNone) {\n        throw new Error('Option: unwrapping a None value');\n      }\n\n      return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw];\n    }\n    /**\n     * @description Returns the value that the Option represents (if available) or defaultValue if none\n     * @param defaultValue The value to return if the option isNone\n     */\n\n  }, {\n    key: \"unwrapOr\",\n    value: function unwrapOr(defaultValue) {\n      return this.isSome ? this.unwrap() : defaultValue;\n    }\n    /**\n     * @description Returns the value that the Option represents (if available) or defaultValue if none\n     * @param defaultValue The value to return if the option isNone\n     */\n\n  }, {\n    key: \"unwrapOrDefault\",\n    value: function unwrapOrDefault() {\n      return this.isSome ? this.unwrap() : new ((0, _classPrivateFieldLooseBase2.default)(this, _Type)[_Type])(this.registry);\n    }\n  }, {\n    key: \"encodedLength\",\n\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get: function get() {\n      // boolean byte (has value, doesn't have) along with wrapped length\n      return 1 + (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].encodedLength;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n\n  }, {\n    key: \"hash\",\n    get: function get() {\n      return new _Raw.default(this.registry, this.registry.hash(this.toU8a()));\n    }\n    /**\n     * @description Checks if the Option has no value\n     */\n\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this.isNone;\n    }\n    /**\n     * @description Checks if the Option has no value\n     */\n\n  }, {\n    key: \"isNone\",\n    get: function get() {\n      return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw] instanceof _Null.default;\n    }\n    /**\n     * @description Checks if the Option has a value\n     */\n\n  }, {\n    key: \"isSome\",\n    get: function get() {\n      return !this.isNone;\n    }\n    /**\n     * @description The actual value for the Option\n     */\n\n  }, {\n    key: \"value\",\n    get: function get() {\n      return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw];\n    }\n  }], [{\n    key: \"with\",\n    value: function _with(Type) {\n      return /*#__PURE__*/function (_Option) {\n        _inherits(_class, _Option);\n\n        var _super = _createSuper(_class);\n\n        function _class(registry, value) {\n          _classCallCheck(this, _class);\n\n          return _super.call(this, registry, Type, value);\n        }\n\n        return _class;\n      }(Option);\n    }\n  }]);\n\n  return Option;\n}();\n\nexports.default = Option;","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/types/codec/Option.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_classPrivateFieldLooseBase2","_classPrivateFieldLooseKey2","_util","_Null","_utils","_Raw","decodeOptionU8a","registry","Type","length","subarray","decodeOption","typeName","isNull","isUndefined","typeToConstructor","Option","isU8a","_Type","_raw","writable","other","isSome","eq","isNone","u8aToHex","toU8a","isExtended","toHuman","toJSON","isBare","wrapped","getClassName","toRawType","toString","u8a","Uint8Array","encodedLength","set","Error","defaultValue","unwrap","hash"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _Null = _interopRequireDefault(require(\"../primitive/Null\"));\n\nvar _utils = require(\"./utils\");\n\nvar _Raw = _interopRequireDefault(require(\"./Raw\"));\n\n// Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\nfunction decodeOptionU8a(registry, Type, value) {\n  return !value.length || value[0] === 0 ? new _Null.default(registry) : new Type(registry, value.subarray(1));\n}\n/** @internal */\n\n\nfunction decodeOption(registry, typeName, value) {\n  if ((0, _util.isNull)(value) || (0, _util.isUndefined)(value) || value instanceof _Null.default) {\n    return new _Null.default(registry);\n  }\n\n  const Type = (0, _utils.typeToConstructor)(registry, typeName); // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n  if (value instanceof Option) {\n    return decodeOption(registry, Type, value.value);\n  } else if (value instanceof Type) {\n    // don't re-create, use as it (which also caters for derived types)\n    return value;\n  } else if ((0, _util.isU8a)(value)) {\n    // the isU8a check happens last in the if-tree - since the wrapped value\n    // may be an instance of it, so Type and Option checks go in first\n    return decodeOptionU8a(registry, Type, value);\n  }\n\n  return new Type(registry, value);\n}\n/**\n * @name Option\n * @description\n * An Option is an optional field. Basically the first byte indicates that there is\n * is value to follow. If the byte is `1` there is an actual value. So the Option\n * implements that - decodes, checks for optionality and wraps the required structure\n * with a value if/as required/found.\n */\n\n\nvar _Type = (0, _classPrivateFieldLooseKey2.default)(\"Type\");\n\nvar _raw = (0, _classPrivateFieldLooseKey2.default)(\"raw\");\n\nclass Option {\n  constructor(registry, typeName, value) {\n    this.registry = void 0;\n    Object.defineProperty(this, _Type, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _raw, {\n      writable: true,\n      value: void 0\n    });\n    this.registry = registry;\n    (0, _classPrivateFieldLooseBase2.default)(this, _Type)[_Type] = (0, _utils.typeToConstructor)(registry, typeName);\n    (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw] = decodeOption(registry, typeName, value);\n  }\n\n  static with(Type) {\n    return class extends Option {\n      constructor(registry, value) {\n        super(registry, Type, value);\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    // boolean byte (has value, doesn't have) along with wrapped length\n    return 1 + (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].encodedLength;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return new _Raw.default(this.registry, this.registry.hash(this.toU8a()));\n  }\n  /**\n   * @description Checks if the Option has no value\n   */\n\n\n  get isEmpty() {\n    return this.isNone;\n  }\n  /**\n   * @description Checks if the Option has no value\n   */\n\n\n  get isNone() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw] instanceof _Null.default;\n  }\n  /**\n   * @description Checks if the Option has a value\n   */\n\n\n  get isSome() {\n    return !this.isNone;\n  }\n  /**\n   * @description The actual value for the Option\n   */\n\n\n  get value() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw];\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    if (other instanceof Option) {\n      return this.isSome === other.isSome && this.value.eq(other.value);\n    }\n\n    return this.value.eq(other);\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    // This attempts to align with the JSON encoding - actually in this case\n    // the isSome value is correct, however the `isNone` may be problematic\n    return this.isNone ? '0x' : (0, _util.u8aToHex)(this.toU8a().subarray(1));\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toHuman(isExtended);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toJSON();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType(isBare) {\n    const wrapped = this.registry.getClassName((0, _classPrivateFieldLooseBase2.default)(this, _Type)[_Type]) || new ((0, _classPrivateFieldLooseBase2.default)(this, _Type)[_Type])(this.registry).toRawType();\n    return isBare ? wrapped : `Option<${wrapped}>`;\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toString();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    if (isBare) {\n      return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toU8a(true);\n    }\n\n    const u8a = new Uint8Array(this.encodedLength);\n\n    if (this.isSome) {\n      u8a.set([1]);\n      u8a.set((0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toU8a(), 1);\n    }\n\n    return u8a;\n  }\n  /**\n   * @description Returns the value that the Option represents (if available), throws if null\n   */\n\n\n  unwrap() {\n    if (this.isNone) {\n      throw new Error('Option: unwrapping a None value');\n    }\n\n    return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw];\n  }\n  /**\n   * @description Returns the value that the Option represents (if available) or defaultValue if none\n   * @param defaultValue The value to return if the option isNone\n   */\n\n\n  unwrapOr(defaultValue) {\n    return this.isSome ? this.unwrap() : defaultValue;\n  }\n  /**\n   * @description Returns the value that the Option represents (if available) or defaultValue if none\n   * @param defaultValue The value to return if the option isNone\n   */\n\n\n  unwrapOrDefault() {\n    return this.isSome ? this.unwrap() : new ((0, _classPrivateFieldLooseBase2.default)(this, _Type)[_Type])(this.registry);\n  }\n\n}\n\nexports.default = Option;"]},"metadata":{},"sourceType":"script"}