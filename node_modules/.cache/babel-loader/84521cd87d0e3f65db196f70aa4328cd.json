{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extractAuthor = extractAuthor; // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nfunction extractAuthor(digest) {\n  var sessionValidators = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  var _digest$logs$filter = digest.logs.filter(function (_ref) {\n    var type = _ref.type;\n    return type === 'PreRuntime';\n  }),\n      _digest$logs$filter2 = _slicedToArray(_digest$logs$filter, 1),\n      pitem = _digest$logs$filter2[0]; // extract from the substrate 2.0 PreRuntime digest\n\n\n  if (pitem) {\n    var _pitem$asPreRuntime = _slicedToArray(pitem.asPreRuntime, 2),\n        engine = _pitem$asPreRuntime[0],\n        data = _pitem$asPreRuntime[1];\n\n    return engine.extractAuthor(data, sessionValidators);\n  } else {\n    var _digest$logs$filter3 = digest.logs.filter(function (_ref2) {\n      var type = _ref2.type;\n      return type === 'Consensus';\n    }),\n        _digest$logs$filter4 = _slicedToArray(_digest$logs$filter3, 1),\n        citem = _digest$logs$filter4[0]; // extract author from the consensus (substrate 1.0, digest)\n\n\n    if (citem) {\n      var _citem$asConsensus = _slicedToArray(citem.asConsensus, 2),\n          _engine = _citem$asConsensus[0],\n          _data = _citem$asConsensus[1];\n\n      return _engine.extractAuthor(_data, sessionValidators);\n    }\n  }\n\n  return undefined;\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/type/util.js"],"names":["Object","defineProperty","exports","value","extractAuthor","digest","sessionValidators","logs","filter","type","pitem","asPreRuntime","engine","data","citem","asConsensus","undefined"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,aAAR,GAAwBA,aAAxB,C,CAEA;AACA;;AACA,SAASA,aAAT,CAAuBC,MAAvB,EAAuD;AAAA,MAAxBC,iBAAwB,uEAAJ,EAAI;;AAAA,4BACrCD,MAAM,CAACE,IAAP,CAAYC,MAAZ,CAAmB;AAAA,QACjCC,IADiC,QACjCA,IADiC;AAAA,WAE7BA,IAAI,KAAK,YAFoB;AAAA,GAAnB,CADqC;AAAA;AAAA,MAC9CC,KAD8C,4BAGvB;;;AAE9B,MAAIA,KAAJ,EAAW;AAAA,6CACcA,KAAK,CAACC,YADpB;AAAA,QACFC,MADE;AAAA,QACMC,IADN;;AAET,WAAOD,MAAM,CAACR,aAAP,CAAqBS,IAArB,EAA2BP,iBAA3B,CAAP;AACD,GAHD,MAGO;AAAA,+BACWD,MAAM,CAACE,IAAP,CAAYC,MAAZ,CAAmB;AAAA,UACjCC,IADiC,SACjCA,IADiC;AAAA,aAE7BA,IAAI,KAAK,WAFoB;AAAA,KAAnB,CADX;AAAA;AAAA,QACEK,KADF,4BAGwB;;;AAE7B,QAAIA,KAAJ,EAAW;AAAA,8CACcA,KAAK,CAACC,WADpB;AAAA,UACFH,OADE;AAAA,UACMC,KADN;;AAET,aAAOD,OAAM,CAACR,aAAP,CAAqBS,KAArB,EAA2BP,iBAA3B,CAAP;AACD;AACF;;AAED,SAAOU,SAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extractAuthor = extractAuthor;\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction extractAuthor(digest, sessionValidators = []) {\n  const [pitem] = digest.logs.filter(({\n    type\n  }) => type === 'PreRuntime'); // extract from the substrate 2.0 PreRuntime digest\n\n  if (pitem) {\n    const [engine, data] = pitem.asPreRuntime;\n    return engine.extractAuthor(data, sessionValidators);\n  } else {\n    const [citem] = digest.logs.filter(({\n      type\n    }) => type === 'Consensus'); // extract author from the consensus (substrate 1.0, digest)\n\n    if (citem) {\n      const [engine, data] = citem.asConsensus;\n      return engine.extractAuthor(data, sessionValidators);\n    }\n  }\n\n  return undefined;\n}"]},"metadata":{},"sourceType":"script"}