{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _inherits = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _classCallCheck = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _defaults = require(\"@polkadot/util/compact/defaults\");\n\nvar _typeToConstructor = _interopRequireDefault(require(\"./utils/typeToConstructor\"));\n\nvar _Raw = _interopRequireDefault(require(\"./Raw\")); // Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nvar _Type = (0, _classPrivateFieldLooseKey2.default)(\"Type\");\n\nvar _raw = (0, _classPrivateFieldLooseKey2.default)(\"raw\");\n/**\n * @name Compact\n * @description\n * A compact length-encoding codec wrapper. It performs the same function as Length, however\n * differs in that it uses a variable number of bytes to do the actual encoding. This is mostly\n * used by other types to add length-prefixed encoding, or in the case of wrapped types, taking\n * a number and making the compact representation thereof\n */\n\n\nvar Compact = /*#__PURE__*/function () {\n  function Compact(registry, Type) {\n    var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    _classCallCheck(this, Compact);\n\n    this.registry = void 0;\n    Object.defineProperty(this, _Type, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _raw, {\n      writable: true,\n      value: void 0\n    });\n    this.registry = registry;\n    (0, _classPrivateFieldLooseBase2.default)(this, _Type)[_Type] = (0, _typeToConstructor.default)(registry, Type);\n    (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw] = Compact.decodeCompact(registry, (0, _classPrivateFieldLooseBase2.default)(this, _Type)[_Type], value);\n  }\n\n  _createClass(Compact, [{\n    key: \"bitLength\",\n\n    /**\n     * @description Returns the number of bits in the value\n     */\n    value: function bitLength() {\n      return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].bitLength();\n    }\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n\n  }, {\n    key: \"eq\",\n    value: function eq(other) {\n      return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].eq(other instanceof Compact ? (0, _classPrivateFieldLooseBase2.default)(other, _raw)[_raw] : other);\n    }\n    /**\n     * @description Returns a BigInt representation of the number\n     */\n\n  }, {\n    key: \"toBigInt\",\n    value: function toBigInt() {\n      return BigInt(this.toString());\n    }\n    /**\n     * @description Returns the BN representation of the number\n     */\n\n  }, {\n    key: \"toBn\",\n    value: function toBn() {\n      return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toBn();\n    }\n    /**\n     * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n     */\n\n  }, {\n    key: \"toHex\",\n    value: function toHex(isLe) {\n      return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toHex(isLe);\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n\n  }, {\n    key: \"toHuman\",\n    value: function toHuman(isExtended) {\n      return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toHuman(isExtended);\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toJSON();\n    }\n    /**\n     * @description Returns the number representation for the value\n     */\n\n  }, {\n    key: \"toNumber\",\n    value: function toNumber() {\n      return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toNumber();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n\n  }, {\n    key: \"toRawType\",\n    value: function toRawType() {\n      return \"Compact<\".concat(this.registry.getClassName((0, _classPrivateFieldLooseBase2.default)(this, _Type)[_Type]) || (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toRawType(), \">\");\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toString();\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  }, {\n    key: \"toU8a\",\n    value: function toU8a(isBare) {\n      return Compact.encodeU8a((0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toBn());\n    }\n    /**\n     * @description Returns the embedded [[UInt]] or [[Moment]] value\n     */\n\n  }, {\n    key: \"unwrap\",\n    value: function unwrap() {\n      return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw];\n    }\n  }, {\n    key: \"encodedLength\",\n\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get: function get() {\n      return this.toU8a().length;\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n\n  }, {\n    key: \"hash\",\n    get: function get() {\n      return new _Raw.default(this.registry, this.registry.hash(this.toU8a()));\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].isEmpty;\n    }\n  }], [{\n    key: \"with\",\n    value: function _with(Type) {\n      return /*#__PURE__*/function (_Compact) {\n        _inherits(_class, _Compact);\n\n        var _super = _createSuper(_class);\n\n        function _class(registry, value) {\n          _classCallCheck(this, _class);\n\n          return _super.call(this, registry, Type, value);\n        }\n\n        return _class;\n      }(Compact);\n    }\n    /**\n     * Prepend a Uint8Array with its compact length.\n     *\n     * @param u8a - The Uint8Array to be prefixed\n     */\n\n  }, {\n    key: \"stripLengthPrefix\",\n    value: function stripLengthPrefix(u8a) {\n      var bitLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _defaults.DEFAULT_BITLENGTH;\n\n      var _ref = (0, _util.compactStripLength)(u8a, bitLength),\n          _ref2 = _slicedToArray(_ref, 2),\n          value = _ref2[1];\n\n      return value;\n    }\n    /** @internal */\n\n  }, {\n    key: \"decodeCompact\",\n    value: function decodeCompact(registry, Type, value) {\n      if (value instanceof Compact) {\n        return new Type(registry, (0, _classPrivateFieldLooseBase2.default)(value, _raw)[_raw]);\n      } else if ((0, _util.isString)(value) || (0, _util.isNumber)(value) || (0, _util.isBn)(value) || (0, _util.isBigInt)(value)) {\n        return new Type(registry, value);\n      }\n\n      var _Compact$decodeU8a = Compact.decodeU8a(value, new Type(registry, 0).bitLength()),\n          _Compact$decodeU8a2 = _slicedToArray(_Compact$decodeU8a, 2),\n          _value = _Compact$decodeU8a2[1];\n\n      return new Type(registry, _value);\n    }\n  }]);\n\n  return Compact;\n}();\n\nexports.default = Compact;\nCompact.addLengthPrefix = _util.compactAddLength;\nCompact.decodeU8a = _util.compactFromU8a;\nCompact.encodeU8a = _util.compactToU8a;","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/types/codec/Compact.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_classPrivateFieldLooseBase2","_classPrivateFieldLooseKey2","_util","_defaults","_typeToConstructor","_Raw","_Type","_raw","Compact","registry","Type","writable","decodeCompact","bitLength","other","eq","BigInt","toString","toBn","isLe","toHex","isExtended","toHuman","toJSON","toNumber","getClassName","toRawType","isBare","encodeU8a","toU8a","length","hash","isEmpty","u8a","DEFAULT_BITLENGTH","compactStripLength","isString","isNumber","isBn","isBigInt","decodeU8a","_value","addLengthPrefix","compactAddLength","compactFromU8a","compactToU8a"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _defaults = require(\"@polkadot/util/compact/defaults\");\n\nvar _typeToConstructor = _interopRequireDefault(require(\"./utils/typeToConstructor\"));\n\nvar _Raw = _interopRequireDefault(require(\"./Raw\"));\n\n// Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nvar _Type = (0, _classPrivateFieldLooseKey2.default)(\"Type\");\n\nvar _raw = (0, _classPrivateFieldLooseKey2.default)(\"raw\");\n\n/**\n * @name Compact\n * @description\n * A compact length-encoding codec wrapper. It performs the same function as Length, however\n * differs in that it uses a variable number of bytes to do the actual encoding. This is mostly\n * used by other types to add length-prefixed encoding, or in the case of wrapped types, taking\n * a number and making the compact representation thereof\n */\nclass Compact {\n  constructor(registry, Type, value = 0) {\n    this.registry = void 0;\n    Object.defineProperty(this, _Type, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _raw, {\n      writable: true,\n      value: void 0\n    });\n    this.registry = registry;\n    (0, _classPrivateFieldLooseBase2.default)(this, _Type)[_Type] = (0, _typeToConstructor.default)(registry, Type);\n    (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw] = Compact.decodeCompact(registry, (0, _classPrivateFieldLooseBase2.default)(this, _Type)[_Type], value);\n  }\n\n  static with(Type) {\n    return class extends Compact {\n      constructor(registry, value) {\n        super(registry, Type, value);\n      }\n\n    };\n  }\n  /**\n   * Prepend a Uint8Array with its compact length.\n   *\n   * @param u8a - The Uint8Array to be prefixed\n   */\n\n\n  static stripLengthPrefix(u8a, bitLength = _defaults.DEFAULT_BITLENGTH) {\n    const [, value] = (0, _util.compactStripLength)(u8a, bitLength);\n    return value;\n  }\n  /** @internal */\n\n\n  static decodeCompact(registry, Type, value) {\n    if (value instanceof Compact) {\n      return new Type(registry, (0, _classPrivateFieldLooseBase2.default)(value, _raw)[_raw]);\n    } else if ((0, _util.isString)(value) || (0, _util.isNumber)(value) || (0, _util.isBn)(value) || (0, _util.isBigInt)(value)) {\n      return new Type(registry, value);\n    }\n\n    const [, _value] = Compact.decodeU8a(value, new Type(registry, 0).bitLength());\n    return new Type(registry, _value);\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.toU8a().length;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return new _Raw.default(this.registry, this.registry.hash(this.toU8a()));\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].isEmpty;\n  }\n  /**\n   * @description Returns the number of bits in the value\n   */\n\n\n  bitLength() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].bitLength();\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].eq(other instanceof Compact ? (0, _classPrivateFieldLooseBase2.default)(other, _raw)[_raw] : other);\n  }\n  /**\n   * @description Returns a BigInt representation of the number\n   */\n\n\n  toBigInt() {\n    return BigInt(this.toString());\n  }\n  /**\n   * @description Returns the BN representation of the number\n   */\n\n\n  toBn() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toBn();\n  }\n  /**\n   * @description Returns a hex string representation of the value. isLe returns a LE (number-only) representation\n   */\n\n\n  toHex(isLe) {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toHex(isLe);\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toHuman(isExtended);\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toJSON();\n  }\n  /**\n   * @description Returns the number representation for the value\n   */\n\n\n  toNumber() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toNumber();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return `Compact<${this.registry.getClassName((0, _classPrivateFieldLooseBase2.default)(this, _Type)[_Type]) || (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toRawType()}>`;\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toString();\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return Compact.encodeU8a((0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw].toBn());\n  }\n  /**\n   * @description Returns the embedded [[UInt]] or [[Moment]] value\n   */\n\n\n  unwrap() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _raw)[_raw];\n  }\n\n}\n\nexports.default = Compact;\nCompact.addLengthPrefix = _util.compactAddLength;\nCompact.decodeU8a = _util.compactFromU8a;\nCompact.encodeU8a = _util.compactToU8a;"]},"metadata":{},"sourceType":"script"}