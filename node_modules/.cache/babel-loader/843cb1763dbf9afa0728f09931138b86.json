{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/src/BlockInfo.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\n\nfunction BlockInfo(props) {\n  const {\n    api\n  } = useSubstrate();\n  /*\r\n  const [blockNumber, setBlockNumber] = useState(0);\r\n  const [blockHash, setBlockHash] = useState(0);\r\n  const [parentHash, setParrentHash] = useState(0);*/\n\n  const [blockHeader, setHeader] = useState(0);\n  useEffect(() => {\n    const getInfo = async () => {\n      const unsubscribe = await api.rpc.chain.subscribeNewHeads(header => {\n        //console.log(`Chain is at block: #${header.hash}`);\\\n\n        /*\r\n        setBlockNumber(header.number.toNumber());\r\n        setBlockHash(header.hash.toHuman());\r\n        setParrentHash(header.parentHash.toHuman());*/\n        setHeader(header); //console.log(blockHash)\n      });\n    };\n\n    getInfo();\n  }, [api.derive.chain, api.rpc.chain, blockHeader]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, \"Block Number: \", blockHeader.number.toNumber(), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), \"Block hash: \", blockHash, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), \"Parent hash: \", parentHash);\n}\n\nexport default BlockInfo;","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/src/BlockInfo.js"],"names":["React","useEffect","useState","Statistic","Grid","Card","Icon","useSubstrate","BlockInfo","props","api","blockHeader","setHeader","getInfo","unsubscribe","rpc","chain","subscribeNewHeads","header","derive","number","toNumber","blockHash","parentHash"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,IAAhC,QAA2C,mBAA3C;AAEA,SAASC,YAAT,QAA6B,iBAA7B;;AAIA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAUH,YAAY,EAA5B;AACA;AACJ;AACA;AACA;;AACI,QAAM,CAACI,WAAD,EAAcC,SAAd,IAA2BV,QAAQ,CAAC,CAAD,CAAzC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,OAAO,GAAG,YAAW;AACvB,YAAMC,WAAW,GAAG,MAAMJ,GAAG,CAACK,GAAJ,CAAQC,KAAR,CAAcC,iBAAd,CAAiCC,MAAD,IAAY;AAClE;;AACA;AAChB;AACA;AACA;AACgBN,QAAAA,SAAS,CAACM,MAAD,CAAT,CANkE,CAOlE;AAEH,OATyB,CAA1B;AAUH,KAXD;;AAYAL,IAAAA,OAAO;AACV,GAdQ,EAcN,CAACH,GAAG,CAACS,MAAJ,CAAWH,KAAZ,EAAmBN,GAAG,CAACK,GAAJ,CAAQC,KAA3B,EAAkCL,WAAlC,CAdM,CAAT;AAiBA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACmBA,WAAW,CAACS,MAAZ,CAAmBC,QAAnB,EADnB,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,kBAGiBC,SAHjB,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,mBAKkBC,UALlB,CADA;AAUH;;AAED,eAAef,SAAf","sourcesContent":["\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Statistic, Grid, Card, Icon} from 'semantic-ui-react';\r\n\r\nimport { useSubstrate } from './substrate-lib';\r\n\r\n\r\n\r\nfunction BlockInfo(props){\r\n    const { api } = useSubstrate();\r\n    /*\r\n    const [blockNumber, setBlockNumber] = useState(0);\r\n    const [blockHash, setBlockHash] = useState(0);\r\n    const [parentHash, setParrentHash] = useState(0);*/\r\n    const [blockHeader, setHeader] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const getInfo = async () =>{\r\n            const unsubscribe = await api.rpc.chain.subscribeNewHeads((header) => {\r\n                //console.log(`Chain is at block: #${header.hash}`);\\\r\n                /*\r\n                setBlockNumber(header.number.toNumber());\r\n                setBlockHash(header.hash.toHuman());\r\n                setParrentHash(header.parentHash.toHuman());*/\r\n                setHeader(header);\r\n                //console.log(blockHash)\r\n                \r\n            });\r\n        }\r\n        getInfo();\r\n    }, [api.derive.chain, api.rpc.chain, blockHeader]);\r\n    \r\n    \r\n    return(\r\n    <div>\r\n        Block Number: {blockHeader.number.toNumber()}\r\n        <br/>\r\n        Block hash: {blockHash}\r\n        <br/>\r\n        Parent hash: {parentHash}\r\n    </div>\r\n    );\r\n\r\n}\r\n\r\nexport default BlockInfo"]},"metadata":{},"sourceType":"module"}