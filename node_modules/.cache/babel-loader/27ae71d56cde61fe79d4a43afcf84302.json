{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _get = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _wrapNativeSuper = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nvar _toConsumableArray = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _Raw = _interopRequireDefault(require(\"./Raw\"));\n\nvar _utils = require(\"./utils\"); // Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction encodeSet(setValues, value) {\n  return value.reduce(function (result, value) {\n    return result.or((0, _util.bnToBn)(setValues[value] || 0));\n  }, new _bn.default(0));\n}\n/** @internal */\n\n\nfunction decodeSetArray(setValues, value) {\n  return value.reduce(function (result, key) {\n    (0, _util.assert)(!(0, _util.isUndefined)(setValues[key]), \"Set: Invalid key '\".concat(key, \"' passed to Set, allowed \").concat(Object.keys(setValues).join(', ')));\n    result.push(key);\n    return result;\n  }, []);\n}\n/** @internal */\n\n\nfunction decodeSetNumber(setValues, _value) {\n  var bn = (0, _util.bnToBn)(_value);\n  var result = Object.keys(setValues).reduce(function (result, key) {\n    if (bn.and((0, _util.bnToBn)(setValues[key])).eq((0, _util.bnToBn)(setValues[key]))) {\n      result.push(key);\n    }\n\n    return result;\n  }, []);\n  var computed = encodeSet(setValues, result);\n  (0, _util.assert)(bn.eq(computed), \"Set: Mismatch decoding '\".concat(bn.toString(), \"', computed as '\").concat(computed.toString(), \"' with \").concat(result.join(', ')));\n  return result;\n}\n/** @internal */\n\n\nfunction decodeSet(setValues) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var bitLength = arguments.length > 2 ? arguments[2] : undefined;\n  (0, _util.assert)(bitLength % 8 === 0, \"Expected valid bitLength, power of 8, found \".concat(bitLength));\n  var byteLength = bitLength / 8;\n\n  if ((0, _util.isString)(value)) {\n    return decodeSet(setValues, (0, _util.u8aToU8a)(value), byteLength);\n  } else if ((0, _util.isU8a)(value)) {\n    return value.length === 0 ? [] : decodeSetNumber(setValues, (0, _util.u8aToBn)(value.subarray(0, byteLength), {\n      isLe: true\n    }));\n  } else if (value instanceof Set || Array.isArray(value)) {\n    var input = Array.isArray(value) ? value : _toConsumableArray(value.values());\n    return decodeSetArray(setValues, input);\n  }\n\n  return decodeSetNumber(setValues, value);\n}\n/**\n * @name Set\n * @description\n * An Set is an array of string values, represented an an encoded type by\n * a bitwise representation of the values.\n */\n// FIXME This is a prime candidate to extend the JavaScript built-in Set\n\n\nvar _allowed = (0, _classPrivateFieldLooseKey2.default)(\"allowed\");\n\nvar _byteLength = (0, _classPrivateFieldLooseKey2.default)(\"byteLength\");\n\nvar CodecSet = /*#__PURE__*/function (_Set) {\n  _inherits(CodecSet, _Set);\n\n  var _super = _createSuper(CodecSet);\n\n  function CodecSet(registry, setValues, value) {\n    var _thisSuper, _this;\n\n    var bitLength = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 8;\n\n    _classCallCheck(this, CodecSet);\n\n    _this = _super.call(this, decodeSet(setValues, value, bitLength));\n    _this.registry = void 0;\n    Object.defineProperty(_assertThisInitialized(_this), _allowed, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_assertThisInitialized(_this), _byteLength, {\n      writable: true,\n      value: void 0\n    });\n\n    _this.add = function (key) {\n      // ^^^ add = () property done to assign this instance's this, otherwise Set.add creates \"some\" chaos\n      // we have the isUndefined(this._setValues) in here as well, add is used internally\n      // in the Set constructor (so it is undefined at this point, and should allow)\n      (0, _util.assert)((0, _util.isUndefined)((0, _classPrivateFieldLooseBase2.default)(_assertThisInitialized(_this), _allowed)[_allowed]) || !(0, _util.isUndefined)((0, _classPrivateFieldLooseBase2.default)(_assertThisInitialized(_this), _allowed)[_allowed][key]), \"Set: Invalid key '\".concat(key, \"' on add\"));\n\n      _get((_thisSuper = _assertThisInitialized(_this), _getPrototypeOf(CodecSet.prototype)), \"add\", _thisSuper).call(_thisSuper, key);\n\n      return _assertThisInitialized(_this);\n    };\n\n    _this.registry = registry;\n    (0, _classPrivateFieldLooseBase2.default)(_assertThisInitialized(_this), _allowed)[_allowed] = setValues;\n    (0, _classPrivateFieldLooseBase2.default)(_assertThisInitialized(_this), _byteLength)[_byteLength] = bitLength / 8;\n    return _this;\n  }\n\n  _createClass(CodecSet, [{\n    key: \"eq\",\n\n    /**\n     * @description adds a value to the Set (extended to allow for validity checking)\n     */\n\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    value: function eq(other) {\n      if (Array.isArray(other)) {\n        // we don't actually care about the order, sort the values\n        return (0, _utils.compareArray)(this.strings.sort(), other.sort());\n      } else if (other instanceof Set) {\n        return this.eq(_toConsumableArray(other.values()));\n      } else if ((0, _util.isNumber)(other) || (0, _util.isBn)(other)) {\n        return this.valueEncoded.eq((0, _util.bnToBn)(other));\n      }\n\n      return false;\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n\n  }, {\n    key: \"toHex\",\n    value: function toHex() {\n      return (0, _util.u8aToHex)(this.toU8a());\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n\n  }, {\n    key: \"toHuman\",\n    value: function toHuman() {\n      return this.toJSON();\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.strings;\n    }\n    /**\n     * @description The encoded value for the set members\n     */\n\n  }, {\n    key: \"toNumber\",\n    value: function toNumber() {\n      return this.valueEncoded.toNumber();\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n\n  }, {\n    key: \"toRawType\",\n    value: function toRawType() {\n      return JSON.stringify({\n        _set: (0, _classPrivateFieldLooseBase2.default)(this, _allowed)[_allowed]\n      });\n    }\n    /**\n     * @description Returns the string representation of the value\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"[\".concat(this.strings.join(', '), \"]\");\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  }, {\n    key: \"toU8a\",\n    value: function toU8a(isBare) {\n      return (0, _util.bnToU8a)(this.valueEncoded, {\n        bitLength: (0, _classPrivateFieldLooseBase2.default)(this, _byteLength)[_byteLength] * 8,\n        isLe: true\n      });\n    }\n  }, {\n    key: \"encodedLength\",\n\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get: function get() {\n      return (0, _classPrivateFieldLooseBase2.default)(this, _byteLength)[_byteLength];\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n\n  }, {\n    key: \"hash\",\n    get: function get() {\n      return new _Raw.default(this.registry, this.registry.hash(this.toU8a()));\n    }\n    /**\n     * @description true is the Set contains no values\n     */\n\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this.size === 0;\n    }\n    /**\n     * @description The actual set values as a string[]\n     */\n\n  }, {\n    key: \"strings\",\n    get: function get() {\n      return _toConsumableArray(_get(_getPrototypeOf(CodecSet.prototype), \"values\", this).call(this));\n    }\n    /**\n     * @description The encoded value for the set members\n     */\n\n  }, {\n    key: \"valueEncoded\",\n    get: function get() {\n      return encodeSet((0, _classPrivateFieldLooseBase2.default)(this, _allowed)[_allowed], this.strings);\n    }\n  }], [{\n    key: \"with\",\n    value: function _with(values, bitLength) {\n      return /*#__PURE__*/function (_CodecSet) {\n        _inherits(_class, _CodecSet);\n\n        var _super2 = _createSuper(_class);\n\n        function _class(registry, value) {\n          var _this2;\n\n          _classCallCheck(this, _class);\n\n          _this2 = _super2.call(this, registry, values, value, bitLength);\n          Object.keys(values).forEach(function (_key) {\n            var name = (0, _util.stringUpperFirst)((0, _util.stringCamelCase)(_key));\n            var iskey = \"is\".concat(name); // do not clobber existing properties on the object\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n            if ((0, _util.isUndefined)(_this2[iskey])) {\n              Object.defineProperty(_assertThisInitialized(_this2), iskey, {\n                enumerable: true,\n                get: function get() {\n                  return _this2.strings.includes(_key);\n                }\n              });\n            }\n          });\n          return _this2;\n        }\n\n        return _class;\n      }(CodecSet);\n    }\n  }]);\n\n  return CodecSet;\n}( /*#__PURE__*/_wrapNativeSuper(Set));\n\nexports.default = CodecSet;","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/types/codec/Set.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_classPrivateFieldLooseBase2","_classPrivateFieldLooseKey2","_bn","_util","_Raw","_utils","encodeSet","setValues","reduce","result","or","bnToBn","decodeSetArray","key","assert","isUndefined","keys","join","push","decodeSetNumber","_value","bn","and","eq","computed","toString","decodeSet","bitLength","byteLength","isString","u8aToU8a","isU8a","length","u8aToBn","subarray","isLe","Set","Array","isArray","input","values","_allowed","_byteLength","CodecSet","registry","writable","add","other","compareArray","strings","sort","isNumber","isBn","valueEncoded","u8aToHex","toU8a","toJSON","toNumber","JSON","stringify","_set","isBare","bnToU8a","hash","size","forEach","_key","name","stringUpperFirst","stringCamelCase","iskey","enumerable","get","includes"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _Raw = _interopRequireDefault(require(\"./Raw\"));\n\nvar _utils = require(\"./utils\");\n\n// Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction encodeSet(setValues, value) {\n  return value.reduce((result, value) => {\n    return result.or((0, _util.bnToBn)(setValues[value] || 0));\n  }, new _bn.default(0));\n}\n/** @internal */\n\n\nfunction decodeSetArray(setValues, value) {\n  return value.reduce((result, key) => {\n    (0, _util.assert)(!(0, _util.isUndefined)(setValues[key]), `Set: Invalid key '${key}' passed to Set, allowed ${Object.keys(setValues).join(', ')}`);\n    result.push(key);\n    return result;\n  }, []);\n}\n/** @internal */\n\n\nfunction decodeSetNumber(setValues, _value) {\n  const bn = (0, _util.bnToBn)(_value);\n  const result = Object.keys(setValues).reduce((result, key) => {\n    if (bn.and((0, _util.bnToBn)(setValues[key])).eq((0, _util.bnToBn)(setValues[key]))) {\n      result.push(key);\n    }\n\n    return result;\n  }, []);\n  const computed = encodeSet(setValues, result);\n  (0, _util.assert)(bn.eq(computed), `Set: Mismatch decoding '${bn.toString()}', computed as '${computed.toString()}' with ${result.join(', ')}`);\n  return result;\n}\n/** @internal */\n\n\nfunction decodeSet(setValues, value = 0, bitLength) {\n  (0, _util.assert)(bitLength % 8 === 0, `Expected valid bitLength, power of 8, found ${bitLength}`);\n  const byteLength = bitLength / 8;\n\n  if ((0, _util.isString)(value)) {\n    return decodeSet(setValues, (0, _util.u8aToU8a)(value), byteLength);\n  } else if ((0, _util.isU8a)(value)) {\n    return value.length === 0 ? [] : decodeSetNumber(setValues, (0, _util.u8aToBn)(value.subarray(0, byteLength), {\n      isLe: true\n    }));\n  } else if (value instanceof Set || Array.isArray(value)) {\n    const input = Array.isArray(value) ? value : [...value.values()];\n    return decodeSetArray(setValues, input);\n  }\n\n  return decodeSetNumber(setValues, value);\n}\n/**\n * @name Set\n * @description\n * An Set is an array of string values, represented an an encoded type by\n * a bitwise representation of the values.\n */\n// FIXME This is a prime candidate to extend the JavaScript built-in Set\n\n\nvar _allowed = (0, _classPrivateFieldLooseKey2.default)(\"allowed\");\n\nvar _byteLength = (0, _classPrivateFieldLooseKey2.default)(\"byteLength\");\n\nclass CodecSet extends Set {\n  constructor(registry, setValues, value, bitLength = 8) {\n    super(decodeSet(setValues, value, bitLength));\n    this.registry = void 0;\n    Object.defineProperty(this, _allowed, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _byteLength, {\n      writable: true,\n      value: void 0\n    });\n\n    this.add = key => {\n      // ^^^ add = () property done to assign this instance's this, otherwise Set.add creates \"some\" chaos\n      // we have the isUndefined(this._setValues) in here as well, add is used internally\n      // in the Set constructor (so it is undefined at this point, and should allow)\n      (0, _util.assert)((0, _util.isUndefined)((0, _classPrivateFieldLooseBase2.default)(this, _allowed)[_allowed]) || !(0, _util.isUndefined)((0, _classPrivateFieldLooseBase2.default)(this, _allowed)[_allowed][key]), `Set: Invalid key '${key}' on add`);\n      super.add(key);\n      return this;\n    };\n\n    this.registry = registry;\n    (0, _classPrivateFieldLooseBase2.default)(this, _allowed)[_allowed] = setValues;\n    (0, _classPrivateFieldLooseBase2.default)(this, _byteLength)[_byteLength] = bitLength / 8;\n  }\n\n  static with(values, bitLength) {\n    return class extends CodecSet {\n      constructor(registry, value) {\n        super(registry, values, value, bitLength);\n        Object.keys(values).forEach(_key => {\n          const name = (0, _util.stringUpperFirst)((0, _util.stringCamelCase)(_key));\n          const iskey = `is${name}`; // do not clobber existing properties on the object\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n\n          if ((0, _util.isUndefined)(this[iskey])) {\n            Object.defineProperty(this, iskey, {\n              enumerable: true,\n              get: () => this.strings.includes(_key)\n            });\n          }\n        });\n      }\n\n    };\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _byteLength)[_byteLength];\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return new _Raw.default(this.registry, this.registry.hash(this.toU8a()));\n  }\n  /**\n   * @description true is the Set contains no values\n   */\n\n\n  get isEmpty() {\n    return this.size === 0;\n  }\n  /**\n   * @description The actual set values as a string[]\n   */\n\n\n  get strings() {\n    return [...super.values()];\n  }\n  /**\n   * @description The encoded value for the set members\n   */\n\n\n  get valueEncoded() {\n    return encodeSet((0, _classPrivateFieldLooseBase2.default)(this, _allowed)[_allowed], this.strings);\n  }\n  /**\n   * @description adds a value to the Set (extended to allow for validity checking)\n   */\n\n\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n  eq(other) {\n    if (Array.isArray(other)) {\n      // we don't actually care about the order, sort the values\n      return (0, _utils.compareArray)(this.strings.sort(), other.sort());\n    } else if (other instanceof Set) {\n      return this.eq([...other.values()]);\n    } else if ((0, _util.isNumber)(other) || (0, _util.isBn)(other)) {\n      return this.valueEncoded.eq((0, _util.bnToBn)(other));\n    }\n\n    return false;\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return (0, _util.u8aToHex)(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.strings;\n  }\n  /**\n   * @description The encoded value for the set members\n   */\n\n\n  toNumber() {\n    return this.valueEncoded.toNumber();\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return JSON.stringify({\n      _set: (0, _classPrivateFieldLooseBase2.default)(this, _allowed)[_allowed]\n    });\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return `[${this.strings.join(', ')}]`;\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return (0, _util.bnToU8a)(this.valueEncoded, {\n      bitLength: (0, _classPrivateFieldLooseBase2.default)(this, _byteLength)[_byteLength] * 8,\n      isLe: true\n    });\n  }\n\n}\n\nexports.default = CodecSet;"]},"metadata":{},"sourceType":"script"}