{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.subscribeNewHeads = subscribeNewHeads;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _type = require(\"../type\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name subscribeNewHeads\n * @returns A header with the current header (including extracted author)\n * @description An observable of the current block header and it's author\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.chain.subscribeNewHeads((header) => {\n *   console.log(`block #${header.number} was authored by ${header.author}`);\n * });\n * ```\n */\n\n\nfunction subscribeNewHeads(instanceId, api) {\n  return (0, _util.memo)(instanceId, function () {\n    return (0, _rxjs.combineLatest)([api.rpc.chain.subscribeNewHeads(), api.query.session ? api.query.session.validators() : (0, _rxjs.of)([])]).pipe((0, _operators.map)(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          header = _ref2[0],\n          validators = _ref2[1];\n\n      return new _type.HeaderExtended(api.registry, header, validators);\n    }));\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/chain/subscribeNewHeads.js"],"names":["Object","defineProperty","exports","value","subscribeNewHeads","_rxjs","require","_operators","_type","_util","instanceId","api","memo","combineLatest","rpc","chain","query","session","validators","of","pipe","map","header","HeaderExtended","registry"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,gBAAD,CAAxB;;AAEA,IAAIE,KAAK,GAAGF,OAAO,CAAC,SAAD,CAAnB;;AAEA,IAAIG,KAAK,GAAGH,OAAO,CAAC,SAAD,CAAnB,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,iBAAT,CAA2BM,UAA3B,EAAuCC,GAAvC,EAA4C;AAC1C,SAAO,CAAC,GAAGF,KAAK,CAACG,IAAV,EAAgBF,UAAhB,EAA4B;AAAA,WAAM,CAAC,GAAGL,KAAK,CAACQ,aAAV,EAAyB,CAACF,GAAG,CAACG,GAAJ,CAAQC,KAAR,CAAcX,iBAAd,EAAD,EAAoCO,GAAG,CAACK,KAAJ,CAAUC,OAAV,GAAoBN,GAAG,CAACK,KAAJ,CAAUC,OAAV,CAAkBC,UAAlB,EAApB,GAAqD,CAAC,GAAGb,KAAK,CAACc,EAAV,EAAc,EAAd,CAAzF,CAAzB,EAAsIC,IAAtI,CAA2I,CAAC,GAAGb,UAAU,CAACc,GAAf,EAAoB;AAAA;AAAA,UAAEC,MAAF;AAAA,UAAUJ,UAAV;;AAAA,aAA0B,IAAIV,KAAK,CAACe,cAAV,CAAyBZ,GAAG,CAACa,QAA7B,EAAuCF,MAAvC,EAA+CJ,UAA/C,CAA1B;AAAA,KAApB,CAA3I,CAAN;AAAA,GAA5B,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.subscribeNewHeads = subscribeNewHeads;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _type = require(\"../type\");\n\nvar _util = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name subscribeNewHeads\n * @returns A header with the current header (including extracted author)\n * @description An observable of the current block header and it's author\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.chain.subscribeNewHeads((header) => {\n *   console.log(`block #${header.number} was authored by ${header.author}`);\n * });\n * ```\n */\nfunction subscribeNewHeads(instanceId, api) {\n  return (0, _util.memo)(instanceId, () => (0, _rxjs.combineLatest)([api.rpc.chain.subscribeNewHeads(), api.query.session ? api.query.session.validators() : (0, _rxjs.of)([])]).pipe((0, _operators.map)(([header, validators]) => new _type.HeaderExtended(api.registry, header, validators))));\n}"]},"metadata":{},"sourceType":"script"}