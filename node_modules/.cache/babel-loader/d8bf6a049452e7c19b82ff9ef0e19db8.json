{"ast":null,"code":"import _slicedToArray from\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,createRef}from'react';import{Container,Dimmer,Loader,Grid,Sticky,Message}from'semantic-ui-react';import'semantic-ui-css/semantic.min.css';import{SubstrateContextProvider,useSubstrate}from'./substrate-lib';import{DeveloperConsole}from'./substrate-lib/components';import AccountSelector from'./AccountSelector';import BlockNumber from'./BlockNumber';import Metadata from'./Metadata';import NodeInfo from'./NodeInfo';import BlockInfo from'./BlockInfo';import BlockSearch from'./BlockSearch';function Main(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),accountAddress=_useState2[0],setAccountAddress=_useState2[1];var _useSubstrate=useSubstrate(),apiState=_useSubstrate.apiState,keyring=_useSubstrate.keyring,keyringState=_useSubstrate.keyringState,apiError=_useSubstrate.apiError;var accountPair=accountAddress&&keyringState==='READY'&&keyring.getPair(accountAddress);var loader=function loader(text){return/*#__PURE__*/React.createElement(Dimmer,{active:true},/*#__PURE__*/React.createElement(Loader,{size:\"small\"},text));};var message=function message(err){return/*#__PURE__*/React.createElement(Grid,{centered:true,columns:2,padded:true},/*#__PURE__*/React.createElement(Grid.Column,null,/*#__PURE__*/React.createElement(Message,{negative:true,compact:true,floating:true,header:\"Error Connecting to Substrate\",content:\"\".concat(err)})));};if(apiState==='ERROR')return message(apiError);else if(apiState!=='READY')return loader('Connecting to Substrate');if(keyringState!=='READY'){return loader('Loading accounts (please review any extension\\'s authorization)');}var contextRef=createRef();return/*#__PURE__*/React.createElement(\"div\",{ref:contextRef},/*#__PURE__*/React.createElement(Sticky,{context:contextRef},/*#__PURE__*/React.createElement(AccountSelector,{setAccountAddress:setAccountAddress})),/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Grid,{stackable:true,columns:\"equal\"},/*#__PURE__*/React.createElement(Grid.Row,{stretched:true},/*#__PURE__*/React.createElement(NodeInfo,null),/*#__PURE__*/React.createElement(Metadata,null),/*#__PURE__*/React.createElement(BlockNumber,null),/*#__PURE__*/React.createElement(BlockNumber,{finalized:true})),/*#__PURE__*/React.createElement(Grid.Row,null,/*#__PURE__*/React.createElement(BlockInfo,null)),/*#__PURE__*/React.createElement(Grid.Row,null,/*#__PURE__*/React.createElement(BlockSearch,null)))),/*#__PURE__*/React.createElement(DeveloperConsole,null));}export default function App(){return/*#__PURE__*/React.createElement(SubstrateContextProvider,null,/*#__PURE__*/React.createElement(Main,null));}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/src/App.js"],"names":["React","useState","createRef","Container","Dimmer","Loader","Grid","Sticky","Message","SubstrateContextProvider","useSubstrate","DeveloperConsole","AccountSelector","BlockNumber","Metadata","NodeInfo","BlockInfo","BlockSearch","Main","accountAddress","setAccountAddress","apiState","keyring","keyringState","apiError","accountPair","getPair","loader","text","message","err","contextRef","App"],"mappings":"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","sourcesContent":["import React, { useState, createRef } from 'react';\nimport { Container, Dimmer, Loader, Grid, Sticky, Message } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { SubstrateContextProvider, useSubstrate } from './substrate-lib';\nimport { DeveloperConsole } from './substrate-lib/components';\n\nimport AccountSelector from './AccountSelector';\n\nimport BlockNumber from './BlockNumber';\nimport Metadata from './Metadata';\nimport NodeInfo from './NodeInfo';\n\nimport BlockInfo from './BlockInfo';\nimport BlockSearch from './BlockSearch';\n\nfunction Main () {\n  const [accountAddress, setAccountAddress] = useState(null);\n  const { apiState, keyring, keyringState, apiError } = useSubstrate();\n  const accountPair =\n    accountAddress &&\n    keyringState === 'READY' &&\n    keyring.getPair(accountAddress);\n\n  const loader = text =>\n    <Dimmer active>\n      <Loader size='small'>{text}</Loader>\n    </Dimmer>;\n\n  const message = err =>\n    <Grid centered columns={2} padded>\n      <Grid.Column>\n        <Message negative compact floating\n          header='Error Connecting to Substrate'\n          content={`${err}`}\n        />\n      </Grid.Column>\n    </Grid>;\n\n  if (apiState === 'ERROR') return message(apiError);\n  else if (apiState !== 'READY') return loader('Connecting to Substrate');\n\n  if (keyringState !== 'READY') {\n    return loader('Loading accounts (please review any extension\\'s authorization)');\n  }\n\n  const contextRef = createRef();\n\n  return (\n    <div ref={contextRef}>\n      <Sticky context={contextRef}>\n        <AccountSelector setAccountAddress={setAccountAddress} />\n      </Sticky>\n      <Container>\n        <Grid stackable columns='equal'>\n          <Grid.Row stretched>\n            <NodeInfo />\n            <Metadata />\n            <BlockNumber />\n            <BlockNumber finalized />\n          </Grid.Row>\n          <Grid.Row >\n            <BlockInfo/>\n          </Grid.Row>\n          <Grid.Row >\n            <BlockSearch/>\n          </Grid.Row>\n        </Grid>\n      </Container>\n      <DeveloperConsole />\n    </div>\n  );\n}\n\nexport default function App () {\n  return (\n    <SubstrateContextProvider>\n      <Main />\n    </SubstrateContextProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}