{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keys = keys;\nexports.keysMulti = keysMulti;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction extractsIds(stashId, queuedKeys, nextKeys) {\n  var sessionIds = (queuedKeys.find(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 1),\n        currentId = _ref2[0];\n\n    return currentId.eq(stashId);\n  }) || [undefined, []])[1];\n  var nextSessionIds = nextKeys.unwrapOr([]);\n  return {\n    nextSessionIds: nextSessionIds,\n    sessionIds: sessionIds\n  };\n}\n\nfunction keys(instanceId, api) {\n  return (0, _util.memo)(instanceId, function (stashId) {\n    return api.derive.staking.keysMulti([stashId]).pipe((0, _operators.map)(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 1),\n          first = _ref4[0];\n\n      return first;\n    }));\n  });\n}\n\nfunction keysMulti(instanceId, api) {\n  return (0, _util.memo)(instanceId, function (stashIds) {\n    return stashIds.length ? api.query.session.queuedKeys().pipe((0, _operators.switchMap)(function (queuedKeys) {\n      var _api$consts$session;\n\n      return (0, _rxjs.combineLatest)([(0, _rxjs.of)(queuedKeys), ((_api$consts$session = api.consts.session) === null || _api$consts$session === void 0 ? void 0 : _api$consts$session.dedupKeyPrefix) ? api.query.session.nextKeys.multi(stashIds.map(function (stashId) {\n        return [api.consts.session.dedupKeyPrefix, stashId];\n      })) : api.query.session.nextKeys.multi(stashIds)]);\n    }), (0, _operators.map)(function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 2),\n          queuedKeys = _ref6[0],\n          nextKeys = _ref6[1];\n\n      return stashIds.map(function (stashId, index) {\n        return extractsIds(stashId, queuedKeys, nextKeys[index]);\n      });\n    })) : (0, _rxjs.of)([]);\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/staking/keys.js"],"names":["Object","defineProperty","exports","value","keys","keysMulti","_rxjs","require","_operators","_util","extractsIds","stashId","queuedKeys","nextKeys","sessionIds","find","currentId","eq","undefined","nextSessionIds","unwrapOr","instanceId","api","memo","derive","staking","pipe","map","first","stashIds","length","query","session","switchMap","_api$consts$session","combineLatest","of","consts","dedupKeyPrefix","multi","index"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.keys = keys;\nexports.keysMulti = keysMulti;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction extractsIds(stashId, queuedKeys, nextKeys) {\n  const sessionIds = (queuedKeys.find(([currentId]) => currentId.eq(stashId)) || [undefined, []])[1];\n  const nextSessionIds = nextKeys.unwrapOr([]);\n  return {\n    nextSessionIds,\n    sessionIds\n  };\n}\n\nfunction keys(instanceId, api) {\n  return (0, _util.memo)(instanceId, stashId => api.derive.staking.keysMulti([stashId]).pipe((0, _operators.map)(([first]) => first)));\n}\n\nfunction keysMulti(instanceId, api) {\n  return (0, _util.memo)(instanceId, stashIds => stashIds.length ? api.query.session.queuedKeys().pipe((0, _operators.switchMap)(queuedKeys => {\n    var _api$consts$session;\n\n    return (0, _rxjs.combineLatest)([(0, _rxjs.of)(queuedKeys), ((_api$consts$session = api.consts.session) === null || _api$consts$session === void 0 ? void 0 : _api$consts$session.dedupKeyPrefix) ? api.query.session.nextKeys.multi(stashIds.map(stashId => [api.consts.session.dedupKeyPrefix, stashId])) : api.query.session.nextKeys.multi(stashIds)]);\n  }), (0, _operators.map)(([queuedKeys, nextKeys]) => stashIds.map((stashId, index) => extractsIds(stashId, queuedKeys, nextKeys[index])))) : (0, _rxjs.of)([]));\n}"]},"metadata":{},"sourceType":"script"}