{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.info = info;\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction sortAccounts(_ref, _ref2) {\n  var _ref3 = _slicedToArray(_ref, 2),\n      balanceA = _ref3[1];\n\n  var _ref4 = _slicedToArray(_ref2, 2),\n      balanceB = _ref4[1];\n\n  return balanceB.cmp(balanceA);\n}\n\nfunction queryElections(api) {\n  var section = api.query.electionsPhragmen ? 'electionsPhragmen' : 'elections';\n  return api.queryMulti([api.query.council.members, api.query[section].candidates, api.query[section].members, api.query[section].runnersUp]).pipe((0, _operators.map)(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 4),\n        councilMembers = _ref6[0],\n        candidates = _ref6[1],\n        members = _ref6[2],\n        runnersUp = _ref6[3];\n\n    return {\n      candidacyBond: api.consts[section].candidacyBond,\n      candidateCount: api.registry.createType('u32', candidates.length),\n      candidates: candidates,\n      desiredRunnersUp: api.consts[section].desiredRunnersUp,\n      desiredSeats: api.consts[section].desiredMembers,\n      members: members.length ? members.sort(sortAccounts) : councilMembers.map(function (accountId) {\n        return [accountId, api.registry.createType('Balance')];\n      }),\n      runnersUp: runnersUp.sort(sortAccounts),\n      termDuration: api.consts[section].termDuration,\n      votingBond: api.consts[section].votingBond\n    };\n  }));\n}\n/**\n * @name info\n * @returns An object containing the combined results of the storage queries for\n * all relevant election module properties.\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.elections.info(({ members, candidates }) => {\n *   console.log(`There are currently ${members.length} council members and ${candidates.length} prospective council candidates.`);\n * });\n * ```\n */\n\n\nfunction info(instanceId, api) {\n  return (0, _util.memo)(instanceId, function () {\n    return queryElections(api);\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/elections/info.js"],"names":["Object","defineProperty","exports","value","info","_operators","require","_util","sortAccounts","balanceA","balanceB","cmp","queryElections","api","section","query","electionsPhragmen","queryMulti","council","members","candidates","runnersUp","pipe","map","councilMembers","candidacyBond","consts","candidateCount","registry","createType","length","desiredRunnersUp","desiredSeats","desiredMembers","sort","accountId","termDuration","votingBond","instanceId","memo"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,IAAR,GAAeA,IAAf;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,gBAAD,CAAxB;;AAEA,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAAnB,C,CAEA;AACA;;;AACA,SAASE,YAAT,cAAkD;AAAA;AAAA,MAAzBC,QAAyB;;AAAA;AAAA,MAAXC,QAAW;;AAChD,SAAOA,QAAQ,CAACC,GAAT,CAAaF,QAAb,CAAP;AACD;;AAED,SAASG,cAAT,CAAwBC,GAAxB,EAA6B;AAC3B,MAAMC,OAAO,GAAGD,GAAG,CAACE,KAAJ,CAAUC,iBAAV,GAA8B,mBAA9B,GAAoD,WAApE;AACA,SAAOH,GAAG,CAACI,UAAJ,CAAe,CAACJ,GAAG,CAACE,KAAJ,CAAUG,OAAV,CAAkBC,OAAnB,EAA4BN,GAAG,CAACE,KAAJ,CAAUD,OAAV,EAAmBM,UAA/C,EAA2DP,GAAG,CAACE,KAAJ,CAAUD,OAAV,EAAmBK,OAA9E,EAAuFN,GAAG,CAACE,KAAJ,CAAUD,OAAV,EAAmBO,SAA1G,CAAf,EAAqIC,IAArI,CAA0I,CAAC,GAAGjB,UAAU,CAACkB,GAAf,EAAoB;AAAA;AAAA,QAAEC,cAAF;AAAA,QAAkBJ,UAAlB;AAAA,QAA8BD,OAA9B;AAAA,QAAuCE,SAAvC;;AAAA,WAAuD;AAC1NI,MAAAA,aAAa,EAAEZ,GAAG,CAACa,MAAJ,CAAWZ,OAAX,EAAoBW,aADuL;AAE1NE,MAAAA,cAAc,EAAEd,GAAG,CAACe,QAAJ,CAAaC,UAAb,CAAwB,KAAxB,EAA+BT,UAAU,CAACU,MAA1C,CAF0M;AAG1NV,MAAAA,UAAU,EAAVA,UAH0N;AAI1NW,MAAAA,gBAAgB,EAAElB,GAAG,CAACa,MAAJ,CAAWZ,OAAX,EAAoBiB,gBAJoL;AAK1NC,MAAAA,YAAY,EAAEnB,GAAG,CAACa,MAAJ,CAAWZ,OAAX,EAAoBmB,cALwL;AAM1Nd,MAAAA,OAAO,EAAEA,OAAO,CAACW,MAAR,GAAiBX,OAAO,CAACe,IAAR,CAAa1B,YAAb,CAAjB,GAA8CgB,cAAc,CAACD,GAAf,CAAmB,UAAAY,SAAS;AAAA,eAAI,CAACA,SAAD,EAAYtB,GAAG,CAACe,QAAJ,CAAaC,UAAb,CAAwB,SAAxB,CAAZ,CAAJ;AAAA,OAA5B,CANmK;AAO1NR,MAAAA,SAAS,EAAEA,SAAS,CAACa,IAAV,CAAe1B,YAAf,CAP+M;AAQ1N4B,MAAAA,YAAY,EAAEvB,GAAG,CAACa,MAAJ,CAAWZ,OAAX,EAAoBsB,YARwL;AAS1NC,MAAAA,UAAU,EAAExB,GAAG,CAACa,MAAJ,CAAWZ,OAAX,EAAoBuB;AAT0L,KAAvD;AAAA,GAApB,CAA1I,CAAP;AAWD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASjC,IAAT,CAAckC,UAAd,EAA0BzB,GAA1B,EAA+B;AAC7B,SAAO,CAAC,GAAGN,KAAK,CAACgC,IAAV,EAAgBD,UAAhB,EAA4B;AAAA,WAAM1B,cAAc,CAACC,GAAD,CAApB;AAAA,GAA5B,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.info = info;\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction sortAccounts([, balanceA], [, balanceB]) {\n  return balanceB.cmp(balanceA);\n}\n\nfunction queryElections(api) {\n  const section = api.query.electionsPhragmen ? 'electionsPhragmen' : 'elections';\n  return api.queryMulti([api.query.council.members, api.query[section].candidates, api.query[section].members, api.query[section].runnersUp]).pipe((0, _operators.map)(([councilMembers, candidates, members, runnersUp]) => ({\n    candidacyBond: api.consts[section].candidacyBond,\n    candidateCount: api.registry.createType('u32', candidates.length),\n    candidates,\n    desiredRunnersUp: api.consts[section].desiredRunnersUp,\n    desiredSeats: api.consts[section].desiredMembers,\n    members: members.length ? members.sort(sortAccounts) : councilMembers.map(accountId => [accountId, api.registry.createType('Balance')]),\n    runnersUp: runnersUp.sort(sortAccounts),\n    termDuration: api.consts[section].termDuration,\n    votingBond: api.consts[section].votingBond\n  })));\n}\n/**\n * @name info\n * @returns An object containing the combined results of the storage queries for\n * all relevant election module properties.\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.elections.info(({ members, candidates }) => {\n *   console.log(`There are currently ${members.length} council members and ${candidates.length} prospective council candidates.`);\n * });\n * ```\n */\n\n\nfunction info(instanceId, api) {\n  return (0, _util.memo)(instanceId, () => queryElections(api));\n}"]},"metadata":{},"sourceType":"script"}