{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.proposals = proposals;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _util2 = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction parse(_ref) {\n  var _ref2 = _slicedToArray(_ref, 3),\n      hashes = _ref2[0],\n      proposals = _ref2[1],\n      votes = _ref2[2];\n\n  return proposals.map(function (proposalOpt, index) {\n    return proposalOpt.isSome ? {\n      hash: hashes[index],\n      proposal: proposalOpt.unwrap(),\n      votes: votes[index].unwrapOr(null)\n    } : null;\n  }).filter(function (proposal) {\n    return !!proposal;\n  });\n}\n\nfunction proposals(instanceId, api, section) {\n  return (0, _util2.memo)(instanceId, function () {\n    var _api$query$section;\n\n    return (0, _util.isFunction)((_api$query$section = api.query[section]) === null || _api$query$section === void 0 ? void 0 : _api$query$section.proposals) ? api.query[section].proposals().pipe((0, _operators.switchMap)(function (hashes) {\n      return hashes.length ? (0, _rxjs.combineLatest)([(0, _rxjs.of)(hashes), api.query[section].proposalOf.multi(hashes), api.query[section].voting.multi(hashes)]) : (0, _rxjs.of)([[], [], []]);\n    }), (0, _operators.map)(parse)) : (0, _rxjs.of)([]);\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/collective/proposals.js"],"names":["Object","defineProperty","exports","value","proposals","_rxjs","require","_operators","_util","_util2","parse","hashes","votes","map","proposalOpt","index","isSome","hash","proposal","unwrap","unwrapOr","filter","instanceId","api","section","memo","_api$query$section","isFunction","query","pipe","switchMap","length","combineLatest","of","proposalOf","multi","voting"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,SAAR,GAAoBA,SAApB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,gBAAD,CAAxB;;AAEA,IAAIE,KAAK,GAAGF,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIG,MAAM,GAAGH,OAAO,CAAC,SAAD,CAApB,C,CAEA;AACA;;;AACA,SAASI,KAAT,OAA2C;AAAA;AAAA,MAA3BC,MAA2B;AAAA,MAAnBP,SAAmB;AAAA,MAARQ,KAAQ;;AACzC,SAAOR,SAAS,CAACS,GAAV,CAAc,UAACC,WAAD,EAAcC,KAAd;AAAA,WAAwBD,WAAW,CAACE,MAAZ,GAAqB;AAChEC,MAAAA,IAAI,EAAEN,MAAM,CAACI,KAAD,CADoD;AAEhEG,MAAAA,QAAQ,EAAEJ,WAAW,CAACK,MAAZ,EAFsD;AAGhEP,MAAAA,KAAK,EAAEA,KAAK,CAACG,KAAD,CAAL,CAAaK,QAAb,CAAsB,IAAtB;AAHyD,KAArB,GAIzC,IAJiB;AAAA,GAAd,EAIGC,MAJH,CAIU,UAAAH,QAAQ;AAAA,WAAI,CAAC,CAACA,QAAN;AAAA,GAJlB,CAAP;AAKD;;AAED,SAASd,SAAT,CAAmBkB,UAAnB,EAA+BC,GAA/B,EAAoCC,OAApC,EAA6C;AAC3C,SAAO,CAAC,GAAGf,MAAM,CAACgB,IAAX,EAAiBH,UAAjB,EAA6B,YAAM;AACxC,QAAII,kBAAJ;;AAEA,WAAO,CAAC,GAAGlB,KAAK,CAACmB,UAAV,EAAsB,CAACD,kBAAkB,GAAGH,GAAG,CAACK,KAAJ,CAAUJ,OAAV,CAAtB,MAA8C,IAA9C,IAAsDE,kBAAkB,KAAK,KAAK,CAAlF,GAAsF,KAAK,CAA3F,GAA+FA,kBAAkB,CAACtB,SAAxI,IAAqJmB,GAAG,CAACK,KAAJ,CAAUJ,OAAV,EAAmBpB,SAAnB,GAA+ByB,IAA/B,CAAoC,CAAC,GAAGtB,UAAU,CAACuB,SAAf,EAA0B,UAAAnB,MAAM;AAAA,aAAIA,MAAM,CAACoB,MAAP,GAAgB,CAAC,GAAG1B,KAAK,CAAC2B,aAAV,EAAyB,CAAC,CAAC,GAAG3B,KAAK,CAAC4B,EAAV,EAActB,MAAd,CAAD,EAAwBY,GAAG,CAACK,KAAJ,CAAUJ,OAAV,EAAmBU,UAAnB,CAA8BC,KAA9B,CAAoCxB,MAApC,CAAxB,EAAqEY,GAAG,CAACK,KAAJ,CAAUJ,OAAV,EAAmBY,MAAnB,CAA0BD,KAA1B,CAAgCxB,MAAhC,CAArE,CAAzB,CAAhB,GAA0J,CAAC,GAAGN,KAAK,CAAC4B,EAAV,EAAc,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAd,CAA9J;AAAA,KAAhC,CAApC,EAAgQ,CAAC,GAAG1B,UAAU,CAACM,GAAf,EAAoBH,KAApB,CAAhQ,CAArJ,GAAmb,CAAC,GAAGL,KAAK,CAAC4B,EAAV,EAAc,EAAd,CAA1b;AACD,GAJM,CAAP;AAKD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.proposals = proposals;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _util2 = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction parse([hashes, proposals, votes]) {\n  return proposals.map((proposalOpt, index) => proposalOpt.isSome ? {\n    hash: hashes[index],\n    proposal: proposalOpt.unwrap(),\n    votes: votes[index].unwrapOr(null)\n  } : null).filter(proposal => !!proposal);\n}\n\nfunction proposals(instanceId, api, section) {\n  return (0, _util2.memo)(instanceId, () => {\n    var _api$query$section;\n\n    return (0, _util.isFunction)((_api$query$section = api.query[section]) === null || _api$query$section === void 0 ? void 0 : _api$query$section.proposals) ? api.query[section].proposals().pipe((0, _operators.switchMap)(hashes => hashes.length ? (0, _rxjs.combineLatest)([(0, _rxjs.of)(hashes), api.query[section].proposalOf.multi(hashes), api.query[section].voting.multi(hashes)]) : (0, _rxjs.of)([[], [], []])), (0, _operators.map)(parse)) : (0, _rxjs.of)([]);\n  });\n}"]},"metadata":{},"sourceType":"script"}