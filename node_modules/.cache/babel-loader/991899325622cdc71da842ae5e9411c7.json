{"ast":null,"code":"import _objectSpread from\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import configCommon from'./common.json';// Using `require` as `import` does not support dynamic loading (yet).\nvar configEnv=require(\"./\".concat(process.env.NODE_ENV,\".json\"));// Accepting React env vars and aggregating them into `config` object.\nvar envVarNames=['REACT_APP_PROVIDER_SOCKET','REACT_APP_DEVELOPMENT_KEYRING'];var envVars=envVarNames.reduce(function(mem,n){// Remove the `REACT_APP_` prefix\nif(process.env[n]!==undefined)mem[n.slice(10)]=process.env[n];return mem;},{});var config=_objectSpread(_objectSpread(_objectSpread({},configCommon),configEnv),envVars);export default config;","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/src/config/index.js"],"names":["configCommon","configEnv","require","process","env","NODE_ENV","envVarNames","envVars","reduce","mem","n","undefined","slice","config"],"mappings":"4PAAA,MAAOA,CAAAA,YAAP,KAAyB,eAAzB,CACA;AACA,GAAMC,CAAAA,SAAS,CAAGC,OAAO,aAAMC,OAAO,CAACC,GAAR,CAAYC,QAAlB,UAAzB,CAEA;AACA,GAAMC,CAAAA,WAAW,CAAG,CAClB,2BADkB,CAElB,+BAFkB,CAApB,CAIA,GAAMC,CAAAA,OAAO,CAAGD,WAAW,CAACE,MAAZ,CAAmB,SAACC,GAAD,CAAMC,CAAN,CAAY,CAC7C;AACA,GAAIP,OAAO,CAACC,GAAR,CAAYM,CAAZ,IAAmBC,SAAvB,CAAkCF,GAAG,CAACC,CAAC,CAACE,KAAF,CAAQ,EAAR,CAAD,CAAH,CAAmBT,OAAO,CAACC,GAAR,CAAYM,CAAZ,CAAnB,CAClC,MAAOD,CAAAA,GAAP,CACD,CAJe,CAIb,EAJa,CAAhB,CAMA,GAAMI,CAAAA,MAAM,8CAAQb,YAAR,EAAyBC,SAAzB,EAAuCM,OAAvC,CAAZ,CACA,cAAeM,CAAAA,MAAf","sourcesContent":["import configCommon from './common.json';\n// Using `require` as `import` does not support dynamic loading (yet).\nconst configEnv = require(`./${process.env.NODE_ENV}.json`);\n\n// Accepting React env vars and aggregating them into `config` object.\nconst envVarNames = [\n  'REACT_APP_PROVIDER_SOCKET',\n  'REACT_APP_DEVELOPMENT_KEYRING'\n];\nconst envVars = envVarNames.reduce((mem, n) => {\n  // Remove the `REACT_APP_` prefix\n  if (process.env[n] !== undefined) mem[n.slice(10)] = process.env[n];\n  return mem;\n}, {});\n\nconst config = { ...configCommon, ...configEnv, ...envVars };\nexport default config;\n"]},"metadata":{},"sourceType":"module"}