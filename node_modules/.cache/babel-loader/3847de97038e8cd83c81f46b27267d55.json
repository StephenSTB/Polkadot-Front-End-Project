{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getHeader = getHeader;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _type = require(\"../type\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name getHeader\n * @param {( Uint8Array | string )} hash - A block hash as U8 array or string.\n * @returns An array containing the block header and the block author\n * @description Get a specific block header and extend it with the author\n * @example\n * <BR>\n *\n * ```javascript\n * const { author, number } = await api.derive.chain.getHeader('0x123...456');\n *\n * console.log(`block #${number} was authored by ${author}`);\n * ```\n */\n\n\nfunction getHeader(instanceId, api) {\n  return (0, _util.memo)(instanceId, function (hash) {\n    return (0, _rxjs.combineLatest)([api.rpc.chain.getHeader(hash), api.query.session ? api.query.session.validators.at(hash) : (0, _rxjs.of)([])]).pipe((0, _operators.map)(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          header = _ref2[0],\n          validators = _ref2[1];\n\n      return new _type.HeaderExtended(api.registry, header, validators);\n    }), (0, _operators.catchError)(function () {\n      return (// where rpc.chain.getHeader throws, we will land here - it can happen that\n        // we supplied an invalid hash. (Due to defaults, storeage will have an\n        // empty value, so only the RPC is affected). So return undefined\n        (0, _rxjs.of)()\n      );\n    }));\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/chain/getHeader.js"],"names":["Object","defineProperty","exports","value","getHeader","_rxjs","require","_operators","_type","_util","instanceId","api","memo","hash","combineLatest","rpc","chain","query","session","validators","at","of","pipe","map","header","HeaderExtended","registry","catchError"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,SAAR,GAAoBA,SAApB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,gBAAD,CAAxB;;AAEA,IAAIE,KAAK,GAAGF,OAAO,CAAC,SAAD,CAAnB;;AAEA,IAAIG,KAAK,GAAGH,OAAO,CAAC,SAAD,CAAnB,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,SAAT,CAAmBM,UAAnB,EAA+BC,GAA/B,EAAoC;AAClC,SAAO,CAAC,GAAGF,KAAK,CAACG,IAAV,EAAgBF,UAAhB,EAA4B,UAAAG,IAAI;AAAA,WAAI,CAAC,GAAGR,KAAK,CAACS,aAAV,EAAyB,CAACH,GAAG,CAACI,GAAJ,CAAQC,KAAR,CAAcZ,SAAd,CAAwBS,IAAxB,CAAD,EAAgCF,GAAG,CAACM,KAAJ,CAAUC,OAAV,GAAoBP,GAAG,CAACM,KAAJ,CAAUC,OAAV,CAAkBC,UAAlB,CAA6BC,EAA7B,CAAgCP,IAAhC,CAApB,GAA4D,CAAC,GAAGR,KAAK,CAACgB,EAAV,EAAc,EAAd,CAA5F,CAAzB,EAAyIC,IAAzI,CAA8I,CAAC,GAAGf,UAAU,CAACgB,GAAf,EAAoB;AAAA;AAAA,UAAEC,MAAF;AAAA,UAAUL,UAAV;;AAAA,aAA0B,IAAIX,KAAK,CAACiB,cAAV,CAAyBd,GAAG,CAACe,QAA7B,EAAuCF,MAAvC,EAA+CL,UAA/C,CAA1B;AAAA,KAApB,CAA9I,EAAyP,CAAC,GAAGZ,UAAU,CAACoB,UAAf,EAA2B;AAAA,aAAM;AACrU;AACA;AACA,SAAC,GAAGtB,KAAK,CAACgB,EAAV;AAH+T;AAAA,KAA3B,CAAzP,CAAJ;AAAA,GAAhC,CAAP;AAID","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getHeader = getHeader;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _type = require(\"../type\");\n\nvar _util = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name getHeader\n * @param {( Uint8Array | string )} hash - A block hash as U8 array or string.\n * @returns An array containing the block header and the block author\n * @description Get a specific block header and extend it with the author\n * @example\n * <BR>\n *\n * ```javascript\n * const { author, number } = await api.derive.chain.getHeader('0x123...456');\n *\n * console.log(`block #${number} was authored by ${author}`);\n * ```\n */\nfunction getHeader(instanceId, api) {\n  return (0, _util.memo)(instanceId, hash => (0, _rxjs.combineLatest)([api.rpc.chain.getHeader(hash), api.query.session ? api.query.session.validators.at(hash) : (0, _rxjs.of)([])]).pipe((0, _operators.map)(([header, validators]) => new _type.HeaderExtended(api.registry, header, validators)), (0, _operators.catchError)(() => // where rpc.chain.getHeader throws, we will land here - it can happen that\n  // we supplied an invalid hash. (Due to defaults, storeage will have an\n  // empty value, so only the RPC is affected). So return undefined\n  (0, _rxjs.of)())));\n}"]},"metadata":{},"sourceType":"script"}