{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toCallsOnly; // Copyright 2017-2020 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nfunction trimDocs(documentation) {\n  var strings = documentation.map(function (doc) {\n    return doc.toString().trim();\n  });\n  var firstEmpty = strings.findIndex(function (doc) {\n    return !doc.length;\n  });\n  return firstEmpty === -1 ? strings : strings.slice(0, firstEmpty);\n}\n\nfunction mapCalls(registry, _calls) {\n  var calls = _calls.unwrapOr(null);\n\n  return registry.createType('Option<Vec<FunctionMetadataLatest>>', calls ? calls.map(function (_ref) {\n    var args = _ref.args,\n        documentation = _ref.documentation,\n        name = _ref.name;\n    return registry.createType('FunctionMetadataLatest', {\n      args: args,\n      documentation: trimDocs(documentation),\n      name: name\n    });\n  }) : null);\n}\n/** @internal */\n\n\nfunction toCallsOnly(registry, _ref2) {\n  var extrinsic = _ref2.extrinsic,\n      modules = _ref2.modules;\n  return registry.createType('MetadataLatest', {\n    extrinsic: extrinsic,\n    modules: modules.map(function (_ref3) {\n      var calls = _ref3.calls,\n          index = _ref3.index,\n          name = _ref3.name;\n      return {\n        calls: mapCalls(registry, calls),\n        index: index,\n        name: name\n      };\n    })\n  }).toJSON();\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/metadata/Metadata/util/toCallsOnly.js"],"names":["Object","defineProperty","exports","value","default","toCallsOnly","trimDocs","documentation","strings","map","doc","toString","trim","firstEmpty","findIndex","length","slice","mapCalls","registry","_calls","calls","unwrapOr","createType","args","name","extrinsic","modules","index","toJSON"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,WAAlB,C,CAEA;AACA;;AACA,SAASC,QAAT,CAAkBC,aAAlB,EAAiC;AAC/B,MAAMC,OAAO,GAAGD,aAAa,CAACE,GAAd,CAAkB,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,QAAJ,GAAeC,IAAf,EAAJ;AAAA,GAArB,CAAhB;AACA,MAAMC,UAAU,GAAGL,OAAO,CAACM,SAAR,CAAkB,UAAAJ,GAAG;AAAA,WAAI,CAACA,GAAG,CAACK,MAAT;AAAA,GAArB,CAAnB;AACA,SAAOF,UAAU,KAAK,CAAC,CAAhB,GAAoBL,OAApB,GAA8BA,OAAO,CAACQ,KAAR,CAAc,CAAd,EAAiBH,UAAjB,CAArC;AACD;;AAED,SAASI,QAAT,CAAkBC,QAAlB,EAA4BC,MAA5B,EAAoC;AAClC,MAAMC,KAAK,GAAGD,MAAM,CAACE,QAAP,CAAgB,IAAhB,CAAd;;AAEA,SAAOH,QAAQ,CAACI,UAAT,CAAoB,qCAApB,EAA2DF,KAAK,GAAGA,KAAK,CAACX,GAAN,CAAU;AAAA,QAClFc,IADkF,QAClFA,IADkF;AAAA,QAElFhB,aAFkF,QAElFA,aAFkF;AAAA,QAGlFiB,IAHkF,QAGlFA,IAHkF;AAAA,WAI9EN,QAAQ,CAACI,UAAT,CAAoB,wBAApB,EAA8C;AAClDC,MAAAA,IAAI,EAAJA,IADkD;AAElDhB,MAAAA,aAAa,EAAED,QAAQ,CAACC,aAAD,CAF2B;AAGlDiB,MAAAA,IAAI,EAAJA;AAHkD,KAA9C,CAJ8E;AAAA,GAAV,CAAH,GAQjE,IARC,CAAP;AASD;AACD;;;AAGA,SAASnB,WAAT,CAAqBa,QAArB,SAGG;AAAA,MAFDO,SAEC,SAFDA,SAEC;AAAA,MADDC,OACC,SADDA,OACC;AACD,SAAOR,QAAQ,CAACI,UAAT,CAAoB,gBAApB,EAAsC;AAC3CG,IAAAA,SAAS,EAATA,SAD2C;AAE3CC,IAAAA,OAAO,EAAEA,OAAO,CAACjB,GAAR,CAAY;AAAA,UACnBW,KADmB,SACnBA,KADmB;AAAA,UAEnBO,KAFmB,SAEnBA,KAFmB;AAAA,UAGnBH,IAHmB,SAGnBA,IAHmB;AAAA,aAId;AACLJ,QAAAA,KAAK,EAAEH,QAAQ,CAACC,QAAD,EAAWE,KAAX,CADV;AAELO,QAAAA,KAAK,EAALA,KAFK;AAGLH,QAAAA,IAAI,EAAJA;AAHK,OAJc;AAAA,KAAZ;AAFkC,GAAtC,EAWJI,MAXI,EAAP;AAYD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toCallsOnly;\n\n// Copyright 2017-2020 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction trimDocs(documentation) {\n  const strings = documentation.map(doc => doc.toString().trim());\n  const firstEmpty = strings.findIndex(doc => !doc.length);\n  return firstEmpty === -1 ? strings : strings.slice(0, firstEmpty);\n}\n\nfunction mapCalls(registry, _calls) {\n  const calls = _calls.unwrapOr(null);\n\n  return registry.createType('Option<Vec<FunctionMetadataLatest>>', calls ? calls.map(({\n    args,\n    documentation,\n    name\n  }) => registry.createType('FunctionMetadataLatest', {\n    args,\n    documentation: trimDocs(documentation),\n    name\n  })) : null);\n}\n/** @internal */\n\n\nfunction toCallsOnly(registry, {\n  extrinsic,\n  modules\n}) {\n  return registry.createType('MetadataLatest', {\n    extrinsic,\n    modules: modules.map(({\n      calls,\n      index,\n      name\n    }) => ({\n      calls: mapCalls(registry, calls),\n      index,\n      name\n    }))\n  }).toJSON();\n}"]},"metadata":{},"sourceType":"script"}