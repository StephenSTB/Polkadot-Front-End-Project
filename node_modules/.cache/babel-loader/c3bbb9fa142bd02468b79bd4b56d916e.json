{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/src/BlockInfo.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main(props) {\n  const {\n    api\n  } = useSubstrate();\n  const [blockHeader, setBlockHeader] = useState(null);\n  useEffect(() => {\n    let unsubscribe = null;\n    api.rpc.chain.subscribeNewHeads(header => {\n      setBlockHeader(header);\n      console.log(`Chain is at block: #${blockHeader.number}`);\n    }).then(unsub => {\n      unsubscribe = unsub;\n    }).catch(console.error);\n    return () => unsubscribe && unsubscribe();\n  }, []);\n  /*\r\n  const getInfo = async () =>{\r\n      const unsubscribe = await api.rpc.chain.subscribeNewHeads((header) => {\r\n          //console.log(`Chain is at block: #${header.hash}`);\\\r\n          setBlockNumber(header.number.toNumber());\r\n          setBlockHash(header.hash.toHuman());\r\n          setParrentHash(header.parentHash.toHuman());\r\n          setExtrinsicsRoot(header.extrinsicsRoot.toHuman());\r\n          setStateRoot()\r\n          //console.log(blockHash)\r\n          \r\n      });\r\n  }\r\n  getInfo();*/\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, \"Block Number:\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), \"Block hash:\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), \"Parent hash:\");\n}\n\nexport default function BlockInfo(props) {\n  const {\n    api\n  } = useSubstrate();\n  return api.rpc && api.rpc.chain && api.rpc.chain.subscribeNewHeads ? /*#__PURE__*/React.createElement(Main, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })) : null;\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/src/BlockInfo.js"],"names":["React","useEffect","useState","Statistic","Grid","Card","Icon","useSubstrate","Main","props","api","blockHeader","setBlockHeader","unsubscribe","rpc","chain","subscribeNewHeads","header","console","log","number","then","unsub","catch","error","BlockInfo"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,IAAhC,QAA2C,mBAA3C;AAEA,SAASC,YAAT,QAA6B,iBAA7B;;AAIA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAChB,QAAM;AAAEC,IAAAA;AAAF,MAAUH,YAAY,EAA5B;AAGA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,IAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACX,QAAIY,WAAW,GAAG,IAAlB;AAEAH,IAAAA,GAAG,CAACI,GAAJ,CAAQC,KAAR,CAAcC,iBAAd,CAAiCC,MAAD,IAAY;AAExCL,MAAAA,cAAc,CAACK,MAAD,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBR,WAAW,CAACS,MAAO,EAAtD;AACH,KAJD,EAIGC,IAJH,CAIQC,KAAK,IAAG;AACZT,MAAAA,WAAW,GAAGS,KAAd;AACH,KAND,EAMGC,KANH,CAMSL,OAAO,CAACM,KANjB;AAQA,WAAO,MAAMX,WAAW,IAAIA,WAAW,EAAvC;AACH,GAZQ,EAYN,EAZM,CAAT;AAcA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEI,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,8BAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,iBADA;AAUH;;AAED,eAAe,SAASY,SAAT,CAAmBhB,KAAnB,EAAyB;AACpC,QAAK;AAACC,IAAAA;AAAD,MAAQH,YAAY,EAAzB;AACA,SAAOG,GAAG,CAACI,GAAJ,IACPJ,GAAG,CAACI,GAAJ,CAAQC,KADD,IAEPL,GAAG,CAACI,GAAJ,CAAQC,KAAR,CAAcC,iBAFP,gBAGH,oBAAC,IAAD,oBAAUP,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHG,GAIH,IAJJ;AAKH","sourcesContent":["\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Statistic, Grid, Card, Icon} from 'semantic-ui-react';\r\n\r\nimport { useSubstrate } from './substrate-lib';\r\n\r\n\r\n\r\nfunction Main(props){\r\n    const { api } = useSubstrate();\r\n\r\n\r\n    const [blockHeader, setBlockHeader] = useState(null);\r\n\r\n    useEffect(()=> {\r\n        let unsubscribe = null;\r\n\r\n        api.rpc.chain.subscribeNewHeads((header) => {\r\n            \r\n            setBlockHeader(header);\r\n            console.log(`Chain is at block: #${blockHeader.number}`);\r\n        }).then(unsub =>{\r\n            unsubscribe = unsub;\r\n        }).catch(console.error);\r\n\r\n        return () => unsubscribe && unsubscribe();\r\n    }, []);\r\n\r\n    /*\r\n    const getInfo = async () =>{\r\n        const unsubscribe = await api.rpc.chain.subscribeNewHeads((header) => {\r\n            //console.log(`Chain is at block: #${header.hash}`);\\\r\n            setBlockNumber(header.number.toNumber());\r\n            setBlockHash(header.hash.toHuman());\r\n            setParrentHash(header.parentHash.toHuman());\r\n            setExtrinsicsRoot(header.extrinsicsRoot.toHuman());\r\n            setStateRoot()\r\n            //console.log(blockHash)\r\n            \r\n        });\r\n    }\r\n    getInfo();*/\r\n    \r\n    return(\r\n    <div>\r\n        Block Number: \r\n        <br/>\r\n        Block hash: \r\n        <br/>\r\n        Parent hash:\r\n    </div>\r\n    );\r\n\r\n}\r\n\r\nexport default function BlockInfo(props){\r\n    const{api} = useSubstrate();\r\n    return api.rpc &&\r\n    api.rpc.chain &&\r\n    api.rpc.chain.subscribeNewHeads  ? (\r\n        <Main {...props} />\r\n    ) : null;\r\n}"]},"metadata":{},"sourceType":"module"}