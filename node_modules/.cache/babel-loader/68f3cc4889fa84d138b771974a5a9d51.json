{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.info = info;\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @description Get the overall info for a society\n */\n\n\nfunction info(instanceId, api) {\n  return (0, _util.memo)(instanceId, function () {\n    return api.queryMulti([api.query.society.bids, api.query.society.defender, api.query.society.founder, api.query.society.head, api.query.society.maxMembers, api.query.society.pot]).pipe((0, _operators.map)(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 6),\n          bids = _ref2[0],\n          defender = _ref2[1],\n          founder = _ref2[2],\n          head = _ref2[3],\n          maxMembers = _ref2[4],\n          pot = _ref2[5];\n\n      return {\n        bids: bids,\n        defender: defender.unwrapOr(undefined),\n        founder: founder.unwrapOr(undefined),\n        hasDefender: defender.isSome && head.isSome && !head.eq(defender) || false,\n        head: head.unwrapOr(undefined),\n        maxMembers: maxMembers,\n        pot: pot\n      };\n    }));\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/society/info.js"],"names":["Object","defineProperty","exports","value","info","_operators","require","_util","instanceId","api","memo","queryMulti","query","society","bids","defender","founder","head","maxMembers","pot","pipe","map","unwrapOr","undefined","hasDefender","isSome","eq"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,IAAR,GAAeA,IAAf;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,gBAAD,CAAxB;;AAEA,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAAnB,C,CAEA;AACA;;AAEA;AACA;AACA;;;AACA,SAASF,IAAT,CAAcI,UAAd,EAA0BC,GAA1B,EAA+B;AAC7B,SAAO,CAAC,GAAGF,KAAK,CAACG,IAAV,EAAgBF,UAAhB,EAA4B;AAAA,WAAMC,GAAG,CAACE,UAAJ,CAAe,CAACF,GAAG,CAACG,KAAJ,CAAUC,OAAV,CAAkBC,IAAnB,EAAyBL,GAAG,CAACG,KAAJ,CAAUC,OAAV,CAAkBE,QAA3C,EAAqDN,GAAG,CAACG,KAAJ,CAAUC,OAAV,CAAkBG,OAAvE,EAAgFP,GAAG,CAACG,KAAJ,CAAUC,OAAV,CAAkBI,IAAlG,EAAwGR,GAAG,CAACG,KAAJ,CAAUC,OAAV,CAAkBK,UAA1H,EAAsIT,GAAG,CAACG,KAAJ,CAAUC,OAAV,CAAkBM,GAAxJ,CAAf,EAA6KC,IAA7K,CAAkL,CAAC,GAAGf,UAAU,CAACgB,GAAf,EAAoB;AAAA;AAAA,UAAEP,IAAF;AAAA,UAAQC,QAAR;AAAA,UAAkBC,OAAlB;AAAA,UAA2BC,IAA3B;AAAA,UAAiCC,UAAjC;AAAA,UAA6CC,GAA7C;;AAAA,aAAuD;AACpSL,QAAAA,IAAI,EAAJA,IADoS;AAEpSC,QAAAA,QAAQ,EAAEA,QAAQ,CAACO,QAAT,CAAkBC,SAAlB,CAF0R;AAGpSP,QAAAA,OAAO,EAAEA,OAAO,CAACM,QAAR,CAAiBC,SAAjB,CAH2R;AAIpSC,QAAAA,WAAW,EAAET,QAAQ,CAACU,MAAT,IAAmBR,IAAI,CAACQ,MAAxB,IAAkC,CAACR,IAAI,CAACS,EAAL,CAAQX,QAAR,CAAnC,IAAwD,KAJ+N;AAKpSE,QAAAA,IAAI,EAAEA,IAAI,CAACK,QAAL,CAAcC,SAAd,CAL8R;AAMpSL,QAAAA,UAAU,EAAVA,UANoS;AAOpSC,QAAAA,GAAG,EAAHA;AAPoS,OAAvD;AAAA,KAApB,CAAlL,CAAN;AAAA,GAA5B,CAAP;AASD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.info = info;\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @description Get the overall info for a society\n */\nfunction info(instanceId, api) {\n  return (0, _util.memo)(instanceId, () => api.queryMulti([api.query.society.bids, api.query.society.defender, api.query.society.founder, api.query.society.head, api.query.society.maxMembers, api.query.society.pot]).pipe((0, _operators.map)(([bids, defender, founder, head, maxMembers, pot]) => ({\n    bids,\n    defender: defender.unwrapOr(undefined),\n    founder: founder.unwrapOr(undefined),\n    hasDefender: defender.isSome && head.isSome && !head.eq(defender) || false,\n    head: head.unwrapOr(undefined),\n    maxMembers,\n    pot\n  }))));\n}"]},"metadata":{},"sourceType":"script"}