{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.receivedHeartbeats = receivedHeartbeats;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _util2 = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction mapResult(_ref) {\n  var _ref2 = _slicedToArray(_ref, 4),\n      result = _ref2[0],\n      validators = _ref2[1],\n      heartbeats = _ref2[2],\n      numBlocks = _ref2[3];\n\n  validators.forEach(function (validator, index) {\n    var validatorId = validator.toString();\n    var blockCount = numBlocks[index];\n    var hasMessage = !heartbeats[index].isEmpty;\n    var prev = result[validatorId];\n\n    if (!prev || prev.hasMessage !== hasMessage || !prev.blockCount.eq(blockCount)) {\n      result[validatorId] = {\n        blockCount: blockCount,\n        hasMessage: hasMessage,\n        isOnline: hasMessage || blockCount.gt(_util.BN_ZERO)\n      };\n    }\n  });\n  return result;\n}\n/**\n * @description Return a boolean array indicating whether the passed accounts had received heartbeats in the current session\n */\n\n\nfunction receivedHeartbeats(instanceId, api) {\n  return (0, _util2.memo)(instanceId, function () {\n    var _api$query$imOnline;\n\n    return ((_api$query$imOnline = api.query.imOnline) === null || _api$query$imOnline === void 0 ? void 0 : _api$query$imOnline.receivedHeartbeats) ? api.derive.staking.overview().pipe((0, _operators.switchMap)(function (_ref3) {\n      var currentIndex = _ref3.currentIndex,\n          validators = _ref3.validators;\n      return (0, _rxjs.combineLatest)([(0, _rxjs.of)({}), (0, _rxjs.of)(validators), api.query.imOnline.receivedHeartbeats.multi(validators.map(function (_address, index) {\n        return [currentIndex, index];\n      })), api.query.imOnline.authoredBlocks.multi(validators.map(function (address) {\n        return [currentIndex, address];\n      }))]);\n    }), (0, _operators.map)(mapResult)) : (0, _rxjs.of)({});\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/imOnline/receivedHeartbeats.js"],"names":["Object","defineProperty","exports","value","receivedHeartbeats","_rxjs","require","_operators","_util","_util2","mapResult","result","validators","heartbeats","numBlocks","forEach","validator","index","validatorId","toString","blockCount","hasMessage","isEmpty","prev","eq","isOnline","gt","BN_ZERO","instanceId","api","memo","_api$query$imOnline","query","imOnline","derive","staking","overview","pipe","switchMap","currentIndex","combineLatest","of","multi","map","_address","authoredBlocks","address"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.receivedHeartbeats = receivedHeartbeats;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _util2 = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction mapResult([result, validators, heartbeats, numBlocks]) {\n  validators.forEach((validator, index) => {\n    const validatorId = validator.toString();\n    const blockCount = numBlocks[index];\n    const hasMessage = !heartbeats[index].isEmpty;\n    const prev = result[validatorId];\n\n    if (!prev || prev.hasMessage !== hasMessage || !prev.blockCount.eq(blockCount)) {\n      result[validatorId] = {\n        blockCount,\n        hasMessage,\n        isOnline: hasMessage || blockCount.gt(_util.BN_ZERO)\n      };\n    }\n  });\n  return result;\n}\n/**\n * @description Return a boolean array indicating whether the passed accounts had received heartbeats in the current session\n */\n\n\nfunction receivedHeartbeats(instanceId, api) {\n  return (0, _util2.memo)(instanceId, () => {\n    var _api$query$imOnline;\n\n    return ((_api$query$imOnline = api.query.imOnline) === null || _api$query$imOnline === void 0 ? void 0 : _api$query$imOnline.receivedHeartbeats) ? api.derive.staking.overview().pipe((0, _operators.switchMap)(({\n      currentIndex,\n      validators\n    }) => (0, _rxjs.combineLatest)([(0, _rxjs.of)({}), (0, _rxjs.of)(validators), api.query.imOnline.receivedHeartbeats.multi(validators.map((_address, index) => [currentIndex, index])), api.query.imOnline.authoredBlocks.multi(validators.map(address => [currentIndex, address]))])), (0, _operators.map)(mapResult)) : (0, _rxjs.of)({});\n  });\n}"]},"metadata":{},"sourceType":"script"}