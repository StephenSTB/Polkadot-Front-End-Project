{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _classCallCheck = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _wrapNativeSuper = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _Compact = _interopRequireDefault(require(\"./Compact\"));\n\nvar _Raw = _interopRequireDefault(require(\"./Raw\"));\n\nvar _utils = require(\"./utils\"); // Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name AbstractArray\n * @description\n * This manages codec arrays. It is an extension to Array, providing\n * specific encoding/decoding on top of the base type.\n * @noInheritDoc\n */\n\n\nvar AbstractArray = /*#__PURE__*/function (_Array) {\n  _inherits(AbstractArray, _Array);\n\n  var _super = _createSuper(AbstractArray);\n\n  function AbstractArray(registry) {\n    var _this;\n\n    _classCallCheck(this, AbstractArray);\n\n    for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      values[_key - 1] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(values));\n    _this.registry = void 0;\n    _this.registry = registry;\n    return _this;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  _createClass(AbstractArray, [{\n    key: \"eq\",\n\n    /**\n     * @description Compares the value of the input to see if there is a match\n     */\n    value: function eq(other) {\n      return (0, _utils.compareArray)(this, other);\n    }\n    /**\n     * @description Converts the Object to an standard JavaScript Array\n     */\n\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return Array.from(this);\n    }\n    /**\n     * @description Returns a hex string representation of the value\n     */\n\n  }, {\n    key: \"toHex\",\n    value: function toHex() {\n      return (0, _util.u8aToHex)(this.toU8a());\n    }\n    /**\n     * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n     */\n\n  }, {\n    key: \"toHuman\",\n    value: function toHuman(isExtended) {\n      return this.map(function (entry) {\n        return entry.toHuman(isExtended);\n      });\n    }\n    /**\n     * @description Converts the Object to JSON, typically used for RPC transfers\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.map(function (entry) {\n        return entry.toJSON();\n      });\n    }\n    /**\n     * @description Returns the base runtime type name for this instance\n     */\n\n    /**\n     * @description Returns the string representation of the value\n     */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      // Overwrite the default toString representation of Array.\n      var data = this.map(function (entry) {\n        return entry.toString();\n      });\n      return \"[\".concat(data.join(', '), \"]\");\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n\n  }, {\n    key: \"toU8a\",\n    value: function toU8a(isBare) {\n      var encoded = this.map(function (entry) {\n        return entry.toU8a(isBare);\n      });\n      return isBare ? (0, _util.u8aConcat).apply(void 0, _toConsumableArray(encoded)) : (0, _util.u8aConcat).apply(void 0, [_Compact.default.encodeU8a(this.length)].concat(_toConsumableArray(encoded)));\n    } // Below are methods that we override. When we do a `new Vec(...).map()`,\n    // we want it to return an Array. We only override the methods that return a\n    // new instance.\n\n    /**\n     * @description Concatenates two arrays\n     */\n\n  }, {\n    key: \"concat\",\n    value: function concat(other) {\n      return this.toArray().concat(other instanceof AbstractArray ? other.toArray() : other);\n    }\n    /**\n     * @description Filters the array with the callback\n     */\n\n  }, {\n    key: \"filter\",\n    value: function filter(callbackfn, thisArg) {\n      return this.toArray().filter(callbackfn, thisArg);\n    }\n    /**\n     * @description Maps the array with the callback\n     */\n\n  }, {\n    key: \"map\",\n    value: function map(callbackfn, thisArg) {\n      return this.toArray().map(callbackfn, thisArg);\n    }\n    /**\n     * @description Checks if the array includes a specific value\n     */\n\n  }, {\n    key: \"includes\",\n    value: function includes(check) {\n      return this.some(function (value) {\n        return value.eq(check);\n      });\n    }\n  }, {\n    key: \"encodedLength\",\n    get: function get() {\n      return this.reduce(function (total, raw) {\n        return total + raw.encodedLength;\n      }, _Compact.default.encodeU8a(this.length).length);\n    }\n    /**\n     * @description returns a hash of the contents\n     */\n\n  }, {\n    key: \"hash\",\n    get: function get() {\n      return new _Raw.default(this.registry, this.registry.hash(this.toU8a()));\n    }\n    /**\n     * @description Checks if the value is an empty value\n     */\n\n  }, {\n    key: \"isEmpty\",\n    get: function get() {\n      return this.length === 0;\n    }\n    /**\n     * @description The length of the value\n     */\n\n  }, {\n    key: \"length\",\n    get: function get() {\n      // only included here since we ignore inherited docs\n      return _get(_getPrototypeOf(AbstractArray.prototype), \"length\", this);\n    }\n  }]);\n\n  return AbstractArray;\n}( /*#__PURE__*/_wrapNativeSuper(Array));\n\nexports.default = AbstractArray;","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/types/codec/AbstractArray.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_util","_Compact","_Raw","_utils","AbstractArray","registry","values","other","compareArray","Array","from","u8aToHex","toU8a","isExtended","map","entry","toHuman","toJSON","data","toString","join","isBare","encoded","u8aConcat","encodeU8a","length","toArray","concat","callbackfn","thisArg","filter","check","some","eq","reduce","total","raw","encodedLength","hash"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _Compact = _interopRequireDefault(require(\"./Compact\"));\n\nvar _Raw = _interopRequireDefault(require(\"./Raw\"));\n\nvar _utils = require(\"./utils\");\n\n// Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name AbstractArray\n * @description\n * This manages codec arrays. It is an extension to Array, providing\n * specific encoding/decoding on top of the base type.\n * @noInheritDoc\n */\nclass AbstractArray extends Array {\n  constructor(registry, ...values) {\n    super(...values);\n    this.registry = void 0;\n    this.registry = registry;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.reduce((total, raw) => {\n      return total + raw.encodedLength;\n    }, _Compact.default.encodeU8a(this.length).length);\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    return new _Raw.default(this.registry, this.registry.hash(this.toU8a()));\n  }\n  /**\n   * @description Checks if the value is an empty value\n   */\n\n\n  get isEmpty() {\n    return this.length === 0;\n  }\n  /**\n   * @description The length of the value\n   */\n\n\n  get length() {\n    // only included here since we ignore inherited docs\n    return super.length;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return (0, _utils.compareArray)(this, other);\n  }\n  /**\n   * @description Converts the Object to an standard JavaScript Array\n   */\n\n\n  toArray() {\n    return Array.from(this);\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return (0, _util.u8aToHex)(this.toU8a());\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman(isExtended) {\n    return this.map(entry => entry.toHuman(isExtended));\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return this.map(entry => entry.toJSON());\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  /**\n   * @description Returns the string representation of the value\n   */\n  toString() {\n    // Overwrite the default toString representation of Array.\n    const data = this.map(entry => entry.toString());\n    return `[${data.join(', ')}]`;\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    const encoded = this.map(entry => entry.toU8a(isBare));\n    return isBare ? (0, _util.u8aConcat)(...encoded) : (0, _util.u8aConcat)(_Compact.default.encodeU8a(this.length), ...encoded);\n  } // Below are methods that we override. When we do a `new Vec(...).map()`,\n  // we want it to return an Array. We only override the methods that return a\n  // new instance.\n\n  /**\n   * @description Concatenates two arrays\n   */\n\n\n  concat(other) {\n    return this.toArray().concat(other instanceof AbstractArray ? other.toArray() : other);\n  }\n  /**\n   * @description Filters the array with the callback\n   */\n\n\n  filter(callbackfn, thisArg) {\n    return this.toArray().filter(callbackfn, thisArg);\n  }\n  /**\n   * @description Maps the array with the callback\n   */\n\n\n  map(callbackfn, thisArg) {\n    return this.toArray().map(callbackfn, thisArg);\n  }\n  /**\n   * @description Checks if the array includes a specific value\n   */\n\n\n  includes(check) {\n    return this.some(value => value.eq(check));\n  }\n\n}\n\nexports.default = AbstractArray;"]},"metadata":{},"sourceType":"script"}