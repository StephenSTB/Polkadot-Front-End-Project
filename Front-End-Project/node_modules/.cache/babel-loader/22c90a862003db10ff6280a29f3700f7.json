{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _encoders;\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.paramsNotation = paramsNotation;\nexports.encodeTypeDef = encodeTypeDef;\nexports.withTypeString = withTypeString;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"../../create/types\");\n\nvar _util = require(\"@polkadot/util\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar stringIdentity = function stringIdentity(value) {\n  return value.toString();\n};\n\nfunction paramsNotation(outer, inner) {\n  var transform = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringIdentity;\n  return \"\".concat(outer).concat(inner ? \"<\".concat((Array.isArray(inner) ? inner : [inner]).map(transform).join(', '), \">\") : '');\n} // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n\nfunction encodeWithParams(typeDef) {\n  var outer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : typeDef.displayName || typeDef.type;\n  var info = typeDef.info,\n      params = typeDef.params,\n      sub = typeDef.sub;\n\n  switch (info) {\n    case _types.TypeDefInfo.BTreeMap:\n    case _types.TypeDefInfo.BTreeSet:\n    case _types.TypeDefInfo.Compact:\n    case _types.TypeDefInfo.HashMap:\n    case _types.TypeDefInfo.Linkage:\n    case _types.TypeDefInfo.Option:\n    case _types.TypeDefInfo.Result:\n    case _types.TypeDefInfo.Vec:\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      return paramsNotation(outer, params || sub, function (param) {\n        return encodeTypeDef(param);\n      });\n\n    default:\n      return outer;\n  }\n}\n\nfunction encodeDoNotConstruct(_ref) {\n  var displayName = _ref.displayName;\n  return \"DoNotEncode<\".concat(displayName || 'Unknown', \">\");\n}\n\nfunction encodeSubTypes(sub, asEnum) {\n  var inner = sub.reduce(function (result, type) {\n    return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, type.name, encodeTypeDef(type)));\n  }, {});\n  return JSON.stringify(asEnum ? {\n    _enum: inner\n  } : inner);\n}\n\nfunction encodeEnum(typeDef) {\n  (0, _util.assert)(typeDef.sub && Array.isArray(typeDef.sub), 'Unable to encode Enum type');\n  var sub = typeDef.sub; // c-like enums have all Null entries\n  // TODO We need to take the disciminant into account and auto-add empty entries\n\n  return sub.every(function (_ref2) {\n    var type = _ref2.type;\n    return type === 'Null';\n  }) ? \"{ _enum: [\".concat(sub.map(function (_ref3, index) {\n    var name = _ref3.name;\n    return \"\\\"\".concat(name || \"Empty\".concat(index), \"\\\"\");\n  }).join(', '), \"] }\") : encodeSubTypes(sub, true);\n}\n\nfunction encodeStruct(typeDef) {\n  (0, _util.assert)(typeDef.sub && Array.isArray(typeDef.sub), 'Unable to encode Struct type');\n  return encodeSubTypes(typeDef.sub);\n}\n\nfunction encodeTuple(typeDef) {\n  (0, _util.assert)(typeDef.sub && Array.isArray(typeDef.sub), 'Unable to encode Tuple type'); // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n  return \"(\".concat(typeDef.sub.map(function (type) {\n    return encodeTypeDef(type);\n  }).join(', '), \")\");\n}\n\nfunction encodeUInt(_ref4, type) {\n  var length = _ref4.length;\n  (0, _util.assert)((0, _util.isNumber)(length), 'Unable to encode VecFixed type');\n  return \"\".concat(type, \"<\").concat(length, \">\");\n}\n\nfunction encodeVecFixed(_ref5) {\n  var length = _ref5.length,\n      sub = _ref5.sub;\n  (0, _util.assert)((0, _util.isNumber)(length) && !(0, _util.isUndefined)(sub) && !Array.isArray(sub), 'Unable to encode VecFixed type');\n  return \"[\".concat(sub.type, \";\").concat(length, \"]\");\n} // We setup a record here to ensure we have comprehensive coverage (any item not covered will result\n// in a compile-time error with the missing index)\n\n\nvar encoders = (_encoders = {}, _defineProperty(_encoders, _types.TypeDefInfo.BTreeMap, function (typeDef) {\n  return encodeWithParams(typeDef, 'BTreeMap');\n}), _defineProperty(_encoders, _types.TypeDefInfo.BTreeSet, function (typeDef) {\n  return encodeWithParams(typeDef, 'BTreeSet');\n}), _defineProperty(_encoders, _types.TypeDefInfo.Compact, function (typeDef) {\n  return encodeWithParams(typeDef, 'Compact');\n}), _defineProperty(_encoders, _types.TypeDefInfo.DoNotConstruct, function (typeDef) {\n  return encodeDoNotConstruct(typeDef);\n}), _defineProperty(_encoders, _types.TypeDefInfo.Enum, function (typeDef) {\n  return encodeEnum(typeDef);\n}), _defineProperty(_encoders, _types.TypeDefInfo.HashMap, function (typeDef) {\n  return encodeWithParams(typeDef, 'HashMap');\n}), _defineProperty(_encoders, _types.TypeDefInfo.Int, function (typeDef) {\n  return encodeUInt(typeDef, 'Int');\n}), _defineProperty(_encoders, _types.TypeDefInfo.Linkage, function (typeDef) {\n  return encodeWithParams(typeDef, 'Linkage');\n}), _defineProperty(_encoders, _types.TypeDefInfo.Null, function (typeDef) {\n  return 'Null';\n}), _defineProperty(_encoders, _types.TypeDefInfo.Option, function (typeDef) {\n  return encodeWithParams(typeDef, 'Option');\n}), _defineProperty(_encoders, _types.TypeDefInfo.Plain, function (typeDef) {\n  return typeDef.displayName || typeDef.type;\n}), _defineProperty(_encoders, _types.TypeDefInfo.Result, function (typeDef) {\n  return encodeWithParams(typeDef, 'Result');\n}), _defineProperty(_encoders, _types.TypeDefInfo.Set, function (typeDef) {\n  return typeDef.type;\n}), _defineProperty(_encoders, _types.TypeDefInfo.Struct, function (typeDef) {\n  return encodeStruct(typeDef);\n}), _defineProperty(_encoders, _types.TypeDefInfo.Tuple, function (typeDef) {\n  return encodeTuple(typeDef);\n}), _defineProperty(_encoders, _types.TypeDefInfo.UInt, function (typeDef) {\n  return encodeUInt(typeDef, 'UInt');\n}), _defineProperty(_encoders, _types.TypeDefInfo.Vec, function (typeDef) {\n  return encodeWithParams(typeDef, 'Vec');\n}), _defineProperty(_encoders, _types.TypeDefInfo.VecFixed, function (typeDef) {\n  return encodeVecFixed(typeDef);\n}), _encoders);\n\nfunction encodeType(typeDef) {\n  var encoder = encoders[typeDef.info];\n  (0, _util.assert)(encoder, \"Cannot encode type: \".concat(JSON.stringify(typeDef)));\n  return encoder(typeDef);\n}\n\nfunction encodeTypeDef(typeDef) {\n  (0, _util.assert)(!(0, _util.isUndefined)(typeDef.info), \"Invalid type definition with no instance info, \".concat(JSON.stringify(typeDef)));\n  return typeDef.displayName || [_types.TypeDefInfo.Enum, _types.TypeDefInfo.Struct].includes(typeDef.info) ? encodeWithParams(typeDef) : encodeType(typeDef);\n}\n\nfunction withTypeString(typeDef) {\n  return _objectSpread(_objectSpread({}, typeDef), {}, {\n    type: encodeType(typeDef)\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/types/codec/utils/encodeTypes.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","paramsNotation","encodeTypeDef","withTypeString","_defineProperty2","_types","_util","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","default","getOwnPropertyDescriptors","defineProperties","stringIdentity","toString","outer","inner","transform","Array","isArray","map","join","encodeWithParams","typeDef","displayName","type","info","params","sub","TypeDefInfo","BTreeMap","BTreeSet","Compact","HashMap","Linkage","Option","Result","Vec","param","encodeDoNotConstruct","encodeSubTypes","asEnum","reduce","result","name","JSON","stringify","_enum","encodeEnum","assert","every","index","encodeStruct","encodeTuple","encodeUInt","isNumber","encodeVecFixed","isUndefined","encoders","DoNotConstruct","Enum","Int","Null","Plain","Set","Struct","Tuple","UInt","VecFixed","encodeType","encoder","includes"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.paramsNotation = paramsNotation;\nexports.encodeTypeDef = encodeTypeDef;\nexports.withTypeString = withTypeString;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"../../create/types\");\n\nvar _util = require(\"@polkadot/util\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst stringIdentity = value => value.toString();\n\nfunction paramsNotation(outer, inner, transform = stringIdentity) {\n  return `${outer}${inner ? `<${(Array.isArray(inner) ? inner : [inner]).map(transform).join(', ')}>` : ''}`;\n} // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n\nfunction encodeWithParams(typeDef, outer = typeDef.displayName || typeDef.type) {\n  const {\n    info,\n    params,\n    sub\n  } = typeDef;\n\n  switch (info) {\n    case _types.TypeDefInfo.BTreeMap:\n    case _types.TypeDefInfo.BTreeSet:\n    case _types.TypeDefInfo.Compact:\n    case _types.TypeDefInfo.HashMap:\n    case _types.TypeDefInfo.Linkage:\n    case _types.TypeDefInfo.Option:\n    case _types.TypeDefInfo.Result:\n    case _types.TypeDefInfo.Vec:\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      return paramsNotation(outer, params || sub, param => encodeTypeDef(param));\n\n    default:\n      return outer;\n  }\n}\n\nfunction encodeDoNotConstruct({\n  displayName\n}) {\n  return `DoNotEncode<${displayName || 'Unknown'}>`;\n}\n\nfunction encodeSubTypes(sub, asEnum) {\n  const inner = sub.reduce((result, type) => _objectSpread(_objectSpread({}, result), {}, {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    [type.name]: encodeTypeDef(type)\n  }), {});\n  return JSON.stringify(asEnum ? {\n    _enum: inner\n  } : inner);\n}\n\nfunction encodeEnum(typeDef) {\n  (0, _util.assert)(typeDef.sub && Array.isArray(typeDef.sub), 'Unable to encode Enum type');\n  const sub = typeDef.sub; // c-like enums have all Null entries\n  // TODO We need to take the disciminant into account and auto-add empty entries\n\n  return sub.every(({\n    type\n  }) => type === 'Null') ? `{ _enum: [${sub.map(({\n    name\n  }, index) => `\"${name || `Empty${index}`}\"`).join(', ')}] }` : encodeSubTypes(sub, true);\n}\n\nfunction encodeStruct(typeDef) {\n  (0, _util.assert)(typeDef.sub && Array.isArray(typeDef.sub), 'Unable to encode Struct type');\n  return encodeSubTypes(typeDef.sub);\n}\n\nfunction encodeTuple(typeDef) {\n  (0, _util.assert)(typeDef.sub && Array.isArray(typeDef.sub), 'Unable to encode Tuple type'); // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n  return `(${typeDef.sub.map(type => encodeTypeDef(type)).join(', ')})`;\n}\n\nfunction encodeUInt({\n  length\n}, type) {\n  (0, _util.assert)((0, _util.isNumber)(length), 'Unable to encode VecFixed type');\n  return `${type}<${length}>`;\n}\n\nfunction encodeVecFixed({\n  length,\n  sub\n}) {\n  (0, _util.assert)((0, _util.isNumber)(length) && !(0, _util.isUndefined)(sub) && !Array.isArray(sub), 'Unable to encode VecFixed type');\n  return `[${sub.type};${length}]`;\n} // We setup a record here to ensure we have comprehensive coverage (any item not covered will result\n// in a compile-time error with the missing index)\n\n\nconst encoders = {\n  [_types.TypeDefInfo.BTreeMap]: typeDef => encodeWithParams(typeDef, 'BTreeMap'),\n  [_types.TypeDefInfo.BTreeSet]: typeDef => encodeWithParams(typeDef, 'BTreeSet'),\n  [_types.TypeDefInfo.Compact]: typeDef => encodeWithParams(typeDef, 'Compact'),\n  [_types.TypeDefInfo.DoNotConstruct]: typeDef => encodeDoNotConstruct(typeDef),\n  [_types.TypeDefInfo.Enum]: typeDef => encodeEnum(typeDef),\n  [_types.TypeDefInfo.HashMap]: typeDef => encodeWithParams(typeDef, 'HashMap'),\n  [_types.TypeDefInfo.Int]: typeDef => encodeUInt(typeDef, 'Int'),\n  [_types.TypeDefInfo.Linkage]: typeDef => encodeWithParams(typeDef, 'Linkage'),\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [_types.TypeDefInfo.Null]: typeDef => 'Null',\n  [_types.TypeDefInfo.Option]: typeDef => encodeWithParams(typeDef, 'Option'),\n  [_types.TypeDefInfo.Plain]: typeDef => typeDef.displayName || typeDef.type,\n  [_types.TypeDefInfo.Result]: typeDef => encodeWithParams(typeDef, 'Result'),\n  [_types.TypeDefInfo.Set]: typeDef => typeDef.type,\n  [_types.TypeDefInfo.Struct]: typeDef => encodeStruct(typeDef),\n  [_types.TypeDefInfo.Tuple]: typeDef => encodeTuple(typeDef),\n  [_types.TypeDefInfo.UInt]: typeDef => encodeUInt(typeDef, 'UInt'),\n  [_types.TypeDefInfo.Vec]: typeDef => encodeWithParams(typeDef, 'Vec'),\n  [_types.TypeDefInfo.VecFixed]: typeDef => encodeVecFixed(typeDef)\n};\n\nfunction encodeType(typeDef) {\n  const encoder = encoders[typeDef.info];\n  (0, _util.assert)(encoder, `Cannot encode type: ${JSON.stringify(typeDef)}`);\n  return encoder(typeDef);\n}\n\nfunction encodeTypeDef(typeDef) {\n  (0, _util.assert)(!(0, _util.isUndefined)(typeDef.info), `Invalid type definition with no instance info, ${JSON.stringify(typeDef)}`);\n  return typeDef.displayName || [_types.TypeDefInfo.Enum, _types.TypeDefInfo.Struct].includes(typeDef.info) ? encodeWithParams(typeDef) : encodeType(typeDef);\n}\n\nfunction withTypeString(typeDef) {\n  return _objectSpread(_objectSpread({}, typeDef), {}, {\n    type: encodeType(typeDef)\n  });\n}"]},"metadata":{},"sourceType":"script"}