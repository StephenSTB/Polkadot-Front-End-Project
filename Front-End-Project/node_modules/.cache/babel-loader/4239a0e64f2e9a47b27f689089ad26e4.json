{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/src/BlockInfo.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\n\nasync function BlockInfo(props) {\n  const {\n    api\n  } = useSubstrate();\n  const unsubscribe = await api.rpc.chain.subscribeNewHeads(header => {\n    console.log(`Chain is at block: #${header.number}`);\n\n    if (++count === 256) {\n      unsubscribe();\n      process.exit(0);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, blockhash);\n}\n\nexport default BlockInfo;","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/src/BlockInfo.js"],"names":["React","useEffect","useState","Statistic","Grid","Card","Icon","useSubstrate","BlockInfo","props","api","unsubscribe","rpc","chain","subscribeNewHeads","header","console","log","number","count","process","exit","blockhash"],"mappings":";AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,IAAhC,QAA4C,mBAA5C;AAEA,SAASC,YAAT,QAA6B,iBAA7B;;AAGA,eAAeC,SAAf,CAAyBC,KAAzB,EAA+B;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAUH,YAAY,EAA5B;AAEA,QAAMI,WAAW,GAAG,MAAMD,GAAG,CAACE,GAAJ,CAAQC,KAAR,CAAcC,iBAAd,CAAiCC,MAAD,IAAY;AAClEC,IAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBF,MAAM,CAACG,MAAO,EAAjD;;AAEA,QAAI,EAAEC,KAAF,KAAY,GAAhB,EAAqB;AACnBR,MAAAA,WAAW;AACXS,MAAAA,OAAO,CAACC,IAAR,CAAa,CAAb;AACD;AACF,GAPuB,CAA1B;AASA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,SAAN,CADJ;AAGH;;AAED,eAAed,SAAf","sourcesContent":["\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react';\r\n\r\nimport { useSubstrate } from './substrate-lib';\r\n\r\n\r\nasync function BlockInfo(props){\r\n    const { api } = useSubstrate();\r\n\r\n    const unsubscribe = await api.rpc.chain.subscribeNewHeads((header) => {\r\n        console.log(`Chain is at block: #${header.number}`);\r\n    \r\n        if (++count === 256) {\r\n          unsubscribe();\r\n          process.exit(0);\r\n        }\r\n      });\r\n\r\n    return(\r\n        <div>{blockhash}</div>\r\n    );\r\n}\r\n\r\nexport default BlockInfo"]},"metadata":{},"sourceType":"module"}