{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.refCountDelay = refCountDelay;\n\nvar _rxjs = require(\"rxjs\"); // Copyright 2017-2020 @polkadot/rpc-core authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\n\n\nfunction refCountDelay() {\n  var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1750;\n  return function (source) {\n    // state: 0 = disconnected, 1 = disconnecting, 2 = connecting, 3 = connected\n    var _ref = [0, 0, _rxjs.Subscription.EMPTY, _rxjs.Subscription.EMPTY],\n        state = _ref[0],\n        refCount = _ref[1],\n        connection = _ref[2],\n        scheduler = _ref[3];\n    return new _rxjs.Observable(function (ob) {\n      source.subscribe(ob);\n\n      if (refCount++ === 0) {\n        if (state === 1) {\n          scheduler.unsubscribe();\n        } else {\n          connection = source.connect();\n        }\n\n        state = 3;\n      }\n\n      return function () {\n        if (--refCount === 0) {\n          if (state === 2) {\n            state = 0;\n            scheduler.unsubscribe();\n          } else {\n            // state === 3\n            state = 1;\n            scheduler = _rxjs.asapScheduler.schedule(function () {\n              state = 0;\n              connection.unsubscribe();\n            }, delay);\n          }\n        }\n      };\n    });\n  };\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/rpc-core/rxjs/refCountDelay.js"],"names":["Object","defineProperty","exports","value","refCountDelay","_rxjs","require","delay","source","Subscription","EMPTY","state","refCount","connection","scheduler","Observable","ob","subscribe","unsubscribe","connect","asapScheduler","schedule"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,aAAR,GAAwBA,aAAxB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,MAAD,CAAnB,C,CAEA;AACA;;AAEA;;;AACA,SAASF,aAAT,GAAqC;AAAA,MAAdG,KAAc,uEAAN,IAAM;AACnC,SAAO,UAAAC,MAAM,EAAI;AACf;AADe,eAEgC,CAAC,CAAD,EAAI,CAAJ,EAAOH,KAAK,CAACI,YAAN,CAAmBC,KAA1B,EAAiCL,KAAK,CAACI,YAAN,CAAmBC,KAApD,CAFhC;AAAA,QAEVC,KAFU;AAAA,QAEHC,QAFG;AAAA,QAEOC,UAFP;AAAA,QAEmBC,SAFnB;AAGf,WAAO,IAAIT,KAAK,CAACU,UAAV,CAAqB,UAAAC,EAAE,EAAI;AAChCR,MAAAA,MAAM,CAACS,SAAP,CAAiBD,EAAjB;;AAEA,UAAIJ,QAAQ,OAAO,CAAnB,EAAsB;AACpB,YAAID,KAAK,KAAK,CAAd,EAAiB;AACfG,UAAAA,SAAS,CAACI,WAAV;AACD,SAFD,MAEO;AACLL,UAAAA,UAAU,GAAGL,MAAM,CAACW,OAAP,EAAb;AACD;;AAEDR,QAAAA,KAAK,GAAG,CAAR;AACD;;AAED,aAAO,YAAM;AACX,YAAI,EAAEC,QAAF,KAAe,CAAnB,EAAsB;AACpB,cAAID,KAAK,KAAK,CAAd,EAAiB;AACfA,YAAAA,KAAK,GAAG,CAAR;AACAG,YAAAA,SAAS,CAACI,WAAV;AACD,WAHD,MAGO;AACL;AACAP,YAAAA,KAAK,GAAG,CAAR;AACAG,YAAAA,SAAS,GAAGT,KAAK,CAACe,aAAN,CAAoBC,QAApB,CAA6B,YAAM;AAC7CV,cAAAA,KAAK,GAAG,CAAR;AACAE,cAAAA,UAAU,CAACK,WAAX;AACD,aAHW,EAGTX,KAHS,CAAZ;AAID;AACF;AACF,OAdD;AAeD,KA5BM,CAAP;AA6BD,GAhCD;AAiCD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.refCountDelay = refCountDelay;\n\nvar _rxjs = require(\"rxjs\");\n\n// Copyright 2017-2020 @polkadot/rpc-core authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\nfunction refCountDelay(delay = 1750) {\n  return source => {\n    // state: 0 = disconnected, 1 = disconnecting, 2 = connecting, 3 = connected\n    let [state, refCount, connection, scheduler] = [0, 0, _rxjs.Subscription.EMPTY, _rxjs.Subscription.EMPTY];\n    return new _rxjs.Observable(ob => {\n      source.subscribe(ob);\n\n      if (refCount++ === 0) {\n        if (state === 1) {\n          scheduler.unsubscribe();\n        } else {\n          connection = source.connect();\n        }\n\n        state = 3;\n      }\n\n      return () => {\n        if (--refCount === 0) {\n          if (state === 2) {\n            state = 0;\n            scheduler.unsubscribe();\n          } else {\n            // state === 3\n            state = 1;\n            scheduler = _rxjs.asapScheduler.schedule(() => {\n              state = 0;\n              connection.unsubscribe();\n            }, delay);\n          }\n        }\n      };\n    });\n  };\n}"]},"metadata":{},"sourceType":"script"}