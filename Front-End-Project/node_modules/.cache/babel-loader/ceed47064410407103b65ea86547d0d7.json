{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.preimage = preimage;\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\");\n\nvar _util2 = require(\"./util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction preimage(instanceId, api) {\n  return (0, _util.memo)(instanceId, function (hash) {\n    return api.query.democracy.preimages(hash).pipe((0, _operators.map)(function (imageOpt) {\n      return (0, _util2.parseImage)(api, imageOpt);\n    }));\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/democracy/preimage.js"],"names":["Object","defineProperty","exports","value","preimage","_operators","require","_util","_util2","instanceId","api","memo","hash","query","democracy","preimages","pipe","map","imageOpt","parseImage"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,QAAR,GAAmBA,QAAnB;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,gBAAD,CAAxB;;AAEA,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAAnB;;AAEA,IAAIE,MAAM,GAAGF,OAAO,CAAC,QAAD,CAApB,C,CAEA;AACA;;;AACA,SAASF,QAAT,CAAkBK,UAAlB,EAA8BC,GAA9B,EAAmC;AACjC,SAAO,CAAC,GAAGH,KAAK,CAACI,IAAV,EAAgBF,UAAhB,EAA4B,UAAAG,IAAI;AAAA,WAAIF,GAAG,CAACG,KAAJ,CAAUC,SAAV,CAAoBC,SAApB,CAA8BH,IAA9B,EAAoCI,IAApC,CAAyC,CAAC,GAAGX,UAAU,CAACY,GAAf,EAAoB,UAAAC,QAAQ;AAAA,aAAI,CAAC,GAAGV,MAAM,CAACW,UAAX,EAAuBT,GAAvB,EAA4BQ,QAA5B,CAAJ;AAAA,KAA5B,CAAzC,CAAJ;AAAA,GAAhC,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.preimage = preimage;\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\");\n\nvar _util2 = require(\"./util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction preimage(instanceId, api) {\n  return (0, _util.memo)(instanceId, hash => api.query.democracy.preimages(hash).pipe((0, _operators.map)(imageOpt => (0, _util2.parseImage)(api, imageOpt))));\n}"]},"metadata":{},"sourceType":"script"}