{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _Struct = _interopRequireDefault(require(\"../../codec/Struct\"));\n\nvar _constants = require(\"../constants\");\n\nvar _ExtrinsicPayload = _interopRequireDefault(require(\"./ExtrinsicPayload\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/**\n * @name GenericExtrinsicSignatureV4\n * @description\n * A container for the [[Signature]] associated with a specific [[Extrinsic]]\n */\n\n\nvar ExtrinsicSignatureV4 = /*#__PURE__*/function (_Struct$default) {\n  _inherits(ExtrinsicSignatureV4, _Struct$default);\n\n  var _super = _createSuper(ExtrinsicSignatureV4);\n\n  function ExtrinsicSignatureV4(registry, value) {\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        isSigned = _ref.isSigned;\n\n    _classCallCheck(this, ExtrinsicSignatureV4);\n\n    return _super.call(this, registry, _objectSpread({\n      signer: 'Address',\n      // eslint-disable-next-line sort-keys\n      signature: 'MultiSignature'\n    }, registry.getSignedExtensionTypes()), ExtrinsicSignatureV4.decodeExtrinsicSignature(value, isSigned));\n  }\n  /** @internal */\n\n\n  _createClass(ExtrinsicSignatureV4, [{\n    key: \"_injectSignature\",\n    value: function _injectSignature(signer, signature, _ref2) {\n      var era = _ref2.era,\n          nonce = _ref2.nonce,\n          tip = _ref2.tip;\n      this.set('era', era);\n      this.set('nonce', nonce);\n      this.set('signer', signer);\n      this.set('signature', signature);\n      this.set('tip', tip);\n      return this;\n    }\n    /**\n     * @description Adds a raw signature\n     */\n\n  }, {\n    key: \"addSignature\",\n    value: function addSignature(signer, signature, payload) {\n      return this._injectSignature(this.registry.createType('Address', signer), this.registry.createType('MultiSignature', signature), new _ExtrinsicPayload.default(this.registry, payload));\n    }\n    /**\n     * @description Creates a payload from the supplied options\n     */\n\n  }, {\n    key: \"createPayload\",\n    value: function createPayload(method, _ref3) {\n      var blockHash = _ref3.blockHash,\n          era = _ref3.era,\n          genesisHash = _ref3.genesisHash,\n          nonce = _ref3.nonce,\n          _ref3$runtimeVersion = _ref3.runtimeVersion,\n          specVersion = _ref3$runtimeVersion.specVersion,\n          transactionVersion = _ref3$runtimeVersion.transactionVersion,\n          tip = _ref3.tip;\n      return new _ExtrinsicPayload.default(this.registry, {\n        blockHash: blockHash,\n        era: era || _constants.IMMORTAL_ERA,\n        genesisHash: genesisHash,\n        method: method.toHex(),\n        nonce: nonce,\n        specVersion: specVersion,\n        tip: tip || 0,\n        transactionVersion: transactionVersion || 0\n      });\n    }\n    /**\n     * @description Generate a payload and applies the signature from a keypair\n     */\n\n  }, {\n    key: \"sign\",\n    value: function sign(method, account, options) {\n      var signer = this.registry.createType('Address', account.addressRaw);\n      var payload = this.createPayload(method, options);\n      var signature = this.registry.createType('MultiSignature', payload.sign(account));\n      return this._injectSignature(signer, signature, payload);\n    }\n    /**\n     * @description Generate a payload and applies a fake signature\n     */\n\n  }, {\n    key: \"signFake\",\n    value: function signFake(method, address, options) {\n      var signer = this.registry.createType('Address', address);\n      var payload = this.createPayload(method, options);\n      var signature = this.registry.createType('MultiSignature', (0, _util.u8aConcat)(new Uint8Array([1]), new Uint8Array(64).fill(0x42)));\n      return this._injectSignature(signer, signature, payload);\n    }\n    /**\n     * @description Encodes the value as a Uint8Array as per the SCALE specifications\n     * @param isBare true when the value has none of the type-specific prefixes (internal)\n     */\n\n  }, {\n    key: \"toU8a\",\n    value: function toU8a(isBare) {\n      return this.isSigned ? _get(_getPrototypeOf(ExtrinsicSignatureV4.prototype), \"toU8a\", this).call(this, isBare) : _constants.EMPTY_U8A;\n    }\n  }, {\n    key: \"encodedLength\",\n\n    /**\n     * @description The length of the value when encoded as a Uint8Array\n     */\n    get: function get() {\n      return this.isSigned ? _get(_getPrototypeOf(ExtrinsicSignatureV4.prototype), \"encodedLength\", this) : 0;\n    }\n    /**\n     * @description `true` if the signature is valid\n     */\n\n  }, {\n    key: \"isSigned\",\n    get: function get() {\n      return !this.signature.isEmpty;\n    }\n    /**\n     * @description The [[ExtrinsicEra]] (mortal or immortal) this signature applies to\n     */\n\n  }, {\n    key: \"era\",\n    get: function get() {\n      return this.get('era');\n    }\n    /**\n     * @description The [[Index]] for the signature\n     */\n\n  }, {\n    key: \"nonce\",\n    get: function get() {\n      return this.get('nonce');\n    }\n    /**\n     * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]\n     */\n\n  }, {\n    key: \"signature\",\n    get: function get() {\n      return this.multiSignature.value;\n    }\n    /**\n     * @description The raw [[MultiSignature]]\n     */\n\n  }, {\n    key: \"multiSignature\",\n    get: function get() {\n      return this.get('signature');\n    }\n    /**\n     * @description The [[Address]] that signed\n     */\n\n  }, {\n    key: \"signer\",\n    get: function get() {\n      return this.get('signer');\n    }\n    /**\n     * @description The [[Balance]] tip\n     */\n\n  }, {\n    key: \"tip\",\n    get: function get() {\n      return this.get('tip');\n    }\n  }], [{\n    key: \"decodeExtrinsicSignature\",\n    value: function decodeExtrinsicSignature(value) {\n      var isSigned = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!value) {\n        return _constants.EMPTY_U8A;\n      } else if (value instanceof ExtrinsicSignatureV4) {\n        return value;\n      }\n\n      return isSigned ? value : _constants.EMPTY_U8A;\n    }\n  }]);\n\n  return ExtrinsicSignatureV4;\n}(_Struct.default);\n\nexports.default = ExtrinsicSignatureV4;","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/types/extrinsic/v4/ExtrinsicSignature.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_defineProperty2","_util","_Struct","_constants","_ExtrinsicPayload","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","ExtrinsicSignatureV4","registry","isSigned","signer","signature","getSignedExtensionTypes","decodeExtrinsicSignature","era","nonce","tip","set","payload","_injectSignature","createType","method","blockHash","genesisHash","runtimeVersion","specVersion","transactionVersion","IMMORTAL_ERA","toHex","account","options","addressRaw","createPayload","sign","address","u8aConcat","Uint8Array","fill","isBare","EMPTY_U8A","isEmpty","get","multiSignature"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,gBAAgB,GAAGP,sBAAsB,CAACC,OAAO,CAAC,uCAAD,CAAR,CAA7C;;AAEA,IAAIO,KAAK,GAAGP,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIQ,OAAO,GAAGT,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAApC;;AAEA,IAAIS,UAAU,GAAGT,OAAO,CAAC,cAAD,CAAxB;;AAEA,IAAIU,iBAAiB,GAAGX,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAA9C;;AAEA,SAASW,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGb,MAAM,CAACa,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIX,MAAM,CAACc,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGf,MAAM,CAACc,qBAAP,CAA6BH,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBG,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOjB,MAAM,CAACkB,wBAAP,CAAgCP,MAAhC,EAAwCM,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAV;AAA8GN,IAAAA,IAAI,CAACO,IAAL,CAAUC,KAAV,CAAgBR,IAAhB,EAAsBE,OAAtB;AAAiC;;AAAC,SAAOF,IAAP;AAAc;;AAErV,SAASS,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEd,MAAAA,OAAO,CAACV,MAAM,CAAC2B,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAE,SAAC,GAAGxB,gBAAgB,CAACD,OAArB,EAA8BmB,MAA9B,EAAsCM,GAAtC,EAA2CF,MAAM,CAACE,GAAD,CAAjD;AAA0D,OAAjH;AAAqH,KAAlI,MAAwI,IAAI7B,MAAM,CAAC8B,yBAAX,EAAsC;AAAE9B,MAAAA,MAAM,CAAC+B,gBAAP,CAAwBR,MAAxB,EAAgCvB,MAAM,CAAC8B,yBAAP,CAAiCH,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAEjB,MAAAA,OAAO,CAACV,MAAM,CAAC2B,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAE7B,QAAAA,MAAM,CAACC,cAAP,CAAsBsB,MAAtB,EAA8BM,GAA9B,EAAmC7B,MAAM,CAACkB,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB;AAEpiB;AACA;AACA;AACA;AACA;;;IACMS,oB;;;;;AACJ,gCAAYC,QAAZ,EAAsB9B,KAAtB,EAEQ;AAAA,mFAAJ,EAAI;AAAA,QADN+B,QACM,QADNA,QACM;;AAAA;;AAAA,6BACAD,QADA,EACUX,aAAa,CAAC;AAC5Ba,MAAAA,MAAM,EAAE,SADoB;AAE5B;AACAC,MAAAA,SAAS,EAAE;AAHiB,KAAD,EAI1BH,QAAQ,CAACI,uBAAT,EAJ0B,CADvB,EAKkCL,oBAAoB,CAACM,wBAArB,CAA8CnC,KAA9C,EAAqD+B,QAArD,CALlC;AAMP;AACD;;;;;qCA6EiBC,M,EAAQC,S,SAItB;AAAA,UAHDG,GAGC,SAHDA,GAGC;AAAA,UAFDC,KAEC,SAFDA,KAEC;AAAA,UADDC,GACC,SADDA,GACC;AACD,WAAKC,GAAL,CAAS,KAAT,EAAgBH,GAAhB;AACA,WAAKG,GAAL,CAAS,OAAT,EAAkBF,KAAlB;AACA,WAAKE,GAAL,CAAS,QAAT,EAAmBP,MAAnB;AACA,WAAKO,GAAL,CAAS,WAAT,EAAsBN,SAAtB;AACA,WAAKM,GAAL,CAAS,KAAT,EAAgBD,GAAhB;AACA,aAAO,IAAP;AACD;AACD;AACF;AACA;;;;iCAGeN,M,EAAQC,S,EAAWO,O,EAAS;AACvC,aAAO,KAAKC,gBAAL,CAAsB,KAAKX,QAAL,CAAcY,UAAd,CAAyB,SAAzB,EAAoCV,MAApC,CAAtB,EAAmE,KAAKF,QAAL,CAAcY,UAAd,CAAyB,gBAAzB,EAA2CT,SAA3C,CAAnE,EAA0H,IAAI3B,iBAAiB,CAACL,OAAtB,CAA8B,KAAK6B,QAAnC,EAA6CU,OAA7C,CAA1H,CAAP;AACD;AACD;AACF;AACA;;;;kCAGgBG,M,SAUX;AAAA,UATDC,SASC,SATDA,SASC;AAAA,UARDR,GAQC,SARDA,GAQC;AAAA,UAPDS,WAOC,SAPDA,WAOC;AAAA,UANDR,KAMC,SANDA,KAMC;AAAA,uCALDS,cAKC;AAAA,UAJCC,WAID,wBAJCA,WAID;AAAA,UAHCC,kBAGD,wBAHCA,kBAGD;AAAA,UADDV,GACC,SADDA,GACC;AACD,aAAO,IAAIhC,iBAAiB,CAACL,OAAtB,CAA8B,KAAK6B,QAAnC,EAA6C;AAClDc,QAAAA,SAAS,EAATA,SADkD;AAElDR,QAAAA,GAAG,EAAEA,GAAG,IAAI/B,UAAU,CAAC4C,YAF2B;AAGlDJ,QAAAA,WAAW,EAAXA,WAHkD;AAIlDF,QAAAA,MAAM,EAAEA,MAAM,CAACO,KAAP,EAJ0C;AAKlDb,QAAAA,KAAK,EAALA,KALkD;AAMlDU,QAAAA,WAAW,EAAXA,WANkD;AAOlDT,QAAAA,GAAG,EAAEA,GAAG,IAAI,CAPsC;AAQlDU,QAAAA,kBAAkB,EAAEA,kBAAkB,IAAI;AARQ,OAA7C,CAAP;AAUD;AACD;AACF;AACA;;;;yBAGOL,M,EAAQQ,O,EAASC,O,EAAS;AAC7B,UAAMpB,MAAM,GAAG,KAAKF,QAAL,CAAcY,UAAd,CAAyB,SAAzB,EAAoCS,OAAO,CAACE,UAA5C,CAAf;AACA,UAAMb,OAAO,GAAG,KAAKc,aAAL,CAAmBX,MAAnB,EAA2BS,OAA3B,CAAhB;AACA,UAAMnB,SAAS,GAAG,KAAKH,QAAL,CAAcY,UAAd,CAAyB,gBAAzB,EAA2CF,OAAO,CAACe,IAAR,CAAaJ,OAAb,CAA3C,CAAlB;AACA,aAAO,KAAKV,gBAAL,CAAsBT,MAAtB,EAA8BC,SAA9B,EAAyCO,OAAzC,CAAP;AACD;AACD;AACF;AACA;;;;6BAGWG,M,EAAQa,O,EAASJ,O,EAAS;AACjC,UAAMpB,MAAM,GAAG,KAAKF,QAAL,CAAcY,UAAd,CAAyB,SAAzB,EAAoCc,OAApC,CAAf;AACA,UAAMhB,OAAO,GAAG,KAAKc,aAAL,CAAmBX,MAAnB,EAA2BS,OAA3B,CAAhB;AACA,UAAMnB,SAAS,GAAG,KAAKH,QAAL,CAAcY,UAAd,CAAyB,gBAAzB,EAA2C,CAAC,GAAGvC,KAAK,CAACsD,SAAV,EAAqB,IAAIC,UAAJ,CAAe,CAAC,CAAD,CAAf,CAArB,EAA0C,IAAIA,UAAJ,CAAe,EAAf,EAAmBC,IAAnB,CAAwB,IAAxB,CAA1C,CAA3C,CAAlB;AACA,aAAO,KAAKlB,gBAAL,CAAsBT,MAAtB,EAA8BC,SAA9B,EAAyCO,OAAzC,CAAP;AACD;AACD;AACF;AACA;AACA;;;;0BAGQoB,M,EAAQ;AACZ,aAAO,KAAK7B,QAAL,mFAA4B6B,MAA5B,IAAsCvD,UAAU,CAACwD,SAAxD;AACD;;;;AA9ID;AACF;AACA;wBAGsB;AAClB,aAAO,KAAK9B,QAAL,kFAAsC,CAA7C;AACD;AACD;AACF;AACA;;;;wBAGiB;AACb,aAAO,CAAC,KAAKE,SAAL,CAAe6B,OAAvB;AACD;AACD;AACF;AACA;;;;wBAGY;AACR,aAAO,KAAKC,GAAL,CAAS,KAAT,CAAP;AACD;AACD;AACF;AACA;;;;wBAGc;AACV,aAAO,KAAKA,GAAL,CAAS,OAAT,CAAP;AACD;AACD;AACF;AACA;;;;wBAGkB;AACd,aAAO,KAAKC,cAAL,CAAoBhE,KAA3B;AACD;AACD;AACF;AACA;;;;wBAGuB;AACnB,aAAO,KAAK+D,GAAL,CAAS,WAAT,CAAP;AACD;AACD;AACF;AACA;;;;wBAGe;AACX,aAAO,KAAKA,GAAL,CAAS,QAAT,CAAP;AACD;AACD;AACF;AACA;;;;wBAGY;AACR,aAAO,KAAKA,GAAL,CAAS,KAAT,CAAP;AACD;;;6CAxE+B/D,K,EAAyB;AAAA,UAAlB+B,QAAkB,uEAAP,KAAO;;AACvD,UAAI,CAAC/B,KAAL,EAAY;AACV,eAAOK,UAAU,CAACwD,SAAlB;AACD,OAFD,MAEO,IAAI7D,KAAK,YAAY6B,oBAArB,EAA2C;AAChD,eAAO7B,KAAP;AACD;;AAED,aAAO+B,QAAQ,GAAG/B,KAAH,GAAWK,UAAU,CAACwD,SAArC;AACD;;;;EArBgCzD,OAAO,CAACH,O;;AAwK3CF,OAAO,CAACE,OAAR,GAAkB4B,oBAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _Struct = _interopRequireDefault(require(\"../../codec/Struct\"));\n\nvar _constants = require(\"../constants\");\n\nvar _ExtrinsicPayload = _interopRequireDefault(require(\"./ExtrinsicPayload\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * @name GenericExtrinsicSignatureV4\n * @description\n * A container for the [[Signature]] associated with a specific [[Extrinsic]]\n */\nclass ExtrinsicSignatureV4 extends _Struct.default {\n  constructor(registry, value, {\n    isSigned\n  } = {}) {\n    super(registry, _objectSpread({\n      signer: 'Address',\n      // eslint-disable-next-line sort-keys\n      signature: 'MultiSignature'\n    }, registry.getSignedExtensionTypes()), ExtrinsicSignatureV4.decodeExtrinsicSignature(value, isSigned));\n  }\n  /** @internal */\n\n\n  static decodeExtrinsicSignature(value, isSigned = false) {\n    if (!value) {\n      return _constants.EMPTY_U8A;\n    } else if (value instanceof ExtrinsicSignatureV4) {\n      return value;\n    }\n\n    return isSigned ? value : _constants.EMPTY_U8A;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.isSigned ? super.encodedLength : 0;\n  }\n  /**\n   * @description `true` if the signature is valid\n   */\n\n\n  get isSigned() {\n    return !this.signature.isEmpty;\n  }\n  /**\n   * @description The [[ExtrinsicEra]] (mortal or immortal) this signature applies to\n   */\n\n\n  get era() {\n    return this.get('era');\n  }\n  /**\n   * @description The [[Index]] for the signature\n   */\n\n\n  get nonce() {\n    return this.get('nonce');\n  }\n  /**\n   * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]\n   */\n\n\n  get signature() {\n    return this.multiSignature.value;\n  }\n  /**\n   * @description The raw [[MultiSignature]]\n   */\n\n\n  get multiSignature() {\n    return this.get('signature');\n  }\n  /**\n   * @description The [[Address]] that signed\n   */\n\n\n  get signer() {\n    return this.get('signer');\n  }\n  /**\n   * @description The [[Balance]] tip\n   */\n\n\n  get tip() {\n    return this.get('tip');\n  }\n\n  _injectSignature(signer, signature, {\n    era,\n    nonce,\n    tip\n  }) {\n    this.set('era', era);\n    this.set('nonce', nonce);\n    this.set('signer', signer);\n    this.set('signature', signature);\n    this.set('tip', tip);\n    return this;\n  }\n  /**\n   * @description Adds a raw signature\n   */\n\n\n  addSignature(signer, signature, payload) {\n    return this._injectSignature(this.registry.createType('Address', signer), this.registry.createType('MultiSignature', signature), new _ExtrinsicPayload.default(this.registry, payload));\n  }\n  /**\n   * @description Creates a payload from the supplied options\n   */\n\n\n  createPayload(method, {\n    blockHash,\n    era,\n    genesisHash,\n    nonce,\n    runtimeVersion: {\n      specVersion,\n      transactionVersion\n    },\n    tip\n  }) {\n    return new _ExtrinsicPayload.default(this.registry, {\n      blockHash,\n      era: era || _constants.IMMORTAL_ERA,\n      genesisHash,\n      method: method.toHex(),\n      nonce,\n      specVersion,\n      tip: tip || 0,\n      transactionVersion: transactionVersion || 0\n    });\n  }\n  /**\n   * @description Generate a payload and applies the signature from a keypair\n   */\n\n\n  sign(method, account, options) {\n    const signer = this.registry.createType('Address', account.addressRaw);\n    const payload = this.createPayload(method, options);\n    const signature = this.registry.createType('MultiSignature', payload.sign(account));\n    return this._injectSignature(signer, signature, payload);\n  }\n  /**\n   * @description Generate a payload and applies a fake signature\n   */\n\n\n  signFake(method, address, options) {\n    const signer = this.registry.createType('Address', address);\n    const payload = this.createPayload(method, options);\n    const signature = this.registry.createType('MultiSignature', (0, _util.u8aConcat)(new Uint8Array([1]), new Uint8Array(64).fill(0x42)));\n    return this._injectSignature(signer, signature, payload);\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return this.isSigned ? super.toU8a(isBare) : _constants.EMPTY_U8A;\n  }\n\n}\n\nexports.default = ExtrinsicSignatureV4;"]},"metadata":{},"sourceType":"script"}