{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _utilCrypto = require(\"@polkadot/util-crypto\");\n\nvar _Enum = _interopRequireDefault(require(\"../codec/Enum\")); // Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nvar MultiAddress = /*#__PURE__*/function (_Enum$default) {\n  _inherits(MultiAddress, _Enum$default);\n\n  var _super = _createSuper(MultiAddress);\n\n  function MultiAddress(registry, value) {\n    _classCallCheck(this, MultiAddress);\n\n    return _super.call(this, registry, {\n      Id: 'AccountId',\n      Index: 'Compact<AccountIndex>',\n      Raw: 'Bytes',\n      // eslint-disable-next-line sort-keys\n      Address32: 'H256',\n      // eslint-disable-next-line sort-keys\n      Address20: 'H160'\n    }, MultiAddress._decodeMultiAddress(value));\n  }\n\n  _createClass(MultiAddress, [{\n    key: \"toString\",\n\n    /**\n     * @description Returns the string representation of the value\n     */\n    value: function toString() {\n      return this.value.toString();\n    }\n  }], [{\n    key: \"_decodeMultiAddress\",\n    value: function _decodeMultiAddress(value) {\n      if ((0, _util.isString)(value)) {\n        try {\n          var u8a = (0, _utilCrypto.decodeAddress)(value.toString());\n          return (0, _util.u8aConcat)(new Uint8Array(u8a.length <= 8 ? 1 : 0), u8a);\n        } catch (error) {// ignore, not a valid ss58 address\n        }\n      }\n\n      return value;\n    }\n  }]);\n\n  return MultiAddress;\n}(_Enum.default);\n\nexports.default = MultiAddress;","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/types/generic/MultiAddress.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_util","_utilCrypto","_Enum","MultiAddress","registry","Id","Index","Raw","Address32","Address20","_decodeMultiAddress","toString","isString","u8a","decodeAddress","u8aConcat","Uint8Array","length","error"],"mappings":"AAAA;;;;;;;;;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,KAAK,GAAGN,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIO,WAAW,GAAGP,OAAO,CAAC,uBAAD,CAAzB;;AAEA,IAAIQ,KAAK,GAAGT,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAAlC,C,CAEA;AACA;;;IACMS,Y;;;;;AACJ,wBAAYC,QAAZ,EAAsBN,KAAtB,EAA6B;AAAA;;AAAA,6BACrBM,QADqB,EACX;AACdC,MAAAA,EAAE,EAAE,WADU;AAEdC,MAAAA,KAAK,EAAE,uBAFO;AAGdC,MAAAA,GAAG,EAAE,OAHS;AAId;AACAC,MAAAA,SAAS,EAAE,MALG;AAMd;AACAC,MAAAA,SAAS,EAAE;AAPG,KADW,EASxBN,YAAY,CAACO,mBAAb,CAAiCZ,KAAjC,CATwB;AAU5B;;;;;AAaD;AACF;AACA;+BAGa;AACT,aAAO,KAAKA,KAAL,CAAWa,QAAX,EAAP;AACD;;;wCAlB0Bb,K,EAAO;AAChC,UAAI,CAAC,GAAGE,KAAK,CAACY,QAAV,EAAoBd,KAApB,CAAJ,EAAgC;AAC9B,YAAI;AACF,cAAMe,GAAG,GAAG,CAAC,GAAGZ,WAAW,CAACa,aAAhB,EAA+BhB,KAAK,CAACa,QAAN,EAA/B,CAAZ;AACA,iBAAO,CAAC,GAAGX,KAAK,CAACe,SAAV,EAAqB,IAAIC,UAAJ,CAAeH,GAAG,CAACI,MAAJ,IAAc,CAAd,GAAkB,CAAlB,GAAsB,CAArC,CAArB,EAA8DJ,GAA9D,CAAP;AACD,SAHD,CAGE,OAAOK,KAAP,EAAc,CAAC;AAChB;AACF;;AAED,aAAOpB,KAAP;AACD;;;;EAvBwBI,KAAK,CAACH,O;;AAmCjCF,OAAO,CAACE,OAAR,GAAkBI,YAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _utilCrypto = require(\"@polkadot/util-crypto\");\n\nvar _Enum = _interopRequireDefault(require(\"../codec/Enum\"));\n\n// Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nclass MultiAddress extends _Enum.default {\n  constructor(registry, value) {\n    super(registry, {\n      Id: 'AccountId',\n      Index: 'Compact<AccountIndex>',\n      Raw: 'Bytes',\n      // eslint-disable-next-line sort-keys\n      Address32: 'H256',\n      // eslint-disable-next-line sort-keys\n      Address20: 'H160'\n    }, MultiAddress._decodeMultiAddress(value));\n  }\n\n  static _decodeMultiAddress(value) {\n    if ((0, _util.isString)(value)) {\n      try {\n        const u8a = (0, _utilCrypto.decodeAddress)(value.toString());\n        return (0, _util.u8aConcat)(new Uint8Array(u8a.length <= 8 ? 1 : 0), u8a);\n      } catch (error) {// ignore, not a valid ss58 address\n      }\n    }\n\n    return value;\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return this.value.toString();\n  }\n\n}\n\nexports.default = MultiAddress;"]},"metadata":{},"sourceType":"script"}