{"ast":null,"code":"var _regeneratorRuntime = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\n// Copyright 2019-2020 @polkadot/wasm-crypto authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\nvar pkg = require('./package.json');\n\nvar asm = require('./wasm_asm_stub');\n\nvar bytes = require('./wasm_wasm');\n\nvar imports = require('./wasm');\n\nmodule.exports = /*#__PURE__*/function () {\n  var _createExportPromise = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _yield$WebAssembly$in, instance;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return WebAssembly.instantiate(bytes, {\n              __wbindgen_placeholder__: imports\n            });\n\n          case 3:\n            _yield$WebAssembly$in = _context.sent;\n            instance = _yield$WebAssembly$in.instance;\n            return _context.abrupt(\"return\", instance.exports);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n\n            if (!(asm && asm.ext_blake2b)) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", asm);\n\n          case 12:\n            console.error(\"ERROR: Unable to initialize \".concat(pkg.name, \" \").concat(pkg.version));\n            console.error(_context.t0);\n            return _context.abrupt(\"return\", null);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  function createExportPromise() {\n    return _createExportPromise.apply(this, arguments);\n  }\n\n  return createExportPromise;\n}();","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/wasm-crypto/wasm_promise.js"],"names":["pkg","require","asm","bytes","imports","module","exports","WebAssembly","instantiate","__wbindgen_placeholder__","instance","ext_blake2b","console","error","name","version","createExportPromise"],"mappings":";;;;AAAA;AACA;AACA;AAEA,IAAMA,GAAG,GAAGC,OAAO,CAAC,gBAAD,CAAnB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,iBAAD,CAAnB;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,aAAD,CAArB;;AACA,IAAMG,OAAO,GAAGH,OAAO,CAAC,QAAD,CAAvB;;AAEAI,MAAM,CAACC,OAAP;AAAA,sFAAiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEcC,WAAW,CAACC,WAAZ,CAAwBL,KAAxB,EAA+B;AAAEM,cAAAA,wBAAwB,EAAEL;AAA5B,aAA/B,CAFd;;AAAA;AAAA;AAELM,YAAAA,QAFK,yBAELA,QAFK;AAAA,6CAINA,QAAQ,CAACJ,OAJH;;AAAA;AAAA;AAAA;;AAAA,kBAOTJ,GAAG,IAAIA,GAAG,CAACS,WAPF;AAAA;AAAA;AAAA;;AAAA,6CAQJT,GARI;;AAAA;AAWbU,YAAAA,OAAO,CAACC,KAAR,uCAA6Cb,GAAG,CAACc,IAAjD,cAAyDd,GAAG,CAACe,OAA7D;AACAH,YAAAA,OAAO,CAACC,KAAR;AAZa,6CAcN,IAdM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA,WAAgCG,mBAAhC;AAAA;AAAA;;AAAA,SAAgCA,mBAAhC;AAAA","sourcesContent":["// Copyright 2019-2020 @polkadot/wasm-crypto authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nconst pkg = require('./package.json');\nconst asm = require('./wasm_asm_stub');\nconst bytes = require('./wasm_wasm');\nconst imports = require('./wasm');\n\nmodule.exports = async function createExportPromise () {\n  try {\n    const { instance } = await WebAssembly.instantiate(bytes, { __wbindgen_placeholder__: imports });\n\n    return instance.exports;\n  } catch (error) {\n    // if we have a valid supplied asm.js, return that\n    if (asm && asm.ext_blake2b) {\n      return asm;\n    }\n\n    console.error(`ERROR: Unable to initialize ${pkg.name} ${pkg.version}`);\n    console.error(error);\n\n    return null;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}