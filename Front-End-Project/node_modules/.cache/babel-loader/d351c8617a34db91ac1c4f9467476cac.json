{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/src/BlockInfo.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Card, Grid } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main(props) {\n  const {\n    api\n  } = useSubstrate();\n  const {\n    finalized\n  } = props;\n  const [lastBlockHeader, setLastBlockHeader] = useState(null);\n  useEffect(() => {\n    let unsubscribeAll = null; // make a call to retrieve the current network head\n\n    api.rpc.chain.subscribeNewHeads(header => {\n      console.log(`Chain is at #${header}`);\n      setLastBlockHeader(header);\n    }).then(unsub => {\n      unsubscribeAll = unsub;\n    }).catch(console.error);\n    return () => unsubscribeAll && unsubscribeAll();\n  }, []);\n  return /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, lastBlockHeader && /*#__PURE__*/React.createElement(Card, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Card.Content, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, 'Last Block number: ' + lastBlockHeader.number.toNumber()), /*#__PURE__*/React.createElement(Card.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, 'Hash ' + lastBlockHeader.hash.toHuman()), /*#__PURE__*/React.createElement(Card.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, 'Parent Hash ' + lastBlockHeader.parentHash.toHuman()))));\n}\n\nexport default function LastBlockInfos(props) {\n  const {\n    api\n  } = useSubstrate();\n  return api.rpc && api.rpc.chain && api.rpc.chain.subscribeNewHeads ? /*#__PURE__*/React.createElement(Main, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })) : null;\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/src/BlockInfo.js"],"names":["React","useEffect","useState","Card","Grid","useSubstrate","Main","props","api","finalized","lastBlockHeader","setLastBlockHeader","unsubscribeAll","rpc","chain","subscribeNewHeads","header","console","log","then","unsub","catch","error","number","toNumber","hash","toHuman","parentHash","LastBlockInfos"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,IAAR,EAAcC,IAAd,QAAyB,mBAAzB;AAEA,SAAQC,YAAR,QAA2B,iBAA3B;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,QAAM;AAACC,IAAAA;AAAD,MAAQH,YAAY,EAA1B;AACA,QAAM;AAACI,IAAAA;AAAD,MAAcF,KAApB;AACA,QAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,IAAD,CAAtD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,cAAc,GAAG,IAArB,CADY,CAGZ;;AACAJ,IAAAA,GAAG,CAACK,GAAJ,CAAQC,KAAR,CAAcC,iBAAd,CAAiCC,MAAD,IAAY;AACxCC,MAAAA,OAAO,CAACC,GAAR,CAAa,gBAAeF,MAAO,EAAnC;AACAL,MAAAA,kBAAkB,CAACK,MAAD,CAAlB;AACH,KAHD,EAGGG,IAHH,CAGQC,KAAK,IAAI;AACbR,MAAAA,cAAc,GAAGQ,KAAjB;AACH,KALD,EAKGC,KALH,CAKSJ,OAAO,CAACK,KALjB;AAOA,WAAO,MAAMV,cAAc,IAAIA,cAAc,EAA7C;AACH,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,eAAe,iBAAI,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAChB,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,SAAS,EAAC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAc,wBAAwBA,eAAe,CAACa,MAAhB,CAAuBC,QAAvB,EAAtC,CADJ,eAEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAY,UAAUd,eAAe,CAACe,IAAhB,CAAqBC,OAArB,EAAtB,CAFJ,eAGI,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,iBAAiBhB,eAAe,CAACiB,UAAhB,CAA2BD,OAA3B,EADtB,CAHJ,CADgB,CADxB,CADJ;AAaH;;AAED,eAAe,SAASE,cAAT,CAAwBrB,KAAxB,EAA+B;AAC1C,QAAM;AAACC,IAAAA;AAAD,MAAQH,YAAY,EAA1B;AACA,SAAOG,GAAG,CAACK,GAAJ,IACPL,GAAG,CAACK,GAAJ,CAAQC,KADD,IAEPN,GAAG,CAACK,GAAJ,CAAQC,KAAR,CAAcC,iBAFP,gBAGH,oBAAC,IAAD,oBAAUR,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHG,GAIH,IAJJ;AAKH","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Card, Grid} from 'semantic-ui-react';\r\n\r\nimport {useSubstrate} from './substrate-lib';\r\n\r\nfunction Main(props) {\r\n    const {api} = useSubstrate();\r\n    const {finalized} = props;\r\n    const [lastBlockHeader, setLastBlockHeader] = useState(null);\r\n\r\n    useEffect(() => {\r\n        let unsubscribeAll = null;\r\n\r\n        // make a call to retrieve the current network head\r\n        api.rpc.chain.subscribeNewHeads((header) => {\r\n            console.log(`Chain is at #${header}`);\r\n            setLastBlockHeader(header);\r\n        }).then(unsub => {\r\n            unsubscribeAll = unsub;\r\n        }).catch(console.error);\r\n\r\n        return () => unsubscribeAll && unsubscribeAll();\r\n    }, []);\r\n\r\n    return (\r\n        <Grid.Column>\r\n            {lastBlockHeader && <Card fluid>\r\n                <Card.Content textAlign='center'>\r\n                    <Card.Header>{'Last Block number: ' + lastBlockHeader.number.toNumber()}</Card.Header>\r\n                    <Card.Meta>{'Hash ' + lastBlockHeader.hash.toHuman()}</Card.Meta>\r\n                    <Card.Description>\r\n                        {'Parent Hash ' + lastBlockHeader.parentHash.toHuman()}\r\n                    </Card.Description>\r\n                </Card.Content>\r\n            </Card>}\r\n        </Grid.Column>\r\n    );\r\n}\r\n\r\nexport default function LastBlockInfos(props) {\r\n    const {api} = useSubstrate();\r\n    return api.rpc &&\r\n    api.rpc.chain &&\r\n    api.rpc.chain.subscribeNewHeads  ? (\r\n        <Main {...props} />\r\n    ) : null;\r\n}"]},"metadata":{},"sourceType":"module"}