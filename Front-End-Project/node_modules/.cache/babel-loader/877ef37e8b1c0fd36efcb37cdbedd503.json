{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fees = fees;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// query via constants (current applicable path)\n\n\nfunction queryConstants(api) {\n  return (0, _rxjs.of)([// deprecated\n  api.consts.contracts.callBaseFee || api.registry.createType('Balance'), api.consts.contracts.contractFee || api.registry.createType('Balance'), api.consts.contracts.creationFee || api.registry.createType('Balance'), api.consts.contracts.transactionBaseFee || api.registry.createType('Balance'), api.consts.contracts.transactionByteFee || api.registry.createType('Balance'), api.consts.contracts.transferFee || api.registry.createType('Balance'), // current\n  api.consts.contracts.rentByteFee, api.consts.contracts.rentDepositOffset, api.consts.contracts.surchargeReward, api.consts.contracts.tombstoneDeposit]);\n}\n/**\n * @name fees\n * @returns An object containing the combined results of the queries for\n * all relevant contract fees as declared in the substrate chain spec.\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.contracts.fees(([creationFee, transferFee]) => {\n *   console.log(`The fee for creating a new contract on this chain is ${creationFee} units. The fee required to call this contract is ${transferFee} units.`);\n * });\n * ```\n */\n\n\nfunction fees(instanceId, api) {\n  return (0, _util.memo)(instanceId, function () {\n    return queryConstants(api).pipe((0, _operators.map)(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 10),\n          callBaseFee = _ref2[0],\n          contractFee = _ref2[1],\n          creationFee = _ref2[2],\n          transactionBaseFee = _ref2[3],\n          transactionByteFee = _ref2[4],\n          transferFee = _ref2[5],\n          rentByteFee = _ref2[6],\n          rentDepositOffset = _ref2[7],\n          surchargeReward = _ref2[8],\n          tombstoneDeposit = _ref2[9];\n\n      return {\n        callBaseFee: callBaseFee,\n        contractFee: contractFee,\n        creationFee: creationFee,\n        rentByteFee: rentByteFee,\n        rentDepositOffset: rentDepositOffset,\n        surchargeReward: surchargeReward,\n        tombstoneDeposit: tombstoneDeposit,\n        transactionBaseFee: transactionBaseFee,\n        transactionByteFee: transactionByteFee,\n        transferFee: transferFee\n      };\n    }));\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/contracts/fees.js"],"names":["Object","defineProperty","exports","value","fees","_rxjs","require","_operators","_util","queryConstants","api","of","consts","contracts","callBaseFee","registry","createType","contractFee","creationFee","transactionBaseFee","transactionByteFee","transferFee","rentByteFee","rentDepositOffset","surchargeReward","tombstoneDeposit","instanceId","memo","pipe","map"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fees = fees;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// query via constants (current applicable path)\nfunction queryConstants(api) {\n  return (0, _rxjs.of)([// deprecated\n  api.consts.contracts.callBaseFee || api.registry.createType('Balance'), api.consts.contracts.contractFee || api.registry.createType('Balance'), api.consts.contracts.creationFee || api.registry.createType('Balance'), api.consts.contracts.transactionBaseFee || api.registry.createType('Balance'), api.consts.contracts.transactionByteFee || api.registry.createType('Balance'), api.consts.contracts.transferFee || api.registry.createType('Balance'), // current\n  api.consts.contracts.rentByteFee, api.consts.contracts.rentDepositOffset, api.consts.contracts.surchargeReward, api.consts.contracts.tombstoneDeposit]);\n}\n/**\n * @name fees\n * @returns An object containing the combined results of the queries for\n * all relevant contract fees as declared in the substrate chain spec.\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.contracts.fees(([creationFee, transferFee]) => {\n *   console.log(`The fee for creating a new contract on this chain is ${creationFee} units. The fee required to call this contract is ${transferFee} units.`);\n * });\n * ```\n */\n\n\nfunction fees(instanceId, api) {\n  return (0, _util.memo)(instanceId, () => {\n    return queryConstants(api).pipe((0, _operators.map)(([callBaseFee, contractFee, creationFee, transactionBaseFee, transactionByteFee, transferFee, rentByteFee, rentDepositOffset, surchargeReward, tombstoneDeposit]) => ({\n      callBaseFee,\n      contractFee,\n      creationFee,\n      rentByteFee,\n      rentDepositOffset,\n      surchargeReward,\n      tombstoneDeposit,\n      transactionBaseFee,\n      transactionByteFee,\n      transferFee\n    })));\n  });\n}"]},"metadata":{},"sourceType":"script"}