{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.indexes = indexes;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _util2 = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction isEraOpt(era) {\n  return (0, _util.isFunction)(era.unwrapOrDefault);\n} // parse into Indexes\n\n\nfunction parse(_ref) {\n  var _ref2 = _slicedToArray(_ref, 5),\n      activeEra = _ref2[0],\n      activeEraStart = _ref2[1],\n      currentEra = _ref2[2],\n      currentIndex = _ref2[3],\n      validatorCount = _ref2[4];\n\n  return {\n    activeEra: activeEra,\n    activeEraStart: activeEraStart,\n    currentEra: currentEra,\n    currentIndex: currentIndex,\n    validatorCount: validatorCount\n  };\n} // query for previous V2\n\n\nfunction queryNoActive(api) {\n  return api.queryMulti([api.query.staking.currentEra, api.query.session.currentIndex, api.query.staking.validatorCount]).pipe((0, _operators.map)(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 3),\n        currentEraOpt = _ref4[0],\n        currentIndex = _ref4[1],\n        validatorCount = _ref4[2];\n\n    var currentEra = isEraOpt(currentEraOpt) ? currentEraOpt.unwrapOrDefault() : currentEraOpt;\n    return parse([currentEra, api.registry.createType('Option<Moment>'), currentEra, currentIndex, validatorCount]);\n  }));\n} // query based on latest\n\n\nfunction query(api) {\n  return api.queryMulti([api.query.staking.activeEra, api.query.staking.currentEra, api.query.session.currentIndex, api.query.staking.validatorCount]).pipe((0, _operators.map)(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 4),\n        activeOpt = _ref6[0],\n        currentEra = _ref6[1],\n        currentIndex = _ref6[2],\n        validatorCount = _ref6[3];\n\n    var _activeOpt$unwrapOrDe = activeOpt.unwrapOrDefault(),\n        index = _activeOpt$unwrapOrDe.index,\n        start = _activeOpt$unwrapOrDe.start;\n\n    return parse([index, start, currentEra.unwrapOrDefault(), currentIndex, validatorCount]);\n  }));\n} // empty set when none is available\n\n\nfunction empty(api) {\n  return (0, _rxjs.of)(parse([api.registry.createType('EraIndex'), api.registry.createType('Option<Moment>'), api.registry.createType('EraIndex'), api.registry.createType('SessionIndex', 1), api.registry.createType('u32')]));\n}\n\nfunction indexes(instanceId, api) {\n  return (0, _util2.memo)(instanceId, function () {\n    return api.query.session && api.query.staking ? (0, _util.isFunction)(api.query.staking.activeEra) ? query(api) : queryNoActive(api) : empty(api);\n  });\n}","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/api-derive/session/indexes.js"],"names":["Object","defineProperty","exports","value","indexes","_rxjs","require","_operators","_util","_util2","isEraOpt","era","isFunction","unwrapOrDefault","parse","activeEra","activeEraStart","currentEra","currentIndex","validatorCount","queryNoActive","api","queryMulti","query","staking","session","pipe","map","currentEraOpt","registry","createType","activeOpt","index","start","empty","of","instanceId","memo"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.indexes = indexes;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _util2 = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction isEraOpt(era) {\n  return (0, _util.isFunction)(era.unwrapOrDefault);\n} // parse into Indexes\n\n\nfunction parse([activeEra, activeEraStart, currentEra, currentIndex, validatorCount]) {\n  return {\n    activeEra,\n    activeEraStart,\n    currentEra,\n    currentIndex,\n    validatorCount\n  };\n} // query for previous V2\n\n\nfunction queryNoActive(api) {\n  return api.queryMulti([api.query.staking.currentEra, api.query.session.currentIndex, api.query.staking.validatorCount]).pipe((0, _operators.map)(([currentEraOpt, currentIndex, validatorCount]) => {\n    const currentEra = isEraOpt(currentEraOpt) ? currentEraOpt.unwrapOrDefault() : currentEraOpt;\n    return parse([currentEra, api.registry.createType('Option<Moment>'), currentEra, currentIndex, validatorCount]);\n  }));\n} // query based on latest\n\n\nfunction query(api) {\n  return api.queryMulti([api.query.staking.activeEra, api.query.staking.currentEra, api.query.session.currentIndex, api.query.staking.validatorCount]).pipe((0, _operators.map)(([activeOpt, currentEra, currentIndex, validatorCount]) => {\n    const {\n      index,\n      start\n    } = activeOpt.unwrapOrDefault();\n    return parse([index, start, currentEra.unwrapOrDefault(), currentIndex, validatorCount]);\n  }));\n} // empty set when none is available\n\n\nfunction empty(api) {\n  return (0, _rxjs.of)(parse([api.registry.createType('EraIndex'), api.registry.createType('Option<Moment>'), api.registry.createType('EraIndex'), api.registry.createType('SessionIndex', 1), api.registry.createType('u32')]));\n}\n\nfunction indexes(instanceId, api) {\n  return (0, _util2.memo)(instanceId, () => api.query.session && api.query.staking ? (0, _util.isFunction)(api.query.staking.activeEra) ? query(api) : queryNoActive(api) : empty(api));\n}"]},"metadata":{},"sourceType":"script"}