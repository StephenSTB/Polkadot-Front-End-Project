{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _classCallCheck = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _get = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Keyring = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _pair = _interopRequireDefault(require(\"@polkadot/keyring/pair\"));\n\nvar _chains = _interopRequireDefault(require(\"@polkadot/ui-settings/defaults/chains\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _utilCrypto = require(\"@polkadot/util-crypto\");\n\nvar _development = _interopRequireDefault(require(\"./observable/development\"));\n\nvar _Base = _interopRequireDefault(require(\"./Base\"));\n\nvar _defaults = require(\"./defaults\");\n\nvar _options = _interopRequireDefault(require(\"./options\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar RECENT_EXPIRY = 24 * 60 * 60; // No accounts (or test accounts) should be loaded until after the chain determination.\n// Chain determination occurs outside of Keyring. Loading `keyring.loadAll({ type: 'ed25519' | 'sr25519' })` is triggered\n// from the API after the chain is received\n\nvar _stores = (0, _classPrivateFieldLooseKey2.default)(\"stores\");\n\nvar Keyring = /*#__PURE__*/function (_Base$default) {\n  _inherits(Keyring, _Base$default);\n\n  var _super = _createSuper(Keyring);\n\n  function Keyring() {\n    var _this;\n\n    _classCallCheck(this, Keyring);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    Object.defineProperty(_assertThisInitialized(_this), _stores, {\n      writable: true,\n      value: {\n        account: function account() {\n          return _this.accounts;\n        },\n        address: function address() {\n          return _this.addresses;\n        },\n        contract: function contract() {\n          return _this.contracts;\n        }\n      }\n    });\n    return _this;\n  }\n\n  _createClass(Keyring, [{\n    key: \"addExternal\",\n    value: function addExternal(address) {\n      var meta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var pair = this.keyring.addFromAddress(address, _objectSpread(_objectSpread({}, meta), {}, {\n        isExternal: true\n      }), null);\n      return {\n        json: this.saveAccount(pair),\n        pair: pair\n      };\n    }\n  }, {\n    key: \"addHardware\",\n    value: function addHardware(address, hardwareType) {\n      var meta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.addExternal(address, _objectSpread(_objectSpread({}, meta), {}, {\n        hardwareType: hardwareType,\n        isHardware: true\n      }));\n    }\n  }, {\n    key: \"addMultisig\",\n    value: function addMultisig(addresses, threshold) {\n      var _this2 = this;\n\n      var meta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var address = (0, _utilCrypto.createKeyMulti)(addresses, threshold); // we could use `sortAddresses`, but rather use internal encode/decode so we are 100%\n\n      var who = (0, _util.u8aSorted)(addresses.map(function (who) {\n        return _this2.decodeAddress(who);\n      })).map(function (who) {\n        return _this2.encodeAddress(who);\n      });\n      return this.addExternal(address, _objectSpread(_objectSpread({}, meta), {}, {\n        isMultisig: true,\n        threshold: (0, _util.bnToBn)(threshold).toNumber(),\n        who: who\n      }));\n    }\n  }, {\n    key: \"addPair\",\n    value: function addPair(pair, password) {\n      this.keyring.addPair(pair);\n      return {\n        json: this.saveAccount(pair, password),\n        pair: pair\n      };\n    }\n  }, {\n    key: \"addUri\",\n    value: function addUri(suri, password) {\n      var meta = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var type = arguments.length > 3 ? arguments[3] : undefined;\n      var pair = this.keyring.addFromUri(suri, meta, type);\n      return {\n        json: this.saveAccount(pair, password),\n        pair: pair\n      };\n    }\n  }, {\n    key: \"backupAccount\",\n    value: function backupAccount(pair, password) {\n      if (!pair.isLocked) {\n        pair.lock();\n      }\n\n      pair.decodePkcs8(password);\n      return pair.toJson(password);\n    }\n  }, {\n    key: \"createFromJson\",\n    value: function createFromJson(json) {\n      var meta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.keyring.createFromJson(_objectSpread(_objectSpread({}, json), {}, {\n        meta: _objectSpread(_objectSpread({}, json.meta || {}), {}, {\n          meta: meta\n        })\n      }));\n    }\n  }, {\n    key: \"createFromUri\",\n    value: function createFromUri(suri) {\n      var meta = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var type = arguments.length > 2 ? arguments[2] : undefined;\n      return this.keyring.createFromUri(suri, meta, type);\n    }\n  }, {\n    key: \"encryptAccount\",\n    value: function encryptAccount(pair, password) {\n      var json = pair.toJson(password);\n      json.meta.whenEdited = Date.now();\n      this.keyring.addFromJson(json);\n      this.accounts.add(this._store, pair.address, json);\n    }\n  }, {\n    key: \"forgetAccount\",\n    value: function forgetAccount(address) {\n      this.keyring.removePair(address);\n      this.accounts.remove(this._store, address);\n    }\n  }, {\n    key: \"forgetAddress\",\n    value: function forgetAddress(address) {\n      this.addresses.remove(this._store, address);\n    }\n  }, {\n    key: \"forgetContract\",\n    value: function forgetContract(address) {\n      this.contracts.remove(this._store, address);\n    }\n  }, {\n    key: \"getAccount\",\n    value: function getAccount(address) {\n      return this.getAddress(address, 'account');\n    }\n  }, {\n    key: \"getAccounts\",\n    value: function getAccounts() {\n      var _this3 = this;\n\n      var available = this.accounts.subject.getValue();\n      return Object.keys(available).map(function (address) {\n        return _this3.getAddress(address, 'account');\n      }).filter(function (account) {\n        return _development.default.isDevelopment() || account.meta.isTesting !== true;\n      });\n    }\n  }, {\n    key: \"getAddress\",\n    value: function getAddress(_address) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var address = (0, _util.isString)(_address) ? _address : this.encodeAddress(_address);\n      var publicKey = this.decodeAddress(address);\n      var stores = type ? [(0, _classPrivateFieldLooseBase2.default)(this, _stores)[_stores][type]] : Object.values((0, _classPrivateFieldLooseBase2.default)(this, _stores)[_stores]);\n      var info = stores.reduce(function (lastInfo, store) {\n        return store().subject.getValue()[address] || lastInfo;\n      }, undefined);\n      return info && {\n        address: address,\n        meta: info.json.meta,\n        publicKey: publicKey\n      };\n    }\n  }, {\n    key: \"getAddresses\",\n    value: function getAddresses() {\n      var _this4 = this;\n\n      var available = this.addresses.subject.getValue();\n      return Object.keys(available).map(function (address) {\n        return _this4.getAddress(address);\n      });\n    }\n  }, {\n    key: \"getContract\",\n    value: function getContract(address) {\n      return this.getAddress(address, 'contract');\n    }\n  }, {\n    key: \"getContracts\",\n    value: function getContracts() {\n      var _this5 = this;\n\n      var available = this.contracts.subject.getValue();\n      return Object.entries(available).filter(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            contract = _ref2[1].json.meta.contract;\n\n        return !!contract && contract.genesisHash === _this5.genesisHash;\n      }).map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            address = _ref4[0];\n\n        return _this5.getContract(address);\n      });\n    }\n  }, {\n    key: \"rewriteKey\",\n    value: function rewriteKey(json, key, hexAddr, creator) {\n      if (hexAddr.substr(0, 2) === '0x') {\n        return;\n      }\n\n      this._store.remove(key);\n\n      this._store.set(creator(hexAddr), json);\n    }\n  }, {\n    key: \"loadAccount\",\n    value: function loadAccount(json, key) {\n      if (!json.meta.isTesting && json.encoded) {\n        // FIXME Just for the transition period (ignoreChecksum)\n        var pair = this.keyring.addFromJson(json, true);\n        this.accounts.add(this._store, pair.address, json);\n      }\n\n      var _key$split = key.split(':'),\n          _key$split2 = _slicedToArray(_key$split, 2),\n          hexAddr = _key$split2[1];\n\n      this.rewriteKey(json, key, hexAddr.trim(), _defaults.accountKey);\n    }\n  }, {\n    key: \"loadAddress\",\n    value: function loadAddress(json, key) {\n      var _json$meta = json.meta,\n          isRecent = _json$meta.isRecent,\n          _json$meta$whenCreate = _json$meta.whenCreated,\n          whenCreated = _json$meta$whenCreate === void 0 ? 0 : _json$meta$whenCreate;\n\n      if (isRecent && Date.now() - whenCreated > RECENT_EXPIRY) {\n        this._store.remove(key);\n\n        return;\n      }\n\n      var address = this.encodeAddress((0, _util.isHex)(json.address) ? (0, _util.hexToU8a)(json.address) // FIXME Just for the transition period (ignoreChecksum)\n      : this.decodeAddress(json.address, true));\n\n      var _key$split3 = key.split(':'),\n          _key$split4 = _slicedToArray(_key$split3, 2),\n          hexAddr = _key$split4[1];\n\n      this.addresses.add(this._store, address, json);\n      this.rewriteKey(json, key, hexAddr, _defaults.addressKey);\n    }\n  }, {\n    key: \"loadContract\",\n    value: function loadContract(json, key) {\n      var address = this.encodeAddress(this.decodeAddress(json.address));\n\n      var _key$split5 = key.split(':'),\n          _key$split6 = _slicedToArray(_key$split5, 2),\n          hexAddr = _key$split6[1]; // move genesisHash to top-level (TODO Remove from contracts section?)\n\n\n      json.meta.genesisHash = json.meta.genesisHash || json.meta.contract && json.meta.contract.genesisHash;\n      this.contracts.add(this._store, address, json);\n      this.rewriteKey(json, key, hexAddr, _defaults.contractKey);\n    }\n  }, {\n    key: \"loadInjected\",\n    value: function loadInjected(address, meta) {\n      var json = {\n        address: address,\n        meta: _objectSpread(_objectSpread({}, meta), {}, {\n          isInjected: true\n        })\n      };\n      var pair = this.keyring.addFromAddress(address, json.meta);\n      this.accounts.add(this._store, pair.address, json);\n    }\n  }, {\n    key: \"allowGenesis\",\n    value: function allowGenesis(json) {\n      var _this6 = this;\n\n      if (json && json.meta && this.genesisHash) {\n        var hashes = Object.values(_chains.default).find(function (hashes) {\n          return hashes.includes(_this6.genesisHash || '');\n        }) || [this.genesisHash];\n\n        if (json.meta.genesisHash) {\n          return hashes.includes(json.meta.genesisHash);\n        } else if (json.meta.contract) {\n          return hashes.includes(json.meta.contract.genesisHash);\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"loadAll\",\n    value: function loadAll(options) {\n      var _this7 = this;\n\n      var injected = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n      _get(_getPrototypeOf(Keyring.prototype), \"initKeyring\", this).call(this, options);\n\n      this._store.all(function (key, json) {\n        if (options.filter ? options.filter(json) : true) {\n          if (_this7.allowGenesis(json)) {\n            if (_defaults.accountRegex.test(key)) {\n              _this7.loadAccount(json, key);\n            } else if (_defaults.addressRegex.test(key)) {\n              _this7.loadAddress(json, key);\n            } else if (_defaults.contractRegex.test(key)) {\n              _this7.loadContract(json, key);\n            }\n          }\n        }\n      });\n\n      injected.forEach(function (account) {\n        if (_this7.allowGenesis(account)) {\n          _this7.loadInjected(account.address, account.meta);\n        }\n      });\n\n      _options.default.init(this);\n    }\n  }, {\n    key: \"restoreAccount\",\n    value: function restoreAccount(json, password) {\n      var cryptoType = Array.isArray(json.encoding.content) ? json.encoding.content[1] : 'ed25519';\n      var encType = Array.isArray(json.encoding.type) ? json.encoding.type : [json.encoding.type];\n      var pair = (0, _pair.default)({\n        toSS58: this.encodeAddress,\n        type: cryptoType\n      }, {\n        publicKey: this.decodeAddress(json.address, true)\n      }, json.meta, (0, _util.isHex)(json.encoded) ? (0, _util.hexToU8a)(json.encoded) : (0, _utilCrypto.base64Decode)(json.encoded), encType); // unlock, save account and then lock (locking cleans secretKey, so needs to be last)\n\n      pair.decodePkcs8(password);\n      this.addPair(pair, password);\n      pair.lock();\n      return pair;\n    }\n  }, {\n    key: \"saveAccount\",\n    value: function saveAccount(pair, password) {\n      this.addTimestamp(pair);\n      var json = pair.toJson(password);\n      this.keyring.addFromJson(json);\n      this.accounts.add(this._store, pair.address, json);\n      return json;\n    }\n  }, {\n    key: \"saveAccountMeta\",\n    value: function saveAccountMeta(pair, meta) {\n      var _this8 = this;\n\n      var address = pair.address;\n\n      this._store.get((0, _defaults.accountKey)(address), function (json) {\n        pair.setMeta(meta);\n        json.meta = pair.meta;\n\n        _this8.accounts.add(_this8._store, address, json);\n      });\n    }\n  }, {\n    key: \"saveAddress\",\n    value: function saveAddress(address, meta) {\n      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'address';\n      var available = this.addresses.subject.getValue();\n      var json = available[address] && available[address].json || {\n        address: address,\n        meta: {\n          isRecent: undefined,\n          whenCreated: Date.now()\n        }\n      };\n      Object.keys(meta).forEach(function (key) {\n        json.meta[key] = meta[key];\n      });\n      delete json.meta.isRecent;\n\n      (0, _classPrivateFieldLooseBase2.default)(this, _stores)[_stores][type]().add(this._store, address, json);\n\n      return json;\n    }\n  }, {\n    key: \"saveContract\",\n    value: function saveContract(address, meta) {\n      return this.saveAddress(address, meta, 'contract');\n    }\n  }, {\n    key: \"saveRecent\",\n    value: function saveRecent(address) {\n      var available = this.addresses.subject.getValue();\n\n      if (!available[address]) {\n        this.addresses.add(this._store, address, {\n          address: address,\n          meta: {\n            genesisHash: this.genesisHash,\n            isRecent: true,\n            whenCreated: Date.now()\n          }\n        });\n      }\n\n      return this.addresses.subject.getValue()[address];\n    }\n  }]);\n\n  return Keyring;\n}(_Base.default);\n\nexports.Keyring = Keyring;\nvar keyringInstance = new Keyring();\nvar _default = keyringInstance;\nexports.default = _default;","map":{"version":3,"sources":["/mnt/c/Users/PC/Documents/PolkadotHelloWorld/PolkadotHelloWorld/Front-End-Project1/substrate-node-template/substrate-front-end-template/node_modules/@polkadot/ui-keyring/Keyring.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","Keyring","_defineProperty2","_classPrivateFieldLooseBase2","_classPrivateFieldLooseKey2","_pair","_chains","_util","_utilCrypto","_development","_Base","_defaults","_options","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","RECENT_EXPIRY","_stores","args","writable","account","accounts","address","addresses","contract","contracts","meta","pair","keyring","addFromAddress","isExternal","json","saveAccount","hardwareType","addExternal","isHardware","threshold","createKeyMulti","who","u8aSorted","map","decodeAddress","encodeAddress","isMultisig","bnToBn","toNumber","password","addPair","suri","type","addFromUri","isLocked","lock","decodePkcs8","toJson","createFromJson","createFromUri","whenEdited","Date","now","addFromJson","add","_store","removePair","remove","getAddress","available","subject","getValue","isDevelopment","isTesting","_address","isString","publicKey","stores","values","info","reduce","lastInfo","store","undefined","entries","genesisHash","getContract","hexAddr","creator","substr","set","encoded","split","rewriteKey","trim","accountKey","isRecent","whenCreated","isHex","hexToU8a","addressKey","contractKey","isInjected","hashes","find","includes","options","injected","all","allowGenesis","accountRegex","test","loadAccount","addressRegex","loadAddress","contractRegex","loadContract","loadInjected","init","cryptoType","Array","isArray","encoding","content","encType","toSS58","base64Decode","addTimestamp","get","setMeta","saveAddress","keyringInstance","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Keyring = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _pair = _interopRequireDefault(require(\"@polkadot/keyring/pair\"));\n\nvar _chains = _interopRequireDefault(require(\"@polkadot/ui-settings/defaults/chains\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _utilCrypto = require(\"@polkadot/util-crypto\");\n\nvar _development = _interopRequireDefault(require(\"./observable/development\"));\n\nvar _Base = _interopRequireDefault(require(\"./Base\"));\n\nvar _defaults = require(\"./defaults\");\n\nvar _options = _interopRequireDefault(require(\"./options\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst RECENT_EXPIRY = 24 * 60 * 60; // No accounts (or test accounts) should be loaded until after the chain determination.\n// Chain determination occurs outside of Keyring. Loading `keyring.loadAll({ type: 'ed25519' | 'sr25519' })` is triggered\n// from the API after the chain is received\n\nvar _stores = (0, _classPrivateFieldLooseKey2.default)(\"stores\");\n\nclass Keyring extends _Base.default {\n  constructor(...args) {\n    super(...args);\n    Object.defineProperty(this, _stores, {\n      writable: true,\n      value: {\n        account: () => this.accounts,\n        address: () => this.addresses,\n        contract: () => this.contracts\n      }\n    });\n  }\n\n  addExternal(address, meta = {}) {\n    const pair = this.keyring.addFromAddress(address, _objectSpread(_objectSpread({}, meta), {}, {\n      isExternal: true\n    }), null);\n    return {\n      json: this.saveAccount(pair),\n      pair\n    };\n  }\n\n  addHardware(address, hardwareType, meta = {}) {\n    return this.addExternal(address, _objectSpread(_objectSpread({}, meta), {}, {\n      hardwareType,\n      isHardware: true\n    }));\n  }\n\n  addMultisig(addresses, threshold, meta = {}) {\n    const address = (0, _utilCrypto.createKeyMulti)(addresses, threshold); // we could use `sortAddresses`, but rather use internal encode/decode so we are 100%\n\n    const who = (0, _util.u8aSorted)(addresses.map(who => this.decodeAddress(who))).map(who => this.encodeAddress(who));\n    return this.addExternal(address, _objectSpread(_objectSpread({}, meta), {}, {\n      isMultisig: true,\n      threshold: (0, _util.bnToBn)(threshold).toNumber(),\n      who\n    }));\n  }\n\n  addPair(pair, password) {\n    this.keyring.addPair(pair);\n    return {\n      json: this.saveAccount(pair, password),\n      pair\n    };\n  }\n\n  addUri(suri, password, meta = {}, type) {\n    const pair = this.keyring.addFromUri(suri, meta, type);\n    return {\n      json: this.saveAccount(pair, password),\n      pair\n    };\n  }\n\n  backupAccount(pair, password) {\n    if (!pair.isLocked) {\n      pair.lock();\n    }\n\n    pair.decodePkcs8(password);\n    return pair.toJson(password);\n  }\n\n  createFromJson(json, meta = {}) {\n    return this.keyring.createFromJson(_objectSpread(_objectSpread({}, json), {}, {\n      meta: _objectSpread(_objectSpread({}, json.meta || {}), {}, {\n        meta\n      })\n    }));\n  }\n\n  createFromUri(suri, meta = {}, type) {\n    return this.keyring.createFromUri(suri, meta, type);\n  }\n\n  encryptAccount(pair, password) {\n    const json = pair.toJson(password);\n    json.meta.whenEdited = Date.now();\n    this.keyring.addFromJson(json);\n    this.accounts.add(this._store, pair.address, json);\n  }\n\n  forgetAccount(address) {\n    this.keyring.removePair(address);\n    this.accounts.remove(this._store, address);\n  }\n\n  forgetAddress(address) {\n    this.addresses.remove(this._store, address);\n  }\n\n  forgetContract(address) {\n    this.contracts.remove(this._store, address);\n  }\n\n  getAccount(address) {\n    return this.getAddress(address, 'account');\n  }\n\n  getAccounts() {\n    const available = this.accounts.subject.getValue();\n    return Object.keys(available).map(address => this.getAddress(address, 'account')).filter(account => _development.default.isDevelopment() || account.meta.isTesting !== true);\n  }\n\n  getAddress(_address, type = null) {\n    const address = (0, _util.isString)(_address) ? _address : this.encodeAddress(_address);\n    const publicKey = this.decodeAddress(address);\n    const stores = type ? [(0, _classPrivateFieldLooseBase2.default)(this, _stores)[_stores][type]] : Object.values((0, _classPrivateFieldLooseBase2.default)(this, _stores)[_stores]);\n    const info = stores.reduce((lastInfo, store) => store().subject.getValue()[address] || lastInfo, undefined);\n    return info && {\n      address,\n      meta: info.json.meta,\n      publicKey\n    };\n  }\n\n  getAddresses() {\n    const available = this.addresses.subject.getValue();\n    return Object.keys(available).map(address => this.getAddress(address));\n  }\n\n  getContract(address) {\n    return this.getAddress(address, 'contract');\n  }\n\n  getContracts() {\n    const available = this.contracts.subject.getValue();\n    return Object.entries(available).filter(([, {\n      json: {\n        meta: {\n          contract\n        }\n      }\n    }]) => !!contract && contract.genesisHash === this.genesisHash).map(([address]) => this.getContract(address));\n  }\n\n  rewriteKey(json, key, hexAddr, creator) {\n    if (hexAddr.substr(0, 2) === '0x') {\n      return;\n    }\n\n    this._store.remove(key);\n\n    this._store.set(creator(hexAddr), json);\n  }\n\n  loadAccount(json, key) {\n    if (!json.meta.isTesting && json.encoded) {\n      // FIXME Just for the transition period (ignoreChecksum)\n      const pair = this.keyring.addFromJson(json, true);\n      this.accounts.add(this._store, pair.address, json);\n    }\n\n    const [, hexAddr] = key.split(':');\n    this.rewriteKey(json, key, hexAddr.trim(), _defaults.accountKey);\n  }\n\n  loadAddress(json, key) {\n    const {\n      isRecent,\n      whenCreated = 0\n    } = json.meta;\n\n    if (isRecent && Date.now() - whenCreated > RECENT_EXPIRY) {\n      this._store.remove(key);\n\n      return;\n    }\n\n    const address = this.encodeAddress((0, _util.isHex)(json.address) ? (0, _util.hexToU8a)(json.address) // FIXME Just for the transition period (ignoreChecksum)\n    : this.decodeAddress(json.address, true));\n    const [, hexAddr] = key.split(':');\n    this.addresses.add(this._store, address, json);\n    this.rewriteKey(json, key, hexAddr, _defaults.addressKey);\n  }\n\n  loadContract(json, key) {\n    const address = this.encodeAddress(this.decodeAddress(json.address));\n    const [, hexAddr] = key.split(':'); // move genesisHash to top-level (TODO Remove from contracts section?)\n\n    json.meta.genesisHash = json.meta.genesisHash || json.meta.contract && json.meta.contract.genesisHash;\n    this.contracts.add(this._store, address, json);\n    this.rewriteKey(json, key, hexAddr, _defaults.contractKey);\n  }\n\n  loadInjected(address, meta) {\n    const json = {\n      address,\n      meta: _objectSpread(_objectSpread({}, meta), {}, {\n        isInjected: true\n      })\n    };\n    const pair = this.keyring.addFromAddress(address, json.meta);\n    this.accounts.add(this._store, pair.address, json);\n  }\n\n  allowGenesis(json) {\n    if (json && json.meta && this.genesisHash) {\n      const hashes = Object.values(_chains.default).find(hashes => hashes.includes(this.genesisHash || '')) || [this.genesisHash];\n\n      if (json.meta.genesisHash) {\n        return hashes.includes(json.meta.genesisHash);\n      } else if (json.meta.contract) {\n        return hashes.includes(json.meta.contract.genesisHash);\n      }\n    }\n\n    return true;\n  }\n\n  loadAll(options, injected = []) {\n    super.initKeyring(options);\n\n    this._store.all((key, json) => {\n      if (options.filter ? options.filter(json) : true) {\n        if (this.allowGenesis(json)) {\n          if (_defaults.accountRegex.test(key)) {\n            this.loadAccount(json, key);\n          } else if (_defaults.addressRegex.test(key)) {\n            this.loadAddress(json, key);\n          } else if (_defaults.contractRegex.test(key)) {\n            this.loadContract(json, key);\n          }\n        }\n      }\n    });\n\n    injected.forEach(account => {\n      if (this.allowGenesis(account)) {\n        this.loadInjected(account.address, account.meta);\n      }\n    });\n\n    _options.default.init(this);\n  }\n\n  restoreAccount(json, password) {\n    const cryptoType = Array.isArray(json.encoding.content) ? json.encoding.content[1] : 'ed25519';\n    const encType = Array.isArray(json.encoding.type) ? json.encoding.type : [json.encoding.type];\n    const pair = (0, _pair.default)({\n      toSS58: this.encodeAddress,\n      type: cryptoType\n    }, {\n      publicKey: this.decodeAddress(json.address, true)\n    }, json.meta, (0, _util.isHex)(json.encoded) ? (0, _util.hexToU8a)(json.encoded) : (0, _utilCrypto.base64Decode)(json.encoded), encType); // unlock, save account and then lock (locking cleans secretKey, so needs to be last)\n\n    pair.decodePkcs8(password);\n    this.addPair(pair, password);\n    pair.lock();\n    return pair;\n  }\n\n  saveAccount(pair, password) {\n    this.addTimestamp(pair);\n    const json = pair.toJson(password);\n    this.keyring.addFromJson(json);\n    this.accounts.add(this._store, pair.address, json);\n    return json;\n  }\n\n  saveAccountMeta(pair, meta) {\n    const address = pair.address;\n\n    this._store.get((0, _defaults.accountKey)(address), json => {\n      pair.setMeta(meta);\n      json.meta = pair.meta;\n      this.accounts.add(this._store, address, json);\n    });\n  }\n\n  saveAddress(address, meta, type = 'address') {\n    const available = this.addresses.subject.getValue();\n    const json = available[address] && available[address].json || {\n      address,\n      meta: {\n        isRecent: undefined,\n        whenCreated: Date.now()\n      }\n    };\n    Object.keys(meta).forEach(key => {\n      json.meta[key] = meta[key];\n    });\n    delete json.meta.isRecent;\n\n    (0, _classPrivateFieldLooseBase2.default)(this, _stores)[_stores][type]().add(this._store, address, json);\n\n    return json;\n  }\n\n  saveContract(address, meta) {\n    return this.saveAddress(address, meta, 'contract');\n  }\n\n  saveRecent(address) {\n    const available = this.addresses.subject.getValue();\n\n    if (!available[address]) {\n      this.addresses.add(this._store, address, {\n        address,\n        meta: {\n          genesisHash: this.genesisHash,\n          isRecent: true,\n          whenCreated: Date.now()\n        }\n      });\n    }\n\n    return this.addresses.subject.getValue()[address];\n  }\n\n}\n\nexports.Keyring = Keyring;\nconst keyringInstance = new Keyring();\nvar _default = keyringInstance;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}